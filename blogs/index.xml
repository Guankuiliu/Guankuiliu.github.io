<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>Blogs on </title>
    <link>https://www.metasphinx.com/blogs/</link>
    <description>Recent content in Blogs on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>endrhythmATgmail.com (Guankui Liu)</managingEditor>
    <webMaster>endrhythmATgmail.com (Guankui Liu)</webMaster>
    <copyright>Â©2025, All Rights Reserved</copyright>
    <lastBuildDate>Sat, 15 Mar 2025 21:00:06 +0900</lastBuildDate>
    
        <atom:link href="https://www.metasphinx.com/blogs/index.xml" rel="self" type="application/rss+xml" />
    

      
      <item>
        <title>Deep Quantile Regression</title>
        <link>https://www.metasphinx.com/blogs/2025/deep_quantile_regression/</link>
        <pubDate>Sat, 15 Mar 2025 21:00:06 +0900</pubDate>
        <author>endrhythmATgmail.com (Guankui Liu)</author>
        <atom:modified>Sat, 15 Mar 2025 21:00:06 +0900</atom:modified>
        <guid>https://www.metasphinx.com/blogs/2025/deep_quantile_regression/</guid>
        <description>deep QGM Network Architecture  digraph {graph [size=&amp;quot;22.05,22.05&amp;quot;]node [align=left fontname=monospace fontsize=10 height=0.2 ranksep=0.1 shape=box style=filled]139945457199760 [label=&amp;quot;(1, 9)&amp;quot; fillcolor=darkolivegreen1]139945434913568 [label=CatBackward0]139945434913664 -&amp;gt; 139945434913568139945434913664 [label=AddmmBackward0]139945434914000 -&amp;gt; 139945434913664139945437824480 [label=&amp;quot;outputs.0.bias(1)&amp;quot; fillcolor=lightblue]139945437824480 -&amp;gt; 139945434914000139945434914000 [label=AccumulateGrad]139945434913952 -&amp;gt; 139945434913664139945434913952 [label=ReluBackward0]139945434914096 -&amp;gt; 139945434913952139945434914096 [label=AddmmBackward0]139945434914240 -&amp;gt; 139945434914096139945459033088 [label=&amp;quot;fc2.bias(10)&amp;quot; fillcolor=lightblue]139945459033088 -&amp;gt; 139945434914240139945434914240 [label=AccumulateGrad]139945434914192 -&amp;gt; 139945434914096139945434914192 [label=ReluBackward0]139945434914336 -&amp;gt; 139945434914192139945434914336 [label=AddmmBackward0]139945434914528 -&amp;gt; 139945434914336139945457179680 [label=&amp;quot;fc1.</description>
        
        <dc:creator>Guankui Liu</dc:creator>
        <media:content url="https://www.metasphinx.com/images/feature2/graph.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>Python</category>
            
          
        
        
          
            
              <category>Vis</category>
            
          
        
        
          
            
          
        
      </item>
      
      <item>
        <title>Data Visualization with Makie</title>
        <link>https://www.metasphinx.com/blogs/2023/2023-01-11-julia_data_science/</link>
        <pubDate>Wed, 11 Jan 2023 00:00:00 +0000</pubDate>
        <author>endrhythmATgmail.com (Guankui Liu)</author>
        <atom:modified>Wed, 11 Jan 2023 00:00:00 +0000</atom:modified>
        <guid>https://www.metasphinx.com/blogs/2023/2023-01-11-julia_data_science/</guid>
        <description>Makie.jl is the front end package that defines all plotting functions required to create plot objects. To convert these plot objects to an image, three main back ends which concretely implement all abstract ren-dering capabilities defined in Makie.
 CairoMakie.j: a non-interactive 2D publication-quality vector graphics. GLMakie.j: a interactive 2D and 3D plot-ting in standalone GLFW.jl windows. WGLMakie.jl: a WebGL-based interactive 2D and 3D plotting that runs within browsers.  CairoMakie.</description>
        
        <dc:creator>PolyMax</dc:creator>
        <media:content url="https://www.metasphinx.com/images/BookCover/Julia_Data_Science.svg" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>Julia</category>
            
          
        
        
          
            
              <category>Book</category>
            
          
        
        
      </item>
      
      <item>
        <title>Julia plotting packages</title>
        <link>https://www.metasphinx.com/blogs/2023/2023-01-09-julia_graphics/</link>
        <pubDate>Mon, 09 Jan 2023 00:00:00 +0000</pubDate>
        <author>endrhythmATgmail.com (Guankui Liu)</author>
        <atom:modified>Mon, 09 Jan 2023 00:00:00 +0000</atom:modified>
        <guid>https://www.metasphinx.com/blogs/2023/2023-01-09-julia_graphics/</guid>
        <description>Plots 1 2 3 4 5 6  # pkg&amp;gt; add Plots PyPlot GR UnicodePlots using Plots # pyplot() # PyPlot backend eq(d) = -7.65 * sind(d) + 9.87 * sind(2d + 206) plot(eq, 1:365)   UnicodePlots 1 2 3 4 5  # add UnicodePlots using UnicodePlots FirstLinePlot = lineplot([1, 2, 3, 7], [1, 2, -5, 7], title = &amp;#34;First Line Plot&amp;#34;, border = :dotted) UnicodePlots.savefig(FirstLinePlot, &amp;#34;FirstLinePlot.txt&amp;#34;)   1 2  FirstDensityPlot = densityplot(collect(1:100), randn(100), border = :dotted) UnicodePlots.</description>
        
        <dc:creator>PolyMax</dc:creator>
        <media:content url="https://www.metasphinx.com/images/BookCover/Learn_Julia_Programming.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>Julia</category>
            
          
        
        
          
            
              <category>Book</category>
            
          
        
        
      </item>
      

    
  </channel>
</rss>
