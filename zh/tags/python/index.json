[{"content":"拖网S型曲线 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39  import numpy as np from scipy import stats import matplotlib.pyplot as plt fig = plt.figure() ax = fig.add_subplot(111) x = np.linspace(0, 650, 1000) xbar = -50 xvar = 10 for age in np.arange(1, 6): xbar += 100 xvar += 10 y = stats.norm.pdf(x, xbar, xvar) ax.plot(x, y, c = \u0026#39;b\u0026#39;) ax.text(xbar, max(y)*1.05, \u0026#39;Age \u0026#39; + str(age), ha = \u0026#39;center\u0026#39;, fontsize = 12, c = \u0026#39;b\u0026#39;, fontweight = \u0026#39;bold\u0026#39;) ax.tick_params(axis=\u0026#39;y\u0026#39;, colors=\u0026#39;b\u0026#39;) ax.set_ylabel(\u0026#39;Fish abundance ($Kg$)\u0026#39;, fontsize = 13, c = \u0026#39;b\u0026#39;, fontweight = \u0026#39;bold\u0026#39;) ax.set_yticks([0, 0.01, 0.02, 0.03], [\u0026#39;$1.0^7$\u0026#39;, \u0026#39;$1.1^7$\u0026#39;, \u0026#39;$1.2^7$\u0026#39;, \u0026#39;$1.3^7$\u0026#39;]) ax.set_xlabel(\u0026#39;Fish Size\u0026#39;, fontsize = 15, fontweight = \u0026#39;bold\u0026#39;) ax.axes.xaxis.set_ticks([]) ax.spines[\u0026#39;right\u0026#39;].set_visible(False) ax.spines[\u0026#39;top\u0026#39;].set_visible(False) ax.spines[\u0026#39;bottom\u0026#39;].set_linewidth(2) ax.spines[\u0026#39;left\u0026#39;].set_color(\u0026#39;b\u0026#39;) ax.spines[\u0026#39;left\u0026#39;].set_linewidth(2) ax.set_xlim(0, 620) ax.set_ylim(0, 0.03) ax2 = ax.twinx() ax2.plot(np.arange(600), 1/(1+np.exp(0.02*(250-np.arange(600)))), color = \u0026#39;r\u0026#39;, lw = 2) ax2.spines[\u0026#39;top\u0026#39;].set_visible(False) ax2.spines[\u0026#39;right\u0026#39;].set_visible(True) ax2.spines[\u0026#39;right\u0026#39;].set_color(\u0026#39;red\u0026#39;) ax2.spines[\u0026#39;right\u0026#39;].set_linewidth(2) ax2.tick_params(axis = \u0026#39;y\u0026#39;, colors = \u0026#39;r\u0026#39;) ax2.set_ylabel(\u0026#39;Selective probability\u0026#39;, fontsize = 13, c = \u0026#39;r\u0026#39;, fontweight = \u0026#39;bold\u0026#39;, labelpad = 10)   ","description":"Sigmoid Curve","id":2,"section":"posts","tags":["Python"],"title":"拖网选择性曲线","uri":"https://www.metasphinx.com/zh/posts/2023/2023-07-15-trawl-selectiviry/"},{"content":"将单个PDF文件分页保存 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  import PyPDF2 pdf_file = open(\u0026#39;./file.pdf\u0026#39;, \u0026#39;rb\u0026#39;) pdf_reader = PyPDF2.PdfReader(pdf_file) for page_num in range(len(pdf_reader.pages)): page = pdf_reader.pages[page_num] pdf_writer = PyPDF2.PdfWriter() pdf_writer.add_page(page) output_file_name = f\u0026#39;page_{page_num+1}.pdf\u0026#39; output_file = open(output_file_name, \u0026#39;wb\u0026#39;) pdf_writer.write(output_file) output_file.close() pdf_file.close()   提取PDF中关键字所在的句子 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  import pdfplumber import re def extract_sentences_with_keyword(pdf_path, txt_path, keyword): with pdfplumber.open(pdf_path) as pdf: with open(txt_path, \u0026#39;w\u0026#39;, encoding=\u0026#39;utf-8\u0026#39;) as txt_file: for page in pdf.pages: text = page.extract_text() if text: text = text.replace(\u0026#39;\\n\u0026#39;, \u0026#39; \u0026#39;).replace(\u0026#39;\\r\u0026#39;, \u0026#39;\u0026#39;) # 去除换行符和回车符 sentences = re.split(\u0026#39;[.!?。！？]\u0026#39;, text) # 将文本按句子分割 for sentence in sentences: sentence = sentence.strip() # 去除句子两端的空格 if keyword in sentence: txt_file.write(sentence + \u0026#39;\\n\u0026#39;) # 将含有关键词的句子写入文本文件 pdf_file = \u0026#39;file.pdf\u0026#39; txt_file = \u0026#39;file.txt\u0026#39; keyword = \u0026#39;海洋热浪\u0026#39; extract_sentences_with_keyword(pdf_file, txt_file, keyword)   ","description":"分页保存为单个PDF文件以及提取含有关键词的句子","id":3,"section":"posts","tags":["Python"],"title":"Python处理PDF文件","uri":"https://www.metasphinx.com/zh/posts/2023/2023-07-11-pypdf2/"},{"content":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  import matplotlib import numpy as np import matplotlib.pyplot as plt from mpl_toolkits.basemap import Basemap matplotlib.rcParams[\u0026#39;font.sans-serif\u0026#39;] = [\u0026#39;SimHei\u0026#39;] mp = Basemap(width = 4500000, height = 4000000, projection = \u0026#39;aea\u0026#39;, resolution = \u0026#39;l\u0026#39;, lon_0 = 125, lat_0 = 25) mp.drawcoastlines() mp.drawcountries() mp.drawmapboundary(fill_color = \u0026#39;aqua\u0026#39;) mp.fillcontinents(color = \u0026#39;pink\u0026#39;, lake_color = \u0026#39;b\u0026#39;) mp.drawmeridians(np.arange(-180., 181., 20.), labels = [0, 0, 0, 1], fontsize = 12) mp.drawparallels([12, 26.5, 35], labels = [1, 0, 0, 0], fontsize = 12, linewidth = 2, color=\u0026#39;red\u0026#39;, dashes=[2, 2]) ax = plt.gca() plt.annotate(u\u0026#34;渤海\u0026#34;, xy = (0.38, 0.86), xycoords = \u0026#39;axes fraction\u0026#39;, color = \u0026#39;r\u0026#39;, fontsize = 12) plt.annotate(u\u0026#34;黄海\u0026#34;, xy = (0.42, 0.72), xycoords = \u0026#39;axes fraction\u0026#39;, color = \u0026#39;r\u0026#39;, fontsize = 12) plt.annotate(u\u0026#34;东海\u0026#34;, xy = (0.46, 0.60), xycoords = \u0026#39;axes fraction\u0026#39;, color = \u0026#39;r\u0026#39;, fontsize = 12) plt.annotate(u\u0026#34;南海\u0026#34;, xy = (0.20, 0.18), xycoords = \u0026#39;axes fraction\u0026#39;, color = \u0026#39;r\u0026#39;, fontsize = 12) box = dict(fc = \u0026#39;w\u0026#39;, ec = \u0026#39;k\u0026#39;, alpha = 0.9) plt.annotate(u\u0026#34;5月1日12时至9月1日12时\u0026#34;, xy = (0.38, 0.81), xycoords = \u0026#39;axes fraction\u0026#39;, fontsize = 12, bbox = box) plt.annotate(u\u0026#34;5月1日12时至9月16日12时\u0026#34;, xy = (0.46, 0.66), xycoords = \u0026#39;axes fraction\u0026#39;, fontsize = 12, bbox = box) plt.annotate(u\u0026#34;5月1日12时至8月16日12时\u0026#34;, xy = (0.20, 0.27), xycoords = \u0026#39;axes fraction\u0026#39;, fontsize = 12, bbox = box) plt.show()   ","description":"Basemap作图","id":4,"section":"posts","tags":["Python","Fishery"],"title":"2023年中国海伏季休渔时间","uri":"https://www.metasphinx.com/zh/posts/2023/2023-07-10-2023_fishing_closure/"},{"content":"颜色填充 多边形的颜色填充 规则多边形的颜色填充 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  import numpy as np import matplotlib.pyplot as plt x = [0, 0, 5, 10, 15, 15, 10, 5] y = [5, 10, 15, 15, 10, 5, 0, 0] plt.fill(x, y, color = \u0026#39;cornflowerblue\u0026#39;) plt.xlim(-1, 16) plt.ylim(-1, 16) plt.xticks(np.arange(0, 16, 5)) plt.yticks(np.arange(0, 16, 5)) plt.show()   不规则多边形的颜色填充 1 2 3 4 5 6 7 8 9 10 11 12  x = np.linspace(0, 2*np.pi, 500) y = np.sin(x) plt.fill(x, y, color = \u0026#39;cornflowerblue\u0026#39;, alpha = 0.4) plt.plot(x, y, color = \u0026#39;cornflowerblue\u0026#39;, alpha = 0.8) plt.plot([x[0], x[-1]], [y[0], y[-1]], color = \u0026#39;cornflowerblue\u0026#39;, alpha = 0.8) plt.xlim(0, 2*np.pi) plt.ylim(-1.1, 1.1) plt.show()   交叉曲线的颜色填充 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  x = np.linspace(0, 2, 500) y1 = np.sin(2*np.pi*x) y2 = 1.1*np.sin(3*np.pi*x) fig, ax = plt.subplots(3, 1, sharex = \u0026#39;all\u0026#39;) # \u0026#34;between y2 and 0\u0026#34; ax[0].fill_between(x, 0, y2, alpha = 0.5) ax[0].set_ylim(-1.2, 1.2) # \u0026#34;between y2 and 1.1\u0026#34; ax[1].fill_between(x, y2, 1.1, alpha = 0.5) ax[1].set_ylim(-1.2, 1.2) # \u0026#34;between y1 and y20\u0026#34; ax[2].fill_between(x, y1, y2, alpha = 0.5) ax[2].set_ylim(-1.2, 1.2) plt.show()   延伸阅读 水平方向的交叉曲线的颜色填充方法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  x = np.linspace(0, 2, 500) y1 = np.sin(2*np.pi*x) y2 = 1.1 * np.sin(3*np.pi*x) fig = plt.figure() ax = fig.add_subplot(111) # plot yq and plot y2 ax.plot(x, y1, color = \u0026#39;k\u0026#39;, lw = 1, ls = \u0026#39;-\u0026#39;) ax.plot(x, y2, color = \u0026#39;k\u0026#39;, lw = 1, ls = \u0026#39;-\u0026#39;) # \u0026#39;where y1\u0026lt;=y2\u0026#39; ax.fill_between(x, y1, y2, where = y2\u0026gt;=y1, interpolate = True, facecolor = \u0026#39;cornflowerblue\u0026#39;, alpha = 0.7) # \u0026#39;where y1\u0026gt;=y2\u0026#39; ax.fill_between(x, y1, y2, where = y2\u0026lt;=y1, interpolate = True, facecolor = \u0026#39;darkred\u0026#39;, alpha = 0.7) ax.set_xlim(0, 2) ax.set_ylim(-1.2, 1.2) ax.grid(ls = \u0026#39;:\u0026#39;, lw = 1, color = \u0026#39;gray\u0026#39;, alpha = 0.5) plt.show()   垂直方向的交叉曲线的颜色填充方法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  y = np.linspace(0, 2, 500) x1 = np.sin(2*np.pi*y) x2 = 1.1*np.sin(3*np.pi*y) fig = plt.figure() ax = fig.add_subplot(111) # plot x1 and x2 ax.plot(x1, y, color = \u0026#39;k\u0026#39;, lw = 1, ls = \u0026#39;-\u0026#39;) ax.plot(x2, y, color = \u0026#39;k\u0026#39;, lw = 1, ls = \u0026#39;-\u0026#39;) # \u0026#39;where x1\u0026lt;=x2\u0026#39; ax.fill_betweenx(y, x1, x2, where = x2\u0026gt;=x1, facecolor = \u0026#39;cornflowerblue\u0026#39;, alpha=0.7) # \u0026#39;where x1\u0026gt;=x2\u0026#39; ax.fill_betweenx(y, x1, x2, where = x2\u0026lt;=x1, facecolor = \u0026#39;darkred\u0026#39;, alpha=0.7) ax.set_xlim(-1.2, 1.2) ax.set_ylim(0, 2) ax.grid(ls = \u0026#39;:\u0026#39;, lw = 1, color = \u0026#39;gray\u0026#39;, alpha = 0.5) plt.show()   综合案例：交叉间断型曲线的颜色填充 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47  fig, ax = plt.subplots(1, 2) # sunplot(121) data x = np.linspace(0, 2, 500) y1 = np.sin(2*np.pi*x) y2 = 1.2*np.sin(3*np.pi*x) y2 = np.ma.masked_greater(y2, 1.0) # plot y1 and y2 ax[0].plot(x, y1, color = \u0026#39;k\u0026#39;, lw = 1, ls = \u0026#39;-\u0026#39;) ax[0].plot(x, y2, color = \u0026#39;k\u0026#39;, lw = 1, ls = \u0026#39;-\u0026#39;) # \u0026#39;where ya \u0026lt;= y2\u0026#39; ax[0].fill_between(x, y1, y2, where = y2\u0026gt;=y1, facecolor = \u0026#39;cornflowerblue\u0026#39;, alpha = 0.7) # \u0026#39;where y1\u0026gt;=y2\u0026#39; ax[0].fill_between(x, y1, y2, where = y2\u0026lt;=y1, facecolor = \u0026#39;darkred\u0026#39;, alpha = 0.5) ax[0].set_xlim(0, 2) ax[0].set_ylim(-1.2, 1.2) ax[0].grid(ls = \u0026#39;:\u0026#39;, lw = 1, color = \u0026#39;gray\u0026#39;, alpha = 0.5) # subplot(122) data y = np.linspace(0, 2, 500) x1 = np.sin(2*np.pi*y) x2 = 1.2*np.sin(3*np.pi*y) x2 = np.ma.masked_greater(x2, 1.0) # plot x1 and x2 ax[1].plot(x1, y, color = \u0026#39;k\u0026#39;, lw = 1, ls = \u0026#39;-\u0026#39;) ax[1].plot(x2, y, color = \u0026#39;k\u0026#39;, lw = 1, ls = \u0026#39;-\u0026#39;) # \u0026#39;where x1\u0026lt;=x2\u0026#39; ax[1].fill_betweenx(y, x1, x2, where = x2\u0026gt;=x1, facecolor = \u0026#39;cornflowerblue\u0026#39;, alpha = 0.7) # \u0026#39;where x1\u0026gt;=x2 ax[1].fill_betweenx(y, x1, x2, where = x2\u0026lt;=x1, facecolor = \u0026#39;darkred\u0026#39;, alpha = 0.7) ax[1].set_xlim(-1.2, 1.2) ax[1].set_ylim(0, 2) ax[1].grid(ls = \u0026#39;:\u0026#39;, lw = 1, color = \u0026#39;gray\u0026#39;, alpha = 0.5) plt.show()   patches模块 圆的实现方法 1 2 3 4 5 6 7  import numpy as np # import matplotlib as mpl import matplotlib.pyplot as plt from matplotlib.patches import Arc, Circle, Ellipse, Rectangle, Wedge, Shadow # from jupyterthemes import jtplot # jtplot.style() # mpl.style.use(\u0026#39;ggplot\u0026#39;)   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37  fig, ax = plt.subplots(2, 2) # subplot(221) circle = Circle((2,2), radius = 2, facecolor = \u0026#39;white\u0026#39;, edgecolor = \u0026#39;cornflowerblue\u0026#39;) ax[0, 0].add_patch(circle) ax[0, 0].set_xlim(-1, 5) ax[0, 0].set_ylim(-1, 5) # subplot(222) rectangle = ax[0, 1].patch rectangle.set_facecolor(\u0026#39;gold\u0026#39;) circle = Circle((2,2), radius = 2, facecolor = \u0026#39;white\u0026#39;, edgecolor = \u0026#39;cornflowerblue\u0026#39;) ax[0, 1].add_patch(circle) ax[0, 1].set_xlim(-1, 5) ax[0, 1].set_ylim(-1, 5) ax[0, 1].set_aspect(\u0026#39;equal\u0026#39;, \u0026#39;box\u0026#39;) # subplot(223) rectangle = ax[1,0].patch rectangle.set_facecolor(\u0026#34;palegreen\u0026#34;) circle = Circle((2, 2), radius=2, facecolor = \u0026#34;white\u0026#34;, edgecolor = \u0026#34;cornflowerblue\u0026#34;) ax[1, 0].add_patch(circle) ax[1, 0].axis(\u0026#34;equal\u0026#34;) # subplot(224) rectangle = ax[1,1].patch rectangle.set_facecolor(\u0026#34;lightskyblue\u0026#34;) circle = Circle((2, 2), radius = 2, facecolor = \u0026#34;white\u0026#34;,edgecolor = \u0026#34;cornflowerblue\u0026#34;) ax[1, 1].add_patch(circle) ax[1, 1].axis([-1,5, -1,5]) ax[1, 1].set_yticks(np.arange(-1, 6, 1)) ax[1, 1].axis(\u0026#34;equal\u0026#34;) plt.subplots_adjust(left = 0.1) plt.show()   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  fig, ax = plt.subplots(1, 2, subplot_kw={\u0026#39;aspect\u0026#39;:\u0026#39;equal\u0026#39;}) # subplot(121) angles = np.linspace(0, 135, 4) ellipse = [Ellipse((2, 2), 4, 2, a) for a in angles] for elle in ellipse: ax[0].add_patch(elle) elle.set_alpha(0.4) elle.set_color(\u0026#34;cornflowerblue\u0026#34;) ax[0].axis([-1, 5, -1, 5]) # subplot(122) num = np.arange(0, 100, 1) ellipse = [Ellipse(xy = np.random.rand(2)*10, width = np.random.rand(1), height = np.random.rand(1), angle = np.random.rand(1)*360) for i in num] for elle in ellipse: ax[1].add_patch(elle) elle.set_alpha(float(np.random.rand(1))) elle.set_color(np.random.rand(3)) ax[1].axis([-1, 11, -1, 11]) plt.tight_layout() plt.show()   矩形实现方法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41  fig, ax = plt.subplots(subplot_kw={\u0026#39;aspect\u0026#39;:\u0026#39;equal\u0026#39;}) x1 = np.arange(1, 2.6, 0.1) y1 = x1 + 2 x2 = np.arange(2.5, 4.1, 0.1) y2 = -x2 + 7 # set background color rectangle = ax.patch rectangle.set_facecolor(\u0026#39;lightskyblue\u0026#39;) # house rectangle1 = Rectangle((1, 0), 3, 3, facecolor = \u0026#39;w\u0026#39;, edgecolor = \u0026#39;rosybrown\u0026#39;) # door rectangle2 = Rectangle((1.5, 0), 1, 1.5, facecolor = \u0026#39;w\u0026#39;, edgecolor = \u0026#39;rosybrown\u0026#39;, hatch = \u0026#39;|||\u0026#39;) # window rectangle3 = Rectangle((2.9, 1.7), 0.6, 0.6, edgecolor = \u0026#39;rosybrown\u0026#39;) rectangle_list = [rectangle1, rectangle2, rectangle3] # roof line ax.plot([1, 2.5, 4], [3, 4.5, 3], color = \u0026#39;rosybrown\u0026#39;) # window line ax.plot([3.2, 3.2], [1.7, 2.3], color = \u0026#39;rosybrown\u0026#39;) ax.plot([2.9, 3.5], [2.0, 2.0], color = \u0026#39;rosybrown\u0026#39;) # roof filled color ax.fill_between(x1, 3, y1, color = \u0026#39;w\u0026#39;, interpolate = True) ax.fill_between(x2, 3, y2, color = \u0026#39;w\u0026#39;, interpolate = True) for rect in rectangle_list: ax.add_patch(rect) ax.axis([0, 5, 0, 6]) plt.grid(False) plt.show()   圆弧和楔形的绘制方法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55  fig, ax = plt.subplots(subplot_kw = {\u0026#39;aspect\u0026#39;:\u0026#39;equal\u0026#39;}) # shadow shadow = Ellipse((2.5, 0.5), 4.2, 0.5, color = \u0026#39;silver\u0026#39;, alpha = 0.2) \u0026#39;\u0026#39; # base ax.plot([1, 4], [1, 1.3], color = \u0026#39;k\u0026#39;) base = Arc((2.5, 1.1), 3, 1, angle = 10, theta1 = 0, theta2 = 180, color= \u0026#39;k\u0026#39;, alpha = 0.8) # wheel  left_wheel = Ellipse((1, 1), 0.7, 0.4, angle = 95, color = \u0026#39;k\u0026#39;) right_wheel = Ellipse((4, 1.3), 0.7, 0.4, angle = 85, color = \u0026#39;k\u0026#39;) # joinstyle bottom_joinstyle1 = Ellipse((2.5, 2), 1, 0.3, facecolor = \u0026#39;silver\u0026#39;, edgecolor = \u0026#39;w\u0026#39;) bottom_joinstyle2 = Ellipse((2.5, 1.7), 1, 0.3, facecolor = \u0026#39;silver\u0026#39;, edgecolor = \u0026#39;w\u0026#39;) left_joinstyle = Ellipse((1.5, 0.75), 0.5, 0.25, angle = 90, color = \u0026#39;k\u0026#39;) left_arm_jointstyle1 = Wedge((0.3, 4.55), 0.1, 0, 360, color = \u0026#39;k\u0026#39;) left_arm_jointstyle2 = Wedge((0, 4.0), 0.2, 290, 250, color = \u0026#39;k\u0026#39;) right_jointstyle = Ellipse((4, 5.75), 0.5, 0.25, angle = 90, color = \u0026#39;k\u0026#39;) right_arm_jointstyle1 = Wedge((4.3, 6.95), 0.1, 0, 360, color = \u0026#39;k\u0026#39;) right_arm_jointstyle2 = Wedge((4.3, 7.45), 0.2,110, 70, color = \u0026#39;k\u0026#39;) top_jointstyle1 = Ellipse((2.5, 6.2), 0.5, 0.2, facecolor = \u0026#39;silver\u0026#39;, edgecolor = \u0026#39;w\u0026#39;) top_jointstyle2 = Ellipse((2.5, 6.3), 0.5, 0.2, facecolor = \u0026#39;silver\u0026#39;, edgecolor = \u0026#39;w\u0026#39;) # body body = Rectangle((1, 2.1), 3, 4, color = \u0026#39;steelblue\u0026#39;) # arms left_arm1 = ax.plot([0.3, 1-0.125], [4.55, 5.75], color = \u0026#34;silver\u0026#34;, lw = 4) left_arm2 = ax.plot([0, 0.3], [4.2,4.55], color = \u0026#34;silver\u0026#34;, lw = 4) right_arm1 = ax.plot([4+0.125, 4.3], [5.75, 6.95], color = \u0026#34;silver\u0026#34;, lw = 4) right_arm2 = ax.plot([4.3, 4.3], [6.95, 7.25], color = \u0026#34;silver\u0026#34;, lw = 4) # head ax.plot([1 ,4], [6.4, 6.4], color = \u0026#34;steelblue\u0026#34;) ax.plot([1,4],[6.4,6.4],color=\u0026#34;steelblue\u0026#34;) head = Arc((2.5, 6.4), 3, 2.5, angle = 0, theta1 = 0, theta2 = 180, color = \u0026#34;steelblue\u0026#34;) # eyes left_eye = Wedge((2, 7), 0.4, 0, 360, color = \u0026#34;gold\u0026#34;) left_eye_center = Wedge((2, 7), 0.3, 15, 345, color = \u0026#34;k\u0026#34;) right_eye = Wedge((3, 7), 0.4, 0, 360, color = \u0026#34;k\u0026#34;) right_eye_center = Wedge((3, 7), 0.3, 165, 195, color = \u0026#34;darkred\u0026#34;) polygon = [shadow, base, left_wheel, right_wheel, bottom_joinstyle1, bottom_joinstyle2, left_joinstyle, left_arm_jointstyle1, left_arm_jointstyle2, right_jointstyle, right_arm_jointstyle1, right_arm_jointstyle2, top_jointstyle1, top_jointstyle1, body, head, left_eye, left_eye_center, right_eye, right_eye_center] for pln in polygon: ax.add_patch(pln) ax.axis([-1, 6, 0, 10]) plt.show()   延伸阅读 使用折线绘制圆 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34  fig, ax = plt.subplots(2, 2) x = np.linspace(0, 2*np.pi, 500) y1 = 2 * np.cos(x) y2 = 2 * np.sin(x) # subplot(221) ax[0, 0].plot(y1, y2, color = \u0026#39;cornflowerblue\u0026#39;, lw = 2) ax[0, 0].set_xlim(-3, 3) ax[0, 0].set_ylim(-3, 3) # subplot(222) rectangle = ax[0, 1].patch rectangle.set_facecolor(\u0026#39;gold\u0026#39;) ax[0, 1].plot(y1, y2, color = \u0026#39;cornflowerblue\u0026#39;, lw = 2) ax[0, 1].set_xlim(-3, 3) ax[0, 1].set_ylim(-3, 3) ax[0, 1].set_aspect(\u0026#39;equal\u0026#39;, \u0026#39;box\u0026#39;) # subplot(223) rectangle = ax[1, 0].patch rectangle.set_facecolor(\u0026#34;palegreen\u0026#34;) ax[1, 0].plot(y1, y2, color = \u0026#34;cornflowerblue\u0026#34;, lw = 2) ax[1, 0].axis(\u0026#34;equal\u0026#34;) # subplot(224) rectangle = ax[1, 1].patch rectangle.set_facecolor(\u0026#34;lightskyblue\u0026#34;) ax[1, 1].plot(y1, y2, color = \u0026#34;cornflowerblue\u0026#34;, lw = 2) ax[1, 1].axis([-3, 3, -3, 3]) ax[1, 1].set_yticks(np.arange(-3, 4, 1)) ax[1, 1].axis(\u0026#34;equal\u0026#34;) plt.subplots_adjust(left = 0.1) plt.show()   使用椭圆绘制圆 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  fig, ax = plt.subplots(1, 1, subplot_kw = {\u0026#39;aspect\u0026#39;:\u0026#39;equal\u0026#39;}) circle = Circle((2, 2), radius = 1) angles = np.linspace(0, 135, 4) ellipse = [Ellipse((2, 2), 2, 2, a) for a in angles] ellipse.append(circle) polygon = ellipse for pln in polygon: ax.add_patch(pln) pln.set_alpha(float(np.random.rand(1))) pln.set_color(np.random.rand(3)) ax.axis([0, 4, 0, 4]) ax.set_xticks(np.arange(0, 5, 1)) ax.set_yticks(np.arange(0, 5, 1)) plt.show()   使用楔形绘制饼图 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  fig, ax = plt.subplots(subplot_kw = {\u0026#39;aspect\u0026#39;:\u0026#39;equal\u0026#39;}) font_style = {\u0026#39;family\u0026#39;:\u0026#39;serif\u0026#39;, \u0026#39;size\u0026#39;:12, \u0026#39;style\u0026#39;:\u0026#39;italic\u0026#39;, \u0026#39;weight\u0026#39;:\u0026#39;black\u0026#39;} sample_data = [350, 150, 200, 300] total = sum(sample_data) percents = [i/float(total) for i in sample_data] angles = [360*i for i in percents] delta = 45 wedge1 = Wedge((2,2), 1, delta, delta+sum(angles[0:1]), color = \u0026#39;orange\u0026#39;) wedge2 = Wedge((2,1.9), 1, delta+sum(angles[0:1]), delta+sum(angles[0:2]), facecolor = \u0026#39;steelblue\u0026#39;, edgecolor = \u0026#39;white\u0026#39;) wedge3 = Wedge((2,1.9), 1, delta+sum(angles[0:2]), delta+sum(angles[0:3]), facecolor = \u0026#39;darkred\u0026#39;, edgecolor = \u0026#39;white\u0026#39;) wedge4 = Wedge((2,1.9), 1, delta+sum(angles[0:3]), delta+sum(angles[0:4]), facecolor = \u0026#39;lightgreen\u0026#39;, edgecolor = \u0026#39;white\u0026#39;) wedges = [wedge1, wedge2, wedge3, wedge4] for wedge in wedges: ax.add_patch(wedge) ax.text(1.5, 2.5, \u0026#34;%3.1f%%\u0026#34; % (percents[0]*100), font_style) ax.text(1.0, 1.7, \u0026#34;%3.1f%%\u0026#34; % (percents[1]*100), font_style) ax.text(1.5, 1.2, \u0026#34;%3.1f%%\u0026#34; % (percents[2]*100), font_style) ax.text(2.2, 1.7, \u0026#34;%3.1f%%\u0026#34; % (percents[3]*100), font_style) ax.axis([0, 4, 0, 4]) plt.show()   使用楔形绘制圆环式饼图 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32  fig, ax = plt.subplots(subplot_kw = {\u0026#39;aspect\u0026#39;:\u0026#39;equal\u0026#39;}) font_style = {\u0026#39;family\u0026#39;:\u0026#39;serif\u0026#39;, \u0026#39;size\u0026#39;:9, \u0026#39;style\u0026#39;:\u0026#39;italic\u0026#39;, \u0026#39;weight\u0026#39;:\u0026#39;black\u0026#39;} sample_data = [350, 150, 200, 300] total = sum(sample_data) percents = [i/float(total) for i in sample_data] angles = [360*i for i in percents] delta = 45 wedge1 = Wedge((2,1.9), 1, delta, delta+sum(angles[0:1]), facecolor = \u0026#39;orange\u0026#39;, edgecolor = \u0026#39;white\u0026#39;, width = 0.3) wedge2 = Wedge((2,1.9), 1, delta+sum(angles[0:1]), delta+sum(angles[0:2]), facecolor = \u0026#39;steelblue\u0026#39;, edgecolor = \u0026#39;white\u0026#39;, width = 0.3) wedge3 = Wedge((2,1.9), 1, delta+sum(angles[0:2]), delta+sum(angles[0:3]), facecolor = \u0026#39;darkred\u0026#39;, edgecolor = \u0026#39;white\u0026#39;, width = 0.3) wedge4 = Wedge((2,1.9), 1, delta+sum(angles[0:3]), delta+sum(angles[0:4]), facecolor = \u0026#39;lightgreen\u0026#39;, edgecolor = \u0026#39;white\u0026#39;, width = 0.3) rectangle = Rectangle((3.0, 0.0), 1.3, 1.3, facecolor = \u0026#39;w\u0026#39;, edgecolor = \u0026#39;rosybrown\u0026#39;) rectangle1 = Rectangle((3.2, 0.1), 0.3, 0.2, facecolor = \u0026#39;orange\u0026#39;) rectangle2 = Rectangle((3.2, 0.4), 0.3, 0.2, facecolor = \u0026#39;steelblue\u0026#39;) rectangle3 = Rectangle((3.2, 0.7), 0.3, 0.2, facecolor = \u0026#39;darkred\u0026#39;) rectangle4 = Rectangle((3.2, 1.0), 0.3, 0.2, facecolor = \u0026#39;lightgreen\u0026#39;) wedges = [wedge1, wedge2, wedge3, wedge4, rectangle, rectangle1, rectangle2, rectangle3, rectangle4] for wedge in wedges: ax.add_patch(wedge) ax.text(3.6, 0.1, \u0026#34;%3.1f%%\u0026#34; % (percents[0]*100), font_style) ax.text(3.6, 0.4, \u0026#34;%3.1f%%\u0026#34; % (percents[1]*100), font_style) ax.text(3.6, 0.7, \u0026#34;%3.1f%%\u0026#34; % (percents[2]*100), font_style) ax.text(3.6, 1.0, \u0026#34;%3.1f%%\u0026#34; % (percents[3]*100), font_style) ax.axis([0, 4.5, -0.5, 4]) plt.show()   组合图形 机器学习中的判别分析示意图 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  import numpy as np import matplotlib.pyplot as plt fig, ax = plt.subplots() num = 50 # new sample sample = 10*np.random.rand(num, 2) var1 = sample[:, 0] var2 = sample[:, 1] # threshold value td = 12 # discriminant function df = 2*var1+var2 cates11 = np.ma.masked_where(df\u0026gt;=td, var1) cates12 = np.ma.masked_where(df\u0026gt;=td, var2) cates21 = np.ma.masked_where(df\u0026lt;=td, var1) cates22 = np.ma.masked_where(df\u0026lt;=td, var2) ax.scatter(var1, var2, s = cates11*50, marker = \u0026#39;s\u0026#39;把, c = cates11) ax.scatter(var1, var2, s = cates21*50, marker = \u0026#39;o\u0026#39;, c = cates21) ax.plot(var1, -2*var1+12, lw = 1, color = \u0026#39;b\u0026#39;, alpha = 0.65) ax.axis([-1, 11, -1, 11]) plt.show()   日期型时间序列图 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  import datetime import matplotlib.dates as mdates fig, ax = plt.subplots() months = mdates.MonthLocator() # a Locator instance dateFmt = mdates.DateFormatter(\u0026#39;%m/%d/%y\u0026#39;) # a Formatter instance # format the ticks ax.xaxis.set_major_formatter(dateFmt) ax.xaxis.set_minor_locator(months) # set appearance parameters for ticks, ticklabels, and gridlines ax.tick_params(axis = \u0026#39;both\u0026#39;, direction = \u0026#39;out\u0026#39;, labelsize = 10) date1 = datetime.date(2008, 4, 17) date2 = datetime.date(2017, 5, 4) delta = datetime.timedelta(days = 5) dates = mdates.drange(date1, date2, delta) y = np.random.normal(100, 15, len(dates)) ax.plot_date(dates, y, \u0026#39;b-\u0026#39;, alpha = 0.7) fig.autofmt_xdate() plt.show()   向直方图中添加概率密度曲线 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  import matplotlib as mpl mpl.rcParams[\u0026#39;font.sans-serif\u0026#39;] = [\u0026#39;FangSong\u0026#39;] mpl.rcParams[\u0026#39;axes.unicode_minus\u0026#39;] = False mu = 60.2 sigma = 2.0 x = mu + sigma*np.random.randn(500) bins = 50 fig, ax = plt.subplots(1, 1) n, bins, patches = ax.hist(x, bins, density = True, stacked = True, histtype = \u0026#39;bar\u0026#39;, facecolor = \u0026#39;cornflowerblue\u0026#39;, edgecolor = \u0026#39;white\u0026#39;, alpha = 0.75) y = ((1/(np.power(2*np.pi, 0.5)*sigma))*np.exp(-0.5*np.power((bins-mu)/sigma, 2))) ax.plot(bins, y, color= \u0026#39;orange\u0026#39;, ls = \u0026#39;--\u0026#39;, lw = 2) ax.grid(ls = \u0026#39;:\u0026#39;, lw = 1, color = \u0026#39;gray\u0026#39;, alpha = 0.2) ax.text(54, 0.2, r\u0026#34;$y=\\frac{1}{\\sigma\\sqrt{2\\pi}}e^{-\\frac{{x-\\mu}^2}{2\\sigma^2}}$\u0026#34;, {\u0026#39;color\u0026#39;:\u0026#39;r\u0026#39;, \u0026#39;fontsize\u0026#39;:20}) ax.set_xlabel(\u0026#39;体重\u0026#39;) ax.set_ylabel(\u0026#39;概率密度\u0026#39;) ax.set_title(r\u0026#39;体重的直方图：$\\mu=60.0$, $\\sigma=2.0$\u0026#39;, fontsize = 16) plt.show()   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36  from matplotlib.patches import Polygon mu = 60.2 sigma = 2.0 x = mu + sigma*np.random.randn(500) bins = 50 fig, ax = plt.subplots(1, 1) n, bins, patches = ax.hist(x, bins, density = True, stacked = True, histtype = \u0026#39;bar\u0026#39;, facecolor = \u0026#39;cornflowerblue\u0026#39;, edgecolor = \u0026#39;white\u0026#39;, alpha = 0.75) y = ((1/(np.power(2*np.pi, 0.5)*sigma))*np.exp(-0.5*np.power((bins-mu)/sigma, 2))) ax.plot(bins, y, color= \u0026#39;orange\u0026#39;, ls = \u0026#39;--\u0026#39;, lw = 2) integ_x = np.linspace(mu-2*sigma, mu+2*sigma, 1000) integ_y = ((1/(np.power(2*np.pi, 0.5)*sigma))*np.exp(-0.5*np.power((integ_x-mu)/sigma, 2))) area = [(mu-2*sigma, 0), *zip(integ_x, integ_y), (mu+2*sigma, 0)] poly = Polygon(area, facecolor = \u0026#39;gray\u0026#39;, edgecolor = \u0026#39;k\u0026#39;, alpha = 0.6, closed = False) ax.add_patch(poly) ax.grid(ls = \u0026#39;:\u0026#39;, lw = 1, color = \u0026#39;gray\u0026#39;, alpha = 0.2) ax.text(54, 0.2, r\u0026#34;$y=\\frac{1}{\\sigma\\sqrt{2\\pi}}e^{-\\frac{{x-\\mu}^2}{2\\sigma^2}}$\u0026#34;, {\u0026#39;color\u0026#39;:\u0026#39;r\u0026#39;, \u0026#39;fontsize\u0026#39;:20}) ax.set_xlabel(\u0026#39;体重\u0026#39;) ax.set_ylabel(\u0026#39;概率密度\u0026#39;) ax.set_title(r\u0026#39;体重的直方图：$\\mu=60.0$, $\\sigma=2.0$\u0026#39;, fontsize = 16) plt.text(0.45, 0.2, r\u0026#34;$\\int_{\\mu-2\\sigma}^{\\mu+2\\sigma} y\\mathrm{d}x$\u0026#34;, fontsize = 20, transform = ax.transAxes) plt.show()   绘图区域嵌套子绘图区域 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45  mu = 75.0 sigma = 15.0 bins = 20 x = np.linspace(1, 100, 200) y = np.random.normal(mu, sigma, 200) fig, ax = plt.subplots() # the main axes ax.plot(x, y, ls = \u0026#39;-\u0026#39;, lw = 2, color = \u0026#39;steelblue\u0026#39;) ax.set_ylim(10, 170) # this is an inset axes over the main axes plt.axes([0.2, 0.6, 0.2, 0.2], facecolor = \u0026#39;k\u0026#39;) count, bins, patches = plt.hist(y, bins, color = \u0026#39;cornflowerblue\u0026#39;) plt.ylim(0, 28) plt.xticks([]) plt.yticks([]) # this is an inset axes over the inset axes plt.axes([0.21, 0.72, 0.05, 0.05]) y1 = (1/(sigma*np.sqrt(2*np.pi)))*np.exp(-(bins-mu)**2/(2*sigma**2)) plt.plot(bins, y1, ls = \u0026#39;-\u0026#39;, color = \u0026#39;r\u0026#39;) plt.xticks([]) plt.yticks([]) # this is another inset axes over the main axes plt.axes([0.65, 0.6, 0.2, 0.2], fc = \u0026#39;k\u0026#39;) aount, bins, patches = plt.hist(y, bins, color = \u0026#39;cornflowerblue\u0026#39;, density = True, stacked = True, cumulative = True, histtype = \u0026#39;step\u0026#39;) plt.ylim(0, 1.0) plt.xticks([]) plt.yticks([]) # this is another inset axes over another inset axes plt.axes([0.66, 0.72, 0.05, 0.05]) y2 = (1/(sigma*np.sqrt(2*np.pi)))*np.exp(-(bins-mu)**2/(2*sigma**2)) y2 = y2.cumsum() y2 = y2/y2[-1] plt.plot(bins, y2, ls = \u0026#39;-\u0026#39;, color = \u0026#39;r\u0026#39;) plt.xticks([]) plt.yticks([]) plt.show()   延伸阅读：设置一般化的日期刻度线 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  fig, ax = plt.subplots() # tick every 5th easter rule = mdates.rrulewrapper(mdates.YEARLY, byeaster = 0, interval = 2) loc = mdates.RRuleLocator(rule) # a Locator instance dateFmt = mdates.DateFormatter(\u0026#39;%m/%d/%y\u0026#39;) # a Formatter instance # format the ticks ax.xaxis.set_major_locator(loc) ax.xaxis.set_major_formatter(dateFmt) # set appearance parameters for ticks, ticklabels, and fridlines ax.tick_params(axis = \u0026#39;both\u0026#39;, direction = \u0026#39;out\u0026#39;, labelsize = 10) date1 = datetime.date(2004, 5, 17) date2 = datetime.date(2016, 6, 4) delta = datetime.timedelta(days = 5) dates = mdates.drange(date1, date2, delta) y = np.random.normal(120, 12, len(dates)) ax.plot_date(dates, y, \u0026#39;b-\u0026#39;, alpha = 0.7) fig.autofmt_xdate() plt.show()   文本样式布局 文本注解的展示样式 文本框的样式 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  import numpy as np from matplotlib.patches import Rectangle import matplotlib.patches as patches import matplotlib.pyplot as plt from jupyterthemes import jtplot jtplot.style(theme=\u0026#39;grade3\u0026#39;, context=\u0026#39;paper\u0026#39;) fig = plt.figure(1, figsize = (8, 9), dpi = 72) fontsize = 0.25*fig.dpi # subplot(111) ax = fig.add_subplot(1, 1, 1, frameon = False, xticks = [], yticks = []) boxStyles = patches.BoxStyle.get_styles() boxStyleNames = list(boxStyles.keys()) boxStyleNames.sort() for i, name in enumerate(boxStyleNames): ax.text(float(i + 0.5)/len(boxStyleNames), (float(len(boxStyleNames))-0.5-i)/len(boxStyleNames), name, ha = \u0026#39;center\u0026#39;, size = fontsize, transform = ax.transAxes, bbox = dict(boxstyle = name, fc = \u0026#39;w\u0026#39;, ec = \u0026#39;k\u0026#39;)) plt.show()   文本注释箭头的样式 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  fig = plt.figure(1, figsize = (8, 9), dpi = 72) fontsize = 0.23*fig.dpi # subplot(111) ax = fig.add_subplot(1, 1, 1, frameon = False) arrowStyles = patches.ArrowStyle.get_styles() arrowStyleNames = list(arrowStyles) arrowStyleNames.sort() ax.set_xlim(0, len(arrowStyleNames)+2.5) ax.set_ylim(-2, len(arrowStyleNames)) for i, name in enumerate(arrowStyleNames): p = patches.Circle((float(len(arrowStyleNames))+1.2-i, float(len(arrowStyleNames))-2.8-i), 0.2, color = \u0026#39;steelblue\u0026#39;, alpha = 1.0) ax.add_patch(p) ax.annotate(name, (float(len(arrowStyleNames))+1.2-i, float(len(arrowStyleNames))-2.8-i), (float(len(arrowStyleNames))-1-i, float(len(arrowStyleNames))-3-i), xycoords = \u0026#39;data\u0026#39;, ha = \u0026#39;center\u0026#39;, size = fontsize, arrowprops = dict(arrowstyle = name, facecolor = \u0026#39;k\u0026#39;, edgecolor = \u0026#39;k\u0026#39;, patchB = p, shrinkA = 5, shrinkB = 5, connectionstyle = \u0026#39;arc3\u0026#39;), bbox = dict(boxstyle = \u0026#39;round\u0026#39;, fc = \u0026#39;w\u0026#39;, ec = \u0026#39;k\u0026#39;)) ax.xaxis.set_visible(False) # ax.set_xticks([]) ax.yaxis.set_visible(False) # ax.set_yticks([]) plt.savefig(\u0026#39;xxx.tif\u0026#39;, dpi = 300)   文本内容的布局 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55  fig = plt.figure(1, figsize = (8, 8), dpi = 80, facecolor = \u0026#39;w\u0026#39;) fontsize = 0.3*fig.dpi font_style = {\u0026#39;family\u0026#39;:\u0026#39;sans-serif\u0026#39;, \u0026#39;fontsize\u0026#39;:fontsize, \u0026#39;weight\u0026#39;:\u0026#39;black\u0026#39;} # add axes in axis coords ax = fig.add_axes([0.0, 0.0, 1.0, 1.0], fc = \u0026#39;gold\u0026#39;) left = 0.2 bottom= 0.2 right = 0.8 top = 0.8 width = right-left height = top-bottom # add a rectangle in axis coords rect = Rectangle((left, bottom), width, height, transform = ax.transAxes, facecolor = \u0026#39;w\u0026#39;, edgecolor = \u0026#39;k\u0026#39;) ax.add_patch(rect) # add text in axis coords # left-bottom ax.text(left, bottom, \u0026#39;left bottom\u0026#39;, ha = \u0026#39;left\u0026#39;, va = \u0026#39;bottom\u0026#39;, transform = ax.transAxes, **font_style) # left top ax.text(left, bottom, \u0026#39;left top\u0026#39;, ha = \u0026#39;left\u0026#39;, va = \u0026#39;top\u0026#39;, transform = ax.transAxes, **font_style) # right-bottom ax.text(right, top, \u0026#39;right bottom\u0026#39;, ha = \u0026#39;right\u0026#39;, va = \u0026#39;bottom\u0026#39;, transform = ax.transAxes, **font_style) # right top ax.text(right, top, \u0026#39;right top\u0026#39;, ha = \u0026#39;right\u0026#39;, va = \u0026#39;top\u0026#39;, transform = ax.transAxes, **font_style) # center top ax.text(right, bottom, \u0026#39;center top\u0026#39;, ha = \u0026#39;center\u0026#39;, va = \u0026#39;top\u0026#39;, transform = ax.transAxes, **font_style) # center bottom ax.text(right, bottom, \u0026#39;center bottom\u0026#39;, ha = \u0026#39;center\u0026#39;, va = \u0026#39;bottom\u0026#39;, transform = ax.transAxes, **font_style) # left center ax.text(left, top, \u0026#39;left center\u0026#39;, ha = \u0026#39;left\u0026#39;, va = \u0026#39;center\u0026#39;, transform = ax.transAxes, **font_style) # right center ax.text(right, 0.5, \u0026#39;right center\u0026#39;, ha = \u0026#39;right\u0026#39;, va = \u0026#39;center\u0026#39;, transform = ax.transAxes, rotation = 90, **font_style) # center center ax.text(left, 0.5, \u0026#39;center center\u0026#39;, ha = \u0026#39;center\u0026#39;, va = \u0026#39;center\u0026#39;, transform = ax.transAxes, rotation = 90, **font_style) # middle ax.text(0.5, 0.5, \u0026#39;middle\u0026#39;, ha = \u0026#39;center\u0026#39;, va = \u0026#39;center\u0026#39;, transform = ax.transAxes, color = \u0026#39;r\u0026#39;, **font_style) # rotated center-center # left-center ax.text(left*0.7, top + 0.05, \u0026#39;rotated\\ncenter center\u0026#39;, ha = \u0026#39;center\u0026#39;, va = \u0026#39;center\u0026#39;, transform = ax.transAxes, rotation = 45, **font_style) plt.show()   延伸阅读 文本自动换行 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31  fig = plt.figure(1, figsize = (8, 8), dpi = 80, facecolor = \u0026#39;w\u0026#39;) # add axes in axis coords ax = fig.add_axes([0.0, 0.0, 1.0, 1.0], fc = \u0026#39;gold\u0026#39;) left = 0.2 bottom= 0.2 right = 0.8 top = 0.8 width = right-left height = top-bottom the_zen_of_Python = \u0026#34;\u0026#34;\u0026#34;Explicit is better than implicit. Complex is better than complicated.\u0026#34;\u0026#34;\u0026#34; # add a rectangle in axis coords rect = Rectangle((left, bottom), width, height, transform = ax.transAxes, facecolor = \u0026#39;w\u0026#39;, edgecolor = \u0026#39;k\u0026#39;) ax.add_patch(rect) ax.text(0.5, 1, the_zen_of_Python, transform = ax.transAxes, fontsize = 18, weight = \u0026#39;black\u0026#39;, ha = \u0026#39;center\u0026#39;, va = \u0026#39;top\u0026#39;, wrap = True)._get_wrap_line_width = lambda : 200. ax.text(0.5*width, 0.5, the_zen_of_Python, transform = ax.transAxes, fontsize = 10, weight = \u0026#39;black\u0026#39;, ha = \u0026#39;right\u0026#39;, rotation = 20, style = \u0026#39;italic\u0026#39;, family = \u0026#39;monospace\u0026#39;, wrap = True)._get_wrap_line_width = lambda : 150. ax.text(left, bottom, the_zen_of_Python, transform = ax.transAxes, fontsize = 15, weight = \u0026#39;bold\u0026#39;, ha = \u0026#39;left\u0026#39;, va = \u0026#39;center\u0026#39;, rotation = -15, style = \u0026#39;oblique\u0026#39;, family = \u0026#39;serif\u0026#39;, wrap = True)._get_wrap_line_width = lambda : 600. ax.text(width, 0.5*height, the_zen_of_Python, transform = ax.transAxes, fontsize = 18, weight = \u0026#39;bold\u0026#39;, ha = \u0026#39;left\u0026#39;, rotation = 15, style = \u0026#39;normal\u0026#39;, family = \u0026#39;sans-serif\u0026#39;, wrap = True)._get_wrap_line_width = lambda : 250. plt.show()   文本内容的旋转角度 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37  import matplotlib.text as mtext import matplotlib.transforms as mtransforms class RotationAwareAnnotation(mtext.Annotation): def __init__(self, s, xy, p, pa=None, ax=None, **kwargs): self.ax = ax or plt.gca() self.p = p if not pa: self.pa = xy self.calc_angle_data() kwargs.update(rotation_mode=kwargs.get(\u0026#34;rotation_mode\u0026#34;, \u0026#34;anchor\u0026#34;)) mtext.Annotation.__init__(self, s, xy, **kwargs) self.set_transform(mtransforms.IdentityTransform()) if \u0026#39;clip_on\u0026#39; in kwargs: self.set_clip_path(self.ax.patch) self.ax._add_text(self) def calc_angle_data(self): ang = np.arctan2(self.p[1]-self.pa[1], self.p[0]-self.pa[0]) self.angle_data = np.rad2deg(ang) def _get_rotation(self): return self.ax.transData.transform_angles(np.array((self.angle_data,)), np.array([self.pa[0], self.pa[1]]).reshape((1, 2)))[0] def _set_rotation(self, rotation): pass _rotation = property(_get_rotation, _set_rotation) fig, ax = plt.subplots() t = np.arange(0.0, 1.0, 0.01) line, = ax.plot(t, t, color=\u0026#39;blue\u0026#39;, lw=2) ra = RotationAwareAnnotation(\u0026#34;ticklabel Rule\u0026#34;, xy=(.5,.5), p=(.6,.6), ax=ax, xytext=(2,-1), textcoords=\u0026#34;offset points\u0026#34;, va=\u0026#34;top\u0026#34;)   文本内容的旋转模式 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76  fig,ax = plt.subplots(1,2) # subplot(121) # ha-va:top  ax[0].text(0.5, 2.5, \u0026#34;text45\u0026#34;, ha = \u0026#34;left\u0026#34;, va = \u0026#34;top\u0026#34;, rotation = 45, rotation_mode = \u0026#34;default\u0026#34;, bbox = {\u0026#34;boxstyle\u0026#34;:\u0026#34;square\u0026#34;, \u0026#34;facecolor\u0026#34;:\u0026#34;gray\u0026#34;, \u0026#34;edgecolor\u0026#34;:\u0026#34;w\u0026#34;, \u0026#34;pad\u0026#34;:0, \u0026#34;alpha\u0026#34;:0.5}) ax[0].text(1.5, 2.5, \u0026#34;text45\u0026#34;, ha = \u0026#34;center\u0026#34;, va = \u0026#34;top\u0026#34;, rotation = 45, rotation_mode = \u0026#34;default\u0026#34;, bbox = {\u0026#34;boxstyle\u0026#34;:\u0026#34;square\u0026#34;, \u0026#34;facecolor\u0026#34;:\u0026#34;gray\u0026#34;, \u0026#34;edgecolor\u0026#34;:\u0026#34;w\u0026#34;, \u0026#34;pad\u0026#34;:0, \u0026#34;alpha\u0026#34;:0.5}) ax[0].text(2.5, 2.5, \u0026#34;text45\u0026#34;, ha = \u0026#34;right\u0026#34;, va = \u0026#34;top\u0026#34;, rotation = 45, rotation_mode = \u0026#34;default\u0026#34;, bbox = {\u0026#34;boxstyle\u0026#34;:\u0026#34;square\u0026#34;, \u0026#34;facecolor\u0026#34;:\u0026#34;gray\u0026#34;, \u0026#34;edgecolor\u0026#34;:\u0026#34;w\u0026#34;, \u0026#34;pad\u0026#34;:0,\u0026#34;alpha\u0026#34;:0.5}) # ha-va:center  ax[0].text(0.5, 1.5, \u0026#34;text45\u0026#34;, ha = \u0026#34;left\u0026#34;, va = \u0026#34;center\u0026#34;, rotation = 45, rotation_mode = \u0026#34;default\u0026#34;, bbox = {\u0026#34;boxstyle\u0026#34;:\u0026#34;square\u0026#34;, \u0026#34;facecolor\u0026#34;:\u0026#34;gray\u0026#34;, \u0026#34;edgecolor\u0026#34;:\u0026#34;w\u0026#34;, \u0026#34;pad\u0026#34;:0, \u0026#34;alpha\u0026#34;:0.5}) ax[0].text(1.5, 1.5, \u0026#34;text45\u0026#34;, ha = \u0026#34;center\u0026#34;, va = \u0026#34;center\u0026#34;, rotation = 45, rotation_mode = \u0026#34;default\u0026#34;, bbox = {\u0026#34;boxstyle\u0026#34;:\u0026#34;square\u0026#34;, \u0026#34;facecolor\u0026#34;:\u0026#34;gray\u0026#34;, \u0026#34;edgecolor\u0026#34;:\u0026#34;w\u0026#34;, \u0026#34;pad\u0026#34;:0, \u0026#34;alpha\u0026#34;:0.5}) ax[0].text(2.5, 1.5, \u0026#34;text45\u0026#34;, ha = \u0026#34;right\u0026#34;, va = \u0026#34;center\u0026#34;, rotation=45, rotation_mode = \u0026#34;default\u0026#34;, bbox = {\u0026#34;boxstyle\u0026#34;:\u0026#34;square\u0026#34;, \u0026#34;facecolor\u0026#34;:\u0026#34;gray\u0026#34;, \u0026#34;edgecolor\u0026#34;:\u0026#34;w\u0026#34;, \u0026#34;pad\u0026#34;:0, \u0026#34;alpha\u0026#34;:0.5}) # ha-va:bottom  ax[0].text(0.5, 0.5, \u0026#34;text45\u0026#34;, ha = \u0026#34;left\u0026#34;, va = \u0026#34;bottom\u0026#34;, rotation = 45, rotation_mode = \u0026#34;default\u0026#34;, bbox={\u0026#34;boxstyle\u0026#34;:\u0026#34;square\u0026#34;, \u0026#34;facecolor\u0026#34;:\u0026#34;gray\u0026#34;, \u0026#34;edgecolor\u0026#34;:\u0026#34;w\u0026#34;, \u0026#34;pad\u0026#34;:0, \u0026#34;alpha\u0026#34;:0.5}) ax[0].text(1.5, 0.5, \u0026#34;text45\u0026#34;, ha = \u0026#34;center\u0026#34;, va = \u0026#34;bottom\u0026#34;, rotation = 45, rotation_mode = \u0026#34;default\u0026#34;, bbox={\u0026#34;boxstyle\u0026#34;:\u0026#34;square\u0026#34;, \u0026#34;facecolor\u0026#34;:\u0026#34;gray\u0026#34;, \u0026#34;edgecolor\u0026#34;:\u0026#34;w\u0026#34;, \u0026#34;pad\u0026#34;:0, \u0026#34;alpha\u0026#34;:0.5}) ax[0].text(2.5, 0.5, \u0026#34;text45\u0026#34;, ha = \u0026#34;right\u0026#34;, va = \u0026#34;bottom\u0026#34;,rotation = 45, rotation_mode = \u0026#34;default\u0026#34;, bbox={\u0026#34;boxstyle\u0026#34;:\u0026#34;square\u0026#34;, \u0026#34;facecolor\u0026#34;:\u0026#34;gray\u0026#34;, \u0026#34;edgecolor\u0026#34;:\u0026#34;w\u0026#34;, \u0026#34;pad\u0026#34;:0, \u0026#34;alpha\u0026#34;:0.5}) # set text point  ax[0].scatter([0.5, 1.5, 2.5, 0.5, 1.5, 2.5, 0.5, 1.5, 2.5], [2.5 ,2.5, 2.5, 1.5, 1.5, 1.5, 0.5, 0.5, 0.5], c = \u0026#34;r\u0026#34;, s = 50, alpha = 0.5) # ticklabel and tickline limit  ax[0].set_xticks([0.0, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0]) ax[0].set_xticklabels([\u0026#34;\u0026#34;, \u0026#34;left\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;center\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;right\u0026#34;, \u0026#34;\u0026#34;], fontsize = 15) ax[0].set_yticks([3.0, 2.5, 2.0, 1.5, 1.0, 0.5, 0.0]) ax[0].set_yticklabels([\u0026#34;\u0026#34;, \u0026#34;top\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;center\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;bottom\u0026#34;, \u0026#34;\u0026#34;], rotation = 90, fontsize = 15) ax[0].set_xlim(0.0, 3.0) ax[0].set_ylim(0.0, 3.0) ax[0].grid(ls = \u0026#34;-\u0026#34;, lw = 2, color = \u0026#34;b\u0026#34;, alpha = 0.5) ax[0].set_title(\u0026#34;default\u0026#34;, fontsize = 18) # subplot(122) # ha-va:top  ax[1].text(0.5, 2.5, \u0026#34;text45\u0026#34;, ha = \u0026#34;left\u0026#34;, va = \u0026#34;top\u0026#34;, rotation = 45, rotation_mode = \u0026#34;anchor\u0026#34;, bbox = {\u0026#34;boxstyle\u0026#34;:\u0026#34;square\u0026#34;, \u0026#34;facecolor\u0026#34;:\u0026#34;gray\u0026#34;, \u0026#34;edgecolor\u0026#34;:\u0026#34;w\u0026#34;, \u0026#34;pad\u0026#34;:0, \u0026#34;alpha\u0026#34;:0.5}) ax[1].text(1.5, 2.5, \u0026#34;text45\u0026#34;, ha = \u0026#34;center\u0026#34;, va = \u0026#34;top\u0026#34;, rotation = 45, rotation_mode = \u0026#34;anchor\u0026#34;, bbox = {\u0026#34;boxstyle\u0026#34;:\u0026#34;square\u0026#34;, \u0026#34;facecolor\u0026#34;:\u0026#34;gray\u0026#34;, \u0026#34;edgecolor\u0026#34;:\u0026#34;w\u0026#34;, \u0026#34;pad\u0026#34;:0, \u0026#34;alpha\u0026#34;:0.5}) ax[1].text(2.5, 2.5, \u0026#34;text45\u0026#34;, ha = \u0026#34;right\u0026#34;, va = \u0026#34;top\u0026#34;, rotation = 45, rotation_mode = \u0026#34;anchor\u0026#34;, bbox={\u0026#34;boxstyle\u0026#34;:\u0026#34;square\u0026#34;, \u0026#34;facecolor\u0026#34;:\u0026#34;gray\u0026#34;, \u0026#34;edgecolor\u0026#34;:\u0026#34;w\u0026#34;, \u0026#34;pad\u0026#34;:0, \u0026#34;alpha\u0026#34;:0.5}) # ha-va:center  ax[1].text(0.5, 1.5, \u0026#34;text45\u0026#34;, ha = \u0026#34;left\u0026#34;, va = \u0026#34;center\u0026#34;, rotation = 45, rotation_mode = \u0026#34;anchor\u0026#34;, bbox = {\u0026#34;boxstyle\u0026#34;:\u0026#34;square\u0026#34;, \u0026#34;facecolor\u0026#34;:\u0026#34;gray\u0026#34;, \u0026#34;edgecolor\u0026#34;:\u0026#34;w\u0026#34;, \u0026#34;pad\u0026#34;:0, \u0026#34;alpha\u0026#34;:0.5}) ax[1].text(1.5, 1.5, \u0026#34;text45\u0026#34;, ha = \u0026#34;center\u0026#34;, va = \u0026#34;center\u0026#34;, rotation = 45, rotation_mode = \u0026#34;anchor\u0026#34;, bbox = {\u0026#34;boxstyle\u0026#34;:\u0026#34;square\u0026#34;, \u0026#34;facecolor\u0026#34;:\u0026#34;gray\u0026#34;, \u0026#34;edgecolor\u0026#34;:\u0026#34;w\u0026#34;, \u0026#34;pad\u0026#34;:0, \u0026#34;alpha\u0026#34;:0.5}) ax[1].text(2.5, 1.5, \u0026#34;text45\u0026#34;, ha = \u0026#34;right\u0026#34;, va = \u0026#34;center\u0026#34;, rotation = 45, rotation_mode = \u0026#34;anchor\u0026#34;, bbox = {\u0026#34;boxstyle\u0026#34;:\u0026#34;square\u0026#34;, \u0026#34;facecolor\u0026#34;:\u0026#34;gray\u0026#34;, \u0026#34;edgecolor\u0026#34;:\u0026#34;w\u0026#34;, \u0026#34;pad\u0026#34;:0, \u0026#34;alpha\u0026#34;:0.5}) # ha-va:bottom  ax[1].text(0.5, 0.5, \u0026#34;text45\u0026#34;, ha = \u0026#34;left\u0026#34;, va = \u0026#34;bottom\u0026#34;, rotation = 45, rotation_mode = \u0026#34;anchor\u0026#34;, bbox = {\u0026#34;boxstyle\u0026#34;:\u0026#34;square\u0026#34;, \u0026#34;facecolor\u0026#34;:\u0026#34;gray\u0026#34;, \u0026#34;edgecolor\u0026#34;:\u0026#34;w\u0026#34;, \u0026#34;pad\u0026#34;:0, \u0026#34;alpha\u0026#34;:0.5}) ax[1].text(1.5, 0.5, \u0026#34;text45\u0026#34;, ha = \u0026#34;center\u0026#34;, va = \u0026#34;bottom\u0026#34;, rotation = 45, rotation_mode = \u0026#34;anchor\u0026#34;, bbox = {\u0026#34;boxstyle\u0026#34;:\u0026#34;square\u0026#34;, \u0026#34;facecolor\u0026#34;:\u0026#34;gray\u0026#34;, \u0026#34;edgecolor\u0026#34;:\u0026#34;w\u0026#34;, \u0026#34;pad\u0026#34;:0, \u0026#34;alpha\u0026#34;:0.5}) ax[1].text(2.5, 0.5, \u0026#34;text45\u0026#34;, ha = \u0026#34;right\u0026#34;, va = \u0026#34;bottom\u0026#34;, rotation = 45, rotation_mode = \u0026#34;anchor\u0026#34;, bbox = {\u0026#34;boxstyle\u0026#34;:\u0026#34;square\u0026#34;, \u0026#34;facecolor\u0026#34;:\u0026#34;gray\u0026#34;, \u0026#34;edgecolor\u0026#34;:\u0026#34;w\u0026#34;, \u0026#34;pad\u0026#34;:0, \u0026#34;alpha\u0026#34;:0.5}) # set text point  ax[1].scatter([0.5, 1.5, 2.5, 0.5, 1.5, 2.5, 0.5, 1.5, 2.5], [2.5, 2.5, 2.5, 1.5, 1.5, 1.5, 0.5, 0.5, 0.5], c = \u0026#34;r\u0026#34;, s = 50, alpha = 0.5) # ticklabel and tickline limit  ax[1].set_xticks([0.0, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0]) ax[1].set_xticklabels([\u0026#34;\u0026#34;, \u0026#34;left\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;center\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;right\u0026#34;, \u0026#34;\u0026#34;], fontsize = 15) ax[1].set_yticks([3.0, 2.5, 2.0, 1.5, 1.0, 0.5, 0.0]) ax[1].set_yticklabels([\u0026#34;\u0026#34;, \u0026#34;top\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;center\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;bottom\u0026#34;, \u0026#34;\u0026#34;], rotation = 90, fontsize = 15) ax[1].set_xlim(0.0, 3.0) ax[1].set_ylim(0.0, 3.0) ax[1].grid(ls = \u0026#34;-\u0026#34;, lw = 2, color = \u0026#34;b\u0026#34;, alpha = 0.5) ax[1].set_title(\u0026#34;anchor\u0026#34;, fontsize = 18) plt.show()   多行文本的对齐方式 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36  fig,ax = plt.subplots(1,1) # ha:left--va:baseline--multialignment: left,center, and right  ax.text(0.5, 2.5, \u0026#34;text0\\nTEXT0\\nalignment\u0026#34;, ha = \u0026#34;left\u0026#34;, va = \u0026#34;baseline\u0026#34;, multialignment = \u0026#34;left\u0026#34;, bbox = dict(boxstyle = \u0026#34;square\u0026#34;, facecolor = \u0026#34;w\u0026#34;, edgecolor = \u0026#34;k\u0026#34;, alpha = 0.5)) ax.text(0.5, 1.5, \u0026#34;text0\\nTEXT0\\nalignment\u0026#34;, ha = \u0026#34;left\u0026#34;, va = \u0026#34;baseline\u0026#34;, multialignment = \u0026#34;center\u0026#34;, bbox = dict(boxstyle = \u0026#34;square\u0026#34;, facecolor = \u0026#34;w\u0026#34;, edgecolor = \u0026#34;k\u0026#34;, alpha = 0.5)) ax.text(0.5, 0.5, \u0026#34;text0\\nTEXT0\\nalignment\u0026#34;, ha = \u0026#34;left\u0026#34;, va = \u0026#34;baseline\u0026#34;, multialignment = \u0026#34;right\u0026#34;, bbox = dict(boxstyle = \u0026#34;square\u0026#34;, facecolor = \u0026#34;w\u0026#34;, edgecolor = \u0026#34;k\u0026#34;, alpha = 0.5)) # ha:center--va:baseline--multialignment: left,center, and right  ax.text(1.5, 2.5, \u0026#34;text0\\nTEXT0\\nalignment\u0026#34;, ha = \u0026#34;center\u0026#34;, va = \u0026#34;baseline\u0026#34;, multialignment = \u0026#34;left\u0026#34;, bbox = dict(boxstyle = \u0026#34;square\u0026#34;, facecolor = \u0026#34;w\u0026#34;, edgecolor = \u0026#34;k\u0026#34;, alpha = 0.5)) ax.text(1.5, 1.5, \u0026#34;text0\\nTEXT0\\nalignment\u0026#34;, ha = \u0026#34;center\u0026#34;, va = \u0026#34;baseline\u0026#34;, multialignment = \u0026#34;center\u0026#34;, bbox = dict(boxstyle = \u0026#34;square\u0026#34;, facecolor = \u0026#34;w\u0026#34;, edgecolor = \u0026#34;k\u0026#34;, alpha = 0.5)) ax.text(1.5, 0.5, \u0026#34;text0\\nTEXT0\\nalignment\u0026#34;, ha = \u0026#34;center\u0026#34;, va = \u0026#34;baseline\u0026#34;, multialignment = \u0026#34;right\u0026#34;, bbox = dict(boxstyle = \u0026#34;square\u0026#34;, facecolor = \u0026#34;w\u0026#34;, edgecolor = \u0026#34;k\u0026#34;, alpha = 0.5)) # ha:right--va:baseline--multialignment: left,center, and right  ax.text(2.5, 2.5, \u0026#34;text0\\nTEXT0\\nalignment\u0026#34;, ha = \u0026#34;right\u0026#34;, va = \u0026#34;baseline\u0026#34;, multialignment = \u0026#34;left\u0026#34;, bbox = dict(boxstyle = \u0026#34;square\u0026#34;, facecolor = \u0026#34;w\u0026#34;, edgecolor = \u0026#34;k\u0026#34;, alpha = 0.5)) ax.text(2.5, 1.5, \u0026#34;text0\\nTEXT0\\nalignment\u0026#34;, ha = \u0026#34;right\u0026#34;, va =\u0026#34;baseline\u0026#34;, multialignment = \u0026#34;center\u0026#34;, bbox = dict(boxstyle = \u0026#34;square\u0026#34;, facecolor = \u0026#34;w\u0026#34;, edgecolor = \u0026#34;k\u0026#34;, alpha = 0.5)) ax.text(2.5, 0.5, \u0026#34;text0\\nTEXT0\\nalignment\u0026#34;, ha = \u0026#34;right\u0026#34;, va = \u0026#34;baseline\u0026#34;, multialignment = \u0026#34;right\u0026#34;, bbox = dict(boxstyle = \u0026#34;square\u0026#34;, facecolor = \u0026#34;w\u0026#34;, edgecolor = \u0026#34;k\u0026#34;, alpha = 0.5)) # set text point  ax.scatter([0.5, 1.5, 2.5, 0.5, 1.5, 2.5, 0.5, 1.5, 2.5], [2.5, 2.5, 2.5, 1.5, 1.5, 1.5, 0.5, 0.5, 0.5], c = \u0026#34;r\u0026#34;, s = 50, alpha = 0.6) # ticklabel and tickline limit  ax.set_xticks([0.0, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0]) ax.set_xticklabels([\u0026#34;\u0026#34;, \u0026#34;left\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;center\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;right\u0026#34;, \u0026#34;\u0026#34;], fontsize = 15) ax.set_yticks([3.0, 2.5, 2.0, 1.5, 1.0, 0.5, 0.0]) ax.set_yticklabels([\u0026#34;\u0026#34;, \u0026#34;baseline\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;baseline\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;baseline\u0026#34;, \u0026#34;\u0026#34;], rotation = 90, fontsize = 15) ax.set_xlim(0.0, 3.0) ax.set_ylim(0.0, 3.0) ax.grid(ls = \u0026#34;-\u0026#34;, lw = 2, color = \u0026#34;b\u0026#34;, alpha = 0.5)   文本注释箭头的连接风格fig, ax = plt.subplots(3, 5, figsize = (16, 10), sharex = True, sharey = True) x1, y1 = 0.3, 0.2 x2, y2 = 0.8, 0.6 bbox = dict(boxstyle = \u0026#34;square\u0026#34;, facecolor = \u0026#34;w\u0026#34;, edgecolor = \u0026#34;k\u0026#34;) # subplot(3,5,1) ax[0, 0].plot([x1, x2], [y1, y2], \u0026#34;.\u0026#34;) ax[0, 0].annotate(\u0026#34;\u0026#34;, xy = (x1, y1), xycoords = \u0026#34;data\u0026#34;, xytext = (x2, y2), textcoords = \u0026#34;data\u0026#34;, arrowprops = dict(arrowstyle = \u0026#34;-\u0026gt;\u0026#34;, color = \u0026#34;gray\u0026#34;, lw = 3, shrinkA = 5, shrinkB = 5, patchA = None, patchB = None, connectionstyle = \u0026#34;angle, angleA = 0, angleB = 90, rad = 5\u0026#34;)) ax[0, 0].text(0.05, 0.95, \u0026#34;angle, \\nangleA = 0, \\nangleB = 90, \\nrad = 5\u0026#34;, ha = \u0026#34;left\u0026#34;, va = \u0026#34;top\u0026#34;, bbox = bbox) ax[0, 0].set_xlim(0, 1) ax[0, 0].set_ylim(0, 1) ax[0, 0].set_xticklabels([]) ax[0, 0].set_yticklabels([]) # subplot(3,5,6) ax[1, 0].plot([x1, x2], [y1, y2], \u0026#34;.\u0026#34;) ax[1,0].annotate(\u0026#34;\u0026#34;, xy = (x1, y1), xycoords = \u0026#34;data\u0026#34;, xytext = (x2, y2), textcoords = \u0026#34;data\u0026#34;, arrowprops = dict(arrowstyle = \u0026#34;-\u0026gt;\u0026#34;, color = \u0026#34;gray\u0026#34;, lw = 3, shrinkA = 5, shrinkB = 5, patchA = None, patchB = None, connectionstyle = \u0026#34;angle, angleA = 20, angleB = 50, rad = 10\u0026#34;)) ax[1, 0].text(0.05, 0.95, \u0026#34;angle, \\nangleA=20, \\nangleB = 50, \\nrad = 10\u0026#34;, ha = \u0026#34;left\u0026#34;, va = \u0026#34;top\u0026#34;, bbox = bbox) ax[1, 0].set_xlim(0, 1) ax[1, 0].set_ylim(0, 1) ax[1, 0].set_xticklabels([]) ax[1, 0].set_yticklabels([]) # subplot(3,5,11) ax[2, 0].plot([x1, x2], [y1, y2], \u0026#34;.\u0026#34;) ax[2, 0].annotate(\u0026#34;\u0026#34;, xy=(x1, y1), xycoords = \u0026#34;data\u0026#34;, xytext = (x2,y2), textcoords = \u0026#34;data\u0026#34;, arrowprops=dict(arrowstyle = \u0026#34;-\u0026gt;\u0026#34;, color = \u0026#34;gray\u0026#34;, lw = 3, shrinkA = 5, shrinkB = 5, patchA = None, patchB = None, connectionstyle = \u0026#34;angle, angleA = -90, angleB = 0, rad = 0.0\u0026#34;)) ax[2, 0].text(0.05, 0.95, \u0026#34;angle, \\nangleA=-90, \\nangleB=0, \\nrad = 0.0\u0026#34;, ha = \u0026#34;left\u0026#34;, va = \u0026#34;top\u0026#34; ,bbox = bbox) ax[2, 0].set_xlim(0, 1) ax[2, 0].set_ylim(0, 1) ax[2, 0].set_xticklabels([]) ax[2, 0].set_yticklabels([]) # subplot(3,5,2) ax[0, 1].plot([x1, x2], [y1, y2], \u0026#34;.\u0026#34;) ax[0, 1].annotate(\u0026#34;\u0026#34;, xy=(x1, y1), xycoords = \u0026#34;data\u0026#34;, xytext = (x2, y2), textcoords = \u0026#34;data\u0026#34;, arrowprops = dict(arrowstyle = \u0026#34;-\u0026gt;\u0026#34;, color = \u0026#34;gray\u0026#34;, lw = 3, shrinkA = 5, shrinkB = 5, patchA = None, patchB = None, connectionstyle = \u0026#34;angle3, angleA = 90, angleB = 0\u0026#34;)) ax[0, 1].text(0.05, 0.95, \u0026#34;angle3, \\nangleA=90, \\nangleB = 0\u0026#34;, ha = \u0026#34;left\u0026#34;, va = \u0026#34;top\u0026#34;, bbox = bbox) ax[0, 1].set_xlim(0, 1) ax[0, 1].set_ylim(0, 1) ax[0, 1].set_xticklabels([]) ax[0, 1].set_yticklabels([]) # subplot(3,5,7) ax[1, 1].plot([x1, x2], [y1, y2], \u0026#34;.\u0026#34;) ax[1, 1].annotate(\u0026#34;\u0026#34;, xy = (x1, y1), xycoords = \u0026#34;data\u0026#34;, xytext = (x2, y2), textcoords = \u0026#34;data\u0026#34;, arrowprops = dict(arrowstyle = \u0026#34;-\u0026gt;\u0026#34;, color = \u0026#34;gray\u0026#34;, lw = 3, shrinkA = 5, shrinkB = 5, patchA = None, patchB = None, connectionstyle = \u0026#34;angle3, angleA = 0, angleB = 90\u0026#34;)) ax[1, 1].text(0.05, 0.95, \u0026#34;angle3, \\nangleA = 0, \\nangleB = 90\u0026#34;, ha = \u0026#34;left\u0026#34;, va = \u0026#34;top\u0026#34;, bbox = bbox) ax[1, 1].set_xlim(0, 1) ax[1, 1].set_ylim(0, 1) ax[1, 1].set_xticklabels([]) ax[1, 1].set_yticklabels([]) # subplot(3,5,12) ax[2, 1].plot([x1, x2], [y1, y2], \u0026#34;.\u0026#34;) ax[2, 1].annotate(\u0026#34;\u0026#34;, xy = (x1, y1), xycoords = \u0026#34;data\u0026#34;, xytext = (x2, y2), textcoords = \u0026#34;data\u0026#34;, arrowprops = dict(arrowstyle = \u0026#34;-\u0026gt;\u0026#34;, color=\u0026#34;gray\u0026#34;, lw = 3, shrinkA = 5, shrinkB = 5, patchA = None, patchB = None, connectionstyle = \u0026#34;angle3, angleA = 20, angleB = 60\u0026#34;)) ax[2, 1].text(0.05, 0.95, \u0026#34;angle3, \\nangleA = 20, \\nangleB = 60\u0026#34;, ha = \u0026#34;left\u0026#34;, va = \u0026#34;top\u0026#34;, bbox = bbox) ax[2, 1].set_xlim(0, 1) ax[2, 1].set_ylim(0, 1) ax[2, 1].set_xticklabels([]) ax[2, 1].set_yticklabels([]) # subplot(3,5,3) ax[0, 2].plot([x1, x2], [y1, y2], \u0026#34;.\u0026#34;) ax[0, 2].annotate(\u0026#34;\u0026#34;, xy = (x1, y1), xycoords = \u0026#34;data\u0026#34;, xytext = (x2, y2), textcoords = \u0026#34;data\u0026#34;, arrowprops = dict(arrowstyle = \u0026#34;-\u0026gt;\u0026#34;, color = \u0026#34;gray\u0026#34;, lw = 3, shrinkA = 5, shrinkB = 5, patchA = None, patchB = None, connectionstyle = \u0026#34;arc, angleA = -90, armA = 30, angleB = 0, \\ armB = 30, rad = 0.0\u0026#34;)) ax[0, 2].text(0.05, 0.95, \u0026#34;arc, \\nangleA = -90, \\narmA = 30, \\nangleB = 0, \\narmB = 30, \\nrad = 0.0\u0026#34;, ha = \u0026#34;left\u0026#34;, va = \u0026#34;top\u0026#34;, bbox = bbox) ax[0, 2].set_xlim(0, 1) ax[0, 2].set_ylim(0, 1) ax[0, 2].set_xticklabels([]) ax[0, 2].set_yticklabels([]) # subplot(3,5,8) ax[1, 2].plot([x1, x2], [y1, y2], \u0026#34;.\u0026#34;) ax[1, 2].annotate(\u0026#34;\u0026#34;, xy = (x1, y1), xycoords = \u0026#34;data\u0026#34;, xytext = (x2, y2), textcoords = \u0026#34;data\u0026#34;, arrowprops = dict(arrowstyle = \u0026#34;-\u0026gt;\u0026#34;, color = \u0026#34;gray\u0026#34;, lw = 3, shrinkA = 5, shrinkB = 5, patchA = None, patchB = None, connectionstyle = \u0026#34;arc, angleA = -90, armA = 30, angleB = 0, \\ armB = 30, rad = 3\u0026#34;)) ax[1, 2].text(0.05, 0.95, \u0026#34;arc, \\nangleA = -90, \\narmA = 30, \\nangleB = 0, \\narmB = 30, \\nrad = 3\u0026#34;, ha = \u0026#34;left\u0026#34;, va = \u0026#34;top\u0026#34;, bbox = bbox) ax[1, 2].set_xlim(0, 1) ax[1, 2].set_ylim(0, 1) ax[1, 2].set_xticklabels([]) ax[1, 2].set_yticklabels([]) # subplot(3,5,13) ax[2, 2].plot([x1, x2], [y1, y2], \u0026#34;.\u0026#34;) ax[2, 2].annotate(\u0026#34;\u0026#34;, xy = (x1, y1), xycoords = \u0026#34;data\u0026#34;, xytext = (x2, y2), textcoords = \u0026#34;data\u0026#34;, arrowprops = dict(arrowstyle = \u0026#34;-\u0026gt;\u0026#34;, color = \u0026#34;gray\u0026#34;, lw = 3, shrinkA = 5, shrinkB = 5, patchA = None, patchB = None, connectionstyle = \u0026#34;arc, angleA = 100, armA = 0, angleB = 20, \\ armB = 50, rad = 10\u0026#34;)) ax[2, 2].text(0.05, 0.95, \u0026#34;arc, \\nangleA = 100, \\narmA = 0, \\nangleB = 20, \\narmB = 50, \\nrad = 10\u0026#34;, ha = \u0026#34;left\u0026#34;, va = \u0026#34;top\u0026#34;, bbox = bbox) ax[2, 2].set_xlim(0, 1) ax[2, 2].set_ylim(0, 1) ax[2, 2].set_xticklabels([]) ax[2, 2].set_yticklabels([]) # subplot(3,5,4) ax[0, 3].plot([x1, x2], [y1, y2], \u0026#34;.\u0026#34;) ax[0, 3].annotate(\u0026#34;\u0026#34;, xy = (x1, y1), xycoords = \u0026#34;data\u0026#34;, xytext = (x2, y2), textcoords = \u0026#34;data\u0026#34;, arrowprops = dict(arrowstyle = \u0026#34;-\u0026gt;\u0026#34;, color = \u0026#34;gray\u0026#34;, lw = 3, shrinkA = 5, shrinkB = 5, patchA = None, patchB = None, connectionstyle = \u0026#34;arc3, rad = 0.0\u0026#34;)) ax[0, 3].text(0.05, 0.95, \u0026#34;arc3, \\nrad = 0.0\u0026#34;, ha = \u0026#34;left\u0026#34;, va = \u0026#34;top\u0026#34;, bbox = bbox) ax[0, 3].set_xlim(0, 1) ax[0, 3].set_ylim(0, 1) ax[0, 3].set_xticklabels([]) ax[0, 3].set_yticklabels([]) # subplot(3,5,9) ax[1, 3].plot([x1, x2], [y1, y2], \u0026#34;.\u0026#34;) ax[1, 3].annotate(\u0026#34;\u0026#34;, xy = (x1, y1), xycoords = \u0026#34;data\u0026#34;, xytext = (x2, y2), textcoords = \u0026#34;data\u0026#34;, arrowprops = dict(arrowstyle = \u0026#34;-\u0026gt;\u0026#34;, color = \u0026#34;gray\u0026#34;, lw = 3, shrinkA = 5, shrinkB = 5, patchA = None, patchB = None, connectionstyle = \u0026#34;arc3, rad = 0.5\u0026#34;)) ax[1, 3].text(0.05, 0.95, \u0026#34;arc3, \\nrad = 0.5\u0026#34;, ha = \u0026#34;left\u0026#34;, va = \u0026#34;top\u0026#34;, bbox = bbox) ax[1, 3].set_xlim(0, 1) ax[1, 3].set_ylim(0, 1) ax[1, 3].set_xticklabels([]) ax[1, 3].set_yticklabels([]) # subplot(3,5,14) ax[2, 3].plot([x1, x2], [y1, y2], \u0026#34;.\u0026#34;) ax[2, 3].annotate(\u0026#34;\u0026#34;, xy = (x1, y1), xycoords = \u0026#34;data\u0026#34;, xytext = (x2, y2), textcoords = \u0026#34;data\u0026#34;, arrowprops = dict(arrowstyle = \u0026#34;-\u0026gt;\u0026#34;, color = \u0026#34;gray\u0026#34;, lw = 3, shrinkA = 5, shrinkB = 5, patchA = None, patchB = None, connectionstyle = \u0026#34;arc3, rad = -0.5\u0026#34;)) ax[2, 3].text(0.05, 0.95, \u0026#34;arc3, \\nrad = -0.5\u0026#34;, ha = \u0026#34;left\u0026#34;, va = \u0026#34;top\u0026#34;, bbox = bbox) ax[2, 3].set_xlim(0, 1) ax[2, 3].set_ylim(0, 1) ax[2, 3].set_xticklabels([]) ax[2, 3].set_yticklabels([]) # subplot(3,5,5) ax[0, 4].plot([x1, x2], [y1, y2], \u0026#34;.\u0026#34;) ax[0, 4].annotate(\u0026#34;\u0026#34;, xy = (x1, y1), xycoords = \u0026#34;data\u0026#34;, xytext = (x2, y2), textcoords = \u0026#34;data\u0026#34;, arrowprops = dict(arrowstyle = \u0026#34;-\u0026gt;\u0026#34;, color = \u0026#34;gray\u0026#34;, lw = 3, shrinkA = 5, shrinkB = 5, patchA = None, patchB = None, connectionstyle = \u0026#34;bar, armA = 30, armB = 30, fraction = 0.0\u0026#34;)) ax[0, 4].text(0.05, 0.95, \u0026#34;bar, \\narmA = 30, \\narmB = 30, \\nfraction = 0.0\u0026#34;, ha = \u0026#34;left\u0026#34;, va = \u0026#34;top\u0026#34;, bbox = bbox) ax[0, 4].set_xlim(0, 1) ax[0, 4].set_ylim(0, 1) ax[0, 4].set_xticklabels([]) ax[0, 4].set_yticklabels([]) # subplot(3,5,10) ax[1, 4].plot([x1, x2], [y1, y2], \u0026#34;.\u0026#34;) ax[1, 4].annotate(\u0026#34;\u0026#34;, xy = (x1, y1), xycoords = \u0026#34;data\u0026#34;, xytext = (x2, y2), textcoords = \u0026#34;data\u0026#34;, arrowprops = dict(arrowstyle = \u0026#34;-\u0026gt;\u0026#34;, color = \u0026#34;gray\u0026#34;, lw = 3, shrinkA = 5, shrinkB = 5, patchA = None, patchB = None, connectionstyle = \u0026#34;bar, fraction = -0.3\u0026#34;)) ax[1, 4].text(0.05, 0.95, \u0026#34;bar, \\nfraction = -0.3\u0026#34;, ha = \u0026#34;left\u0026#34;, va = \u0026#34;top\u0026#34;, bbox = bbox) ax[1, 4].set_xlim(0, 1) ax[1, 4].set_ylim(0, 1) ax[1, 4].set_xticklabels([]) ax[1, 4].set_yticklabels([]) # subplot(3,5,15) ax[2, 4].plot([x1, x2], [y1, y2], \u0026#34;.\u0026#34;) ax[2, 4].annotate(\u0026#34;\u0026#34;, xy = (x1, y1), xycoords = \u0026#34;data\u0026#34;, xytext = (x2, y2), textcoords = \u0026#34;data\u0026#34;, arrowprops = dict(arrowstyle = \u0026#34;-\u0026gt;\u0026#34;, color = \u0026#34;gray\u0026#34;, lw = 3, shrinkA = 5, shrinkB = 5, patchA = None, patchB = None, connectionstyle = \u0026#34;bar, armB = 60, angle = 90, fraction = 0.4\u0026#34;)) ax[2, 4].text(0.05, 0.95, \u0026#34;bar, \\narmB = 60, \\nangle = 90, \\nfraction = 0.4\u0026#34;, ha = \u0026#34;left\u0026#34;, va = \u0026#34;top\u0026#34;, bbox = bbox) ax[2, 4].set_xlim(0, 1) ax[2, 4].set_ylim(0, 1) ax[2, 4].set_xticklabels([]) ax[2, 4].set_yticklabels([]) fig.subplots_adjust(left = 0.05, right = 0.95, bottom = 0.05, top = 0.95, wspace = 0.02, hspace = 0.02)   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45  fig, ax = plt.subplots(1, 3, figsize = (12, 6), sharex = True, sharey = True) x1, y1 = 0.3, 0.3 x2, y2 = 0.7, 0.7 bbox = dict(boxstyle = \u0026#34;square\u0026#34;, facecolor = \u0026#34;w\u0026#34;, edgecolor = \u0026#34;k\u0026#34;) # subplot(131) ax[0].annotate(\u0026#34;simple\u0026#34;, xy = (x1, y1), xycoords = \u0026#34;data\u0026#34;, xytext = (x2, y2), textcoords = \u0026#34;data\u0026#34;, bbox = dict(boxstyle = \u0026#34;round\u0026#34;, fc = \u0026#34;w\u0026#34;, ec = \u0026#34;k\u0026#34;), arrowprops = dict(arrowstyle = \u0026#34;simple, head_length = 0.7, head_width = 0.6, tail_width = 0.3\u0026#34;, color = \u0026#34;gray\u0026#34;, shrinkA = 5, shrinkB = 5, patchB = None, connectionstyle = \u0026#34;angle3, angleA = 0, angleB = 90\u0026#34;), size = 25, ha = \u0026#34;center\u0026#34;, va = \u0026#34;center\u0026#34;) ax[0].text(0.05, 0.95, \u0026#34;angle3, \\nangleA = 0, \\nangleB = 90\u0026#34;, ha = \u0026#34;left\u0026#34;, va = \u0026#34;top\u0026#34;, bbox = bbox, size = 20) ax[0].set_xlim(0, 1) ax[0].set_ylim(0, 1) ax[0].set_xticklabels([]) ax[0].set_yticklabels([]) # subplot(132)  ax[1].annotate(\u0026#34;fancy\u0026#34;, xy = (x1, y1), xycoords = \u0026#34;data\u0026#34;, xytext = (x2, y2), textcoords = \u0026#34;data\u0026#34;, bbox = dict(boxstyle = \u0026#34;round\u0026#34;, fc = \u0026#34;w\u0026#34;, ec = \u0026#34;k\u0026#34;), arrowprops = dict(arrowstyle = \u0026#34;fancy, head_length = 0.4, head_width = 0.4, tail_width = 0.6\u0026#34;, color = \u0026#34;gray\u0026#34;, shrinkA = 5, shrinkB = 5, patchB = None, connectionstyle = \u0026#34;arc3, rad = 0.5\u0026#34;), size = 25, ha = \u0026#34;center\u0026#34;, va = \u0026#34;center\u0026#34;) ax[1].text(0.05, 0.95, \u0026#34;arc3, \\nrad = 0.5\u0026#34;, ha = \u0026#34;left\u0026#34;,va = \u0026#34;top\u0026#34;, bbox = bbox, size = 20) ax[1].set_xlim(0, 1) ax[1].set_ylim(0, 1) ax[1].set_xticklabels([]) ax[1].set_yticklabels([]) # subplot(133)  ax[2].annotate(\u0026#34;wedge\u0026#34;, xy = (x1, y1), xycoords = \u0026#34;data\u0026#34;, xytext = (x2, y2), textcoords = \u0026#34;data\u0026#34;, bbox = dict(boxstyle = \u0026#34;round\u0026#34;, fc = \u0026#34;w\u0026#34;, ec = \u0026#34;k\u0026#34;), arrowprops = dict(arrowstyle = \u0026#34;wedge, tail_width = 0.5\u0026#34;, color = \u0026#34;gray\u0026#34;, shrinkA = 5, shrinkB = 5, patchB = None, connectionstyle = \u0026#34;arc3, rad = -0.3\u0026#34;), size = 25, ha = \u0026#34;center\u0026#34;, va = \u0026#34;center\u0026#34;) ax[2].text(0.05, 0.95, \u0026#34;arc3, \\nrad = -0.3\u0026#34;, ha = \u0026#34;left\u0026#34;, va = \u0026#34;top\u0026#34;, bbox = bbox, size = 20) ax[2].set_xlim(0, 1) ax[2].set_ylim(0, 1) ax[2].set_xticklabels([]) ax[2].set_yticklabels([]) fig.subplots_adjust(left = 0.05, right = 0.95, bottom = 0.05, top = 0.95, wspace = 0.02, hspace = 0.02)   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41  fig,ax = plt.subplots(1, 3, figsize = (12, 6), sharex = True, sharey = True) x1, y1 = 0.3, 0.3 x2, y2 = 0.7, 0.7 bbox = dict(boxstyle = \u0026#34;square\u0026#34;, facecolor = \u0026#34;w\u0026#34;, edgecolor = \u0026#34;k\u0026#34;) # subplot(131)  ax[0].annotate(\u0026#34;relpos = (0.0, 0.0)\u0026#34;, xy = (x1, y1), xycoords = \u0026#34;data\u0026#34;, xytext = (x2, y2), textcoords = \u0026#34;data\u0026#34;, bbox = dict(boxstyle = \u0026#34;round4\u0026#34;, fc = \u0026#34;w\u0026#34;, ec = \u0026#34;k\u0026#34;), arrowprops = dict(arrowstyle = \u0026#34;-|\u0026gt;\u0026#34;, color = \u0026#34;k\u0026#34;, relpos = (0.0, 0.0), connectionstyle = \u0026#34;arc3, rad = 0.3\u0026#34;), size = 15, ha = \u0026#34;center\u0026#34;, va = \u0026#34;center\u0026#34;) ax[0].text(0.05, 0.95, \u0026#34;arc3, \\nrad = 0.3\u0026#34;, ha = \u0026#34;left\u0026#34;, va = \u0026#34;top\u0026#34;, bbox = bbox, size = 20) ax[0].set_xlim(0, 1) ax[0].set_ylim(0, 1) ax[0].set_xticklabels([]) ax[0].set_yticklabels([]) # subplot(132)  ax[1].annotate(\u0026#34;relpos = (1.0, 0.0)\u0026#34;, xy = (x1, y1), xycoords = \u0026#34;data\u0026#34;, xytext = (x2, y2), textcoords = \u0026#34;data\u0026#34;, bbox = dict(boxstyle = \u0026#34;round4\u0026#34;, fc = \u0026#34;w\u0026#34;, ec=\u0026#34;k\u0026#34;), arrowprops = dict(arrowstyle = \u0026#34;-|\u0026gt;\u0026#34;, color = \u0026#34;k\u0026#34;, relpos = (1.0, 0.0), connectionstyle = \u0026#34;arc3, rad = -0.3\u0026#34;), size = 15, ha = \u0026#34;center\u0026#34;, va = \u0026#34;center\u0026#34;) ax[1].text(0.05, 0.95, \u0026#34;arc3, \\nrad = -0.3\u0026#34;, ha = \u0026#34;left\u0026#34;, va = \u0026#34;top\u0026#34;, bbox = bbox, size = 20) ax[1].set_xlim(0, 1) ax[1].set_ylim(0, 1) ax[1].set_xticklabels([]) ax[1].set_yticklabels([]) # subplot(133)  ax[2].annotate(\u0026#34;relpos = (0.2, 0.8)\u0026#34;, xy = (x1, y1), xycoords = \u0026#34;data\u0026#34;, xytext = (x2, y2), textcoords = \u0026#34;data\u0026#34;, bbox = dict(boxstyle = \u0026#34;round4\u0026#34;, fc = \u0026#34;w\u0026#34;, ec = \u0026#34;k\u0026#34;), arrowprops = dict(arrowstyle = \u0026#34;-|\u0026gt;\u0026#34;, color = \u0026#34;k\u0026#34;, relpos = (0.3, 0.7), connectionstyle = \u0026#34;arc3, rad = -0.3\u0026#34;), size=15, ha = \u0026#34;center\u0026#34;, va = \u0026#34;center\u0026#34;) ax[2].text(0.05, 0.95, \u0026#34;arc3, \\nrad = -0.3\u0026#34;, ha = \u0026#34;left\u0026#34;, va = \u0026#34;top\u0026#34;, bbox = bbox, size = 20) ax[2].set_xlim(0, 1) ax[2].set_ylim(0, 1) ax[2].set_xticklabels([]) ax[2].set_yticklabels([]) fig.subplots_adjust(left = 0.05, right = 0.95, bottom = 0.05, top = 0.95, wspace = 0.02, hspace = 0.02)   计量单位方法 不同剂量单位的实现方法 弧度和角度的实现方法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  import matplotlib.pyplot as plt import numpy as np from basic_units import radians, degrees, cos x = np.linspace(0, 9.5, 500) rad_x = [i*radians for i in x] fig, ax = plt.subplots(2, 1) ax[0].plot(rad_x, cos(rad_x), ls = \u0026#39;-\u0026#39;, lw = 3, color = \u0026#39;k\u0026#39;, xunits = radians) ax[0].set_xlabel(\u0026#39;\u0026#39;) ax[1].plot(rad_x, cos(rad_x), ls = \u0026#39;--\u0026#39;, lw = 3, color = \u0026#39;cornflowerblue\u0026#39;, xunits = degrees) ax[1].set_xlabel(\u0026#39;\u0026#39;) fig.subplots_adjust(hspace = 0.3) plt.show()   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  from basic_units import cm, inch x = np.linspace(0, 10, 6) cm_x = [i*cm for i in x] fig, ax = plt.subplots(2, 2) ax[0, 0].plot(cm_x, cm_x, ls = \u0026#39;-\u0026#39;, lw = 3, color = \u0026#39;k\u0026#39;, xunits = cm, yunits = cm) ax[0, 0].set_ylabel(\u0026#34;\u0026#34;) ax[0, 0].set_xlabel(\u0026#34;\u0026#34;) ax[0, 1].plot(cm_x, cm_x, ls = \u0026#39;--\u0026#39;, lw = 3, color = \u0026#39;cornflowerblue\u0026#39;, xunits = cm, yunits = inch) ax[0, 1].set_ylabel(\u0026#34;\u0026#34;) ax[0, 1].set_xlabel(\u0026#34;\u0026#34;) ax[0, 1].set_xlim(2, 8) ax[1, 0].plot(cm_x, cm_x, ls = \u0026#34;-.\u0026#34;, lw = 3, color = \u0026#34;gold\u0026#34;, xunits = inch, yunits = cm) ax[1, 0].set_ylabel(\u0026#34;\u0026#34;) ax[1, 0].set_xlabel(\u0026#34;\u0026#34;) ax[1, 0].set_xlim(2*cm, 8*cm) ax[1, 1].plot(cm_x, cm_x, ls = \u0026#34;:\u0026#34;, lw = 3, color = \u0026#34;purple\u0026#34;, xunits = inch, yunits = inch) ax[1, 1].set_ylabel(\u0026#34;\u0026#34;) ax[1, 1].set_xlabel(\u0026#34;\u0026#34;) plt.show()   秒、赫兹和分钟的实现方法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  from basic_units import secs, minutes, hertz t = [2, 4, 3, 5, 8, 6, 7, 9] secs_t = [time*secs for time in t] fig, ax = plt.subplots(3, 1, sharex = True) ax[0].scatter(secs_t, secs_t, s = 10*np.max(t), c = \u0026#39;steelblue\u0026#39;, marker = \u0026#39;o\u0026#39;) ax[0].set_xlabel(\u0026#39;\u0026#39;) ax[0].set_ylabel(\u0026#39;\u0026#39;) ax[1].scatter(secs_t, secs_t, s = 10*np.max(t), c = \u0026#39;gold\u0026#39;, marker = \u0026#39;D\u0026#39;, yunits = hertz) ax[1].set_xlabel(\u0026#39;\u0026#39;) ax[1].set_ylabel(\u0026#39;\u0026#39;) ax[1].axis([1, 10, 0, 1]) ax[2].scatter(secs_t, secs_t, s = 10*np.max(t), c = \u0026#39;brown\u0026#39;, marker = \u0026#39;^\u0026#39;, yunits = hertz) ax[2].yaxis.set_units(minutes) ax[2].set_xlabel(\u0026#39;\u0026#39;) ax[2].set_ylabel(\u0026#39;\u0026#39;) ax[2].axis([1, 10, 0, 1]) fig.subplots_adjust(hspace = 0.2) plt.show()   文本注释位置的坐标系统的设置方法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  from matplotlib.patches import Ellipse fig, ax = plt.subplots(1, 1) font_style = {\u0026#39;family\u0026#39;:\u0026#39;monospace\u0026#39;, \u0026#39;fontsize\u0026#39;:15, \u0026#39;weight\u0026#39;:\u0026#39;bold\u0026#39;} ellipse = Ellipse((2*cm, 1*cm), 0.05*cm, 0.05*cm, color = \u0026#39;blue\u0026#39;) ax.add_patch(ellipse) ax.annotate(\u0026#39;fancy\u0026#39;, xy = (2*cm, 1*cm), xycoords = \u0026#39;data\u0026#39;, xytext = (0.8*cm, 0.85*cm), textcoords = \u0026#39;data\u0026#39;, bbox = dict(boxstyle = \u0026#39;round\u0026#39;, fc = \u0026#39;w\u0026#39;, ec = \u0026#39;k\u0026#39;), arrowprops = dict(arrowstyle = \u0026#39;fancy, head_length = 0.4, head_width = 0.4, tail_width = 0.6\u0026#39;, fc = \u0026#39;gray\u0026#39;, connectionstyle = \u0026#39;arc3, rad = 0.3\u0026#39;, shrinkA = 5, patchB = ellipse, shrinkB = 5), ha = \u0026#39;right\u0026#39;, va = \u0026#39;top\u0026#39;, **font_style) ax.annotate(\u0026#39;fancy\u0026#39;, xy = (2*cm, 1*cm), xycoords = \u0026#39;data\u0026#39;, xytext = (0.8, 0.85), textcoords = \u0026#39;axes fraction\u0026#39;, bbox = dict(boxstyle = \u0026#39;round\u0026#39;, fc = \u0026#39;w\u0026#39;, ec = \u0026#39;k\u0026#39;), arrowprops = dict(arrowstyle = \u0026#39;fancy, head_length = 0.4, head_width = 0.4, tail_width = 0.6\u0026#39;, fc = \u0026#39;gray\u0026#39;, connectionstyle = \u0026#39;arc3, rad = 0.3\u0026#39;, shrinkA = 5, patchB = ellipse, shrinkB = 5), ha = \u0026#39;right\u0026#39;, va = \u0026#39;top\u0026#39;, **font_style) ax.set_xlim(0*cm, 3*cm) ax.set_ylim(0*cm, 3*cm) plt.show()   不同计量方法的操作原理 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34  x = np.linspace(1, 10, 1000) y1 = [2**j for j in x] y2 = [0.09*j for j in x] fig, ax = plt.subplots(2, 2) # linear ax[0, 0].plot(x, y1) ax[0, 0].set_yscale(\u0026#39;linear\u0026#39;) ax[0, 0].set_title(\u0026#39;linear\u0026#39;) ax[0, 0].grid(True, ls = \u0026#39;-\u0026#39;, lw = 1, color = \u0026#39;gray\u0026#39;) # log ax[0, 1].plot(x, y1) ax[0, 1].set_yscale(\u0026#39;log\u0026#39;) ax[0, 1].set_title(\u0026#39;log\u0026#39;) ax[0, 1].grid(True, ls = \u0026#39;-\u0026#39;, lw = 1, color = \u0026#39;gray\u0026#39;) # logit ax[1, 0].plot(x, y2) ax[1, 0].set_yscale(\u0026#39;logit\u0026#39;) ax[1, 0].set_title(\u0026#39;logit\u0026#39;) ax[1, 0].grid(True, ls = \u0026#39;-\u0026#39;, lw = 1, color = \u0026#39;gray\u0026#39;) ax[1, 0].set_ylim(0.1, 0.9) # symlog ax[1, 1].plot(x, y2-np.average(y2)) ax[1, 1].set_yscale(\u0026#39;symlog\u0026#39;, linthresh = 0.02) ax[1, 1].set_title(\u0026#39;symlog\u0026#39;) ax[1, 1].grid(True, ls = \u0026#39;-\u0026#39;, lw = 1, color = \u0026#39;gray\u0026#39;) fig.subplots_adjust(hspace = 0.5, wspace = 0.3) plt.show()   刻度和轴脊 刻度线和刻度标签及轴标签的位置调整 1 2  import matplotlib.pyplot as plt import numpy as np   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  fig = plt.figure(1, figsize = (8, 8), dpi = 80, facecolor = \u0026#39;w\u0026#39;) fontsize = 1.5*0.1*fig.dpi font_style = {\u0026#39;family\u0026#39;:\u0026#39;sans-serif\u0026#39;, \u0026#39;fontsize\u0026#39;:fontsize, \u0026#39;weight\u0026#39;:\u0026#39;black\u0026#39;} # xaxis separate tick and ticklabel ax0_0 = fig.add_subplot(2, 2, 1, fc = \u0026#39;yellowgreen\u0026#39;, alpha = 0.1) ax0_0.xaxis.set_ticks_position(\u0026#39;top\u0026#39;) ax0_0.xaxis.set_label_position(\u0026#39;top\u0026#39;) ax0_0.set_xlabel(\u0026#39;separate tick and ticklabel\u0026#39;, **font_style) # xaxis universal tick and ticklabel ax0_1 = fig.add_subplot(2, 2, 2, fc = \u0026#39;yellowgreen\u0026#39;, alpha = 0.1) ax0_1.xaxis.tick_top() ax0_1.xaxis.set_label_position(\u0026#39;top\u0026#39;) ax0_1.set_xlabel(\u0026#39;universal tick and ticklabel\u0026#39;, **font_style) # yaxis separate tick and ticklabel ax1_0 = fig.add_subplot(2, 2, 3, fc = \u0026#39;yellowgreen\u0026#39;, alpha = 0.1) ax1_0.yaxis.set_ticks_position(\u0026#39;right\u0026#39;) ax1_0.yaxis.set_label_position(\u0026#39;right\u0026#39;) ax1_0.set_ylabel(\u0026#39;separate tick and ticklabel\u0026#39;, **font_style) # yaxis universal tick and ticklabel ax1_1 = fig.add_subplot(2, 2, 4, fc = \u0026#39;yellowgreen\u0026#39;, alpha = 0.1) ax1_1.yaxis.tick_right() ax1_1.yaxis.set_label_position(\u0026#39;right\u0026#39;) ax1_1.set_ylabel(\u0026#39;universal tick and ticklabel\u0026#39;, **font_style) fig.subplots_adjust(wspace = 0.3) plt.show()   刻度线的位置和数值的动态调整 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  from matplotlib.ticker import FuncFormatter, MaxNLocator fig, ax = plt.subplots() ticklabels = \u0026#39;stage1 stage2 stage3 stage4 stage5\u0026#39; ticklabels_list = ticklabels.split(\u0026#34; \u0026#34;) x = np.linspace(0, len(ticklabels_list)-1, len(ticklabels_list)) y = np.exp(-x) ax.plot(x, y, lw = 3, color = \u0026#39;steelblue\u0026#39;, marker = \u0026#39;s\u0026#39;, mfc = \u0026#39;r\u0026#39;, mec = \u0026#39;g\u0026#39;) def tick_controller(value, position): if int(value) in x: return ticklabels_list[int(value)] else: return \u0026#34; \u0026#34; ax.xaxis.set_major_formatter(FuncFormatter(tick_controller)) # 设置主刻度线所在位置的数值 ax.xaxis.set_major_locator(MaxNLocator(integer = True)) # 设置主刻度线所在位置 xticklabel_text = ax.get_xticklabels() for i, j in enumerate(xticklabel_text): j.set_family(\u0026#39;monospace\u0026#39;) j.set_fontsize(12) j.set_weight(\u0026#39;bold\u0026#39;) j.set_rotation(30) ax.margins(0.25) plt.show()   主要刻度线和次要刻度线的调整 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42  from matplotlib.ticker import MultipleLocator, FormatStrFormatter, AutoMinorLocator, NullFormatter, FixedLocator fig, ax = plt.subplots(3, 1) # subplot(3, 1) majorLocator = MultipleLocator(1.5) majorFormatter = FormatStrFormatter(\u0026#39;%1.1f\u0026#39;) minorLocator = MultipleLocator(0.5) minorFormatter = NullFormatter() x = np.linspace(0, 2*np.pi, 500) y = np.cos(2*np.pi*x)*np.exp(-x) ax[0].plot(x, y, lw = 3, color = \u0026#39;cornflowerblue\u0026#39;) ax[0].xaxis.set_major_locator(majorLocator) ax[0].xaxis.set_major_formatter(majorFormatter) ax[0].xaxis.set_minor_locator(minorLocator) ax[0].xaxis.set_minor_formatter(minorFormatter) # subplot(3, 1, 2) minorLocator = AutoMinorLocator() ax[1].plot(x, y, lw = 3, color = \u0026#39;cornflowerblue\u0026#39;) ax[1].xaxis.set_minor_locator(minorLocator) ax[1].tick_params(axis = \u0026#39;x\u0026#39;, which = \u0026#39;major\u0026#39;, length = 6, width = 1.5) ax[1].tick_params(axis = \u0026#39;x\u0026#39;, which = \u0026#39;minor\u0026#39;, length = 4, width = 1, color = \u0026#39;r\u0026#39;) # subplot(3, 1, 3) majorLocator = FixedLocator([0, np.pi/2, np.pi, 3*np.pi/2, 2*np.pi]) minorLocator = AutoMinorLocator(5) ax[2].plot(x, y, lw = 3, color = \u0026#39;cornflowerblue\u0026#39;) ax[2].xaxis.set_major_locator(majorLocator) ax[2].xaxis.set_minor_locator(minorLocator) ax[2].tick_params(which = \u0026#39;major\u0026#39;, length = 6, width = 1.5) ax[2].tick_params(which = \u0026#39;minor\u0026#39;, length = 4, width = 1, color = \u0026#39;r\u0026#39;) ax[2].set_xticklabels([\u0026#34;0\u0026#34;, r\u0026#34;$\\pi/2$\u0026#34;, r\u0026#34;$\\pi$\u0026#34;, r\u0026#34;$3\\pi/2$\u0026#34;, r\u0026#34;$2\\pi$\u0026#34;]) fig.subplots_adjust(hspace = 0.4) plt.show()   轴脊的显示与隐藏 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32  x = np.linspace(0, 2*np.pi, 500) y = 1.85*np.sin(x) fig, ax = plt.subplots(3, 1) # subplot(3, 1, 1) ax[0].plot(x, y, lw = 3, color = \u0026#39;dodgerblue\u0026#39;) ax[0].set_ylim(-2, 2) ax[0].set_facecolor(\u0026#39;lemonchiffon\u0026#39;) # subplot(3, 1, 2) ax[1].plot(x, y, lw = 3, color = \u0026#39;dodgerblue\u0026#39;) ax[1].spines[\u0026#39;right\u0026#39;].set_visible(False) ax[1].spines[\u0026#39;top\u0026#39;].set_visible(False) ax[1].xaxis.set_ticks_position(\u0026#39;bottom\u0026#39;) ax[1].yaxis.set_ticks_position(\u0026#39;left\u0026#39;) ax[1].set_ylim(-3, 3) ax[1].set_facecolor(\u0026#39;lemonchiffon\u0026#39;) # subplot(3, 1, 3) ax[2].plot(x, y, lw = 3, color = \u0026#39;dodgerblue\u0026#39;) ax[2].spines[\u0026#39;right\u0026#39;].set_color(\u0026#39;none\u0026#39;) ax[2].spines[\u0026#39;top\u0026#39;].set_color(\u0026#39;none\u0026#39;) ax[2].yaxis.tick_left() ax[2].xaxis.tick_bottom() ax[2].spines[\u0026#39;left\u0026#39;].set_bounds(-1, 1) ax[2].spines[\u0026#39;bottom\u0026#39;].set_bounds(0, 2*np.pi) ax[2].set_ylim(-2, 2) ax[2].set_facecolor(\u0026#39;lemonchiffon\u0026#39;) fig.subplots_adjust(hspace = 0.4) plt.show()   轴脊位置的调整 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83  x = np.linspace(0, 2, 1000) y = 0.9*np.sin(np.pi*x) fig, ax = plt.subplots(2, 3) # subplot(2, 3, 1) ax[0, 0].plot(x, y, lw = 3, color = \u0026#39;steelblue\u0026#39;) ax[0, 0].spines[\u0026#39;right\u0026#39;].set_visible(False) ax[0, 0].spines[\u0026#39;top\u0026#39;].set_visible(False) # set left and bottom spines position ax[0, 0].spines[\u0026#39;left\u0026#39;].set_position((\u0026#39;data\u0026#39;, 0.5)) ax[0, 0].spines[\u0026#39;bottom\u0026#39;].set_position((\u0026#39;data\u0026#39;, 1)) # set tickline position of bottom adn left spines ax[0, 0].xaxis.set_ticks_position(\u0026#39;bottom\u0026#39;) ax[0, 0].yaxis.set_ticks_position(\u0026#39;left\u0026#39;) ax[0, 0].set_ylim(-1, 1) ax[0, 0].set_facecolor(\u0026#39;lemonchiffon\u0026#39;) # subplot (2, 3, 4) ax[1, 0].plot(x, y, lw = 3, color = \u0026#39;steelblue\u0026#39;) ax[1, 0].spines[\u0026#39;right\u0026#39;].set_color(\u0026#39;none\u0026#39;) ax[1, 0].spines[\u0026#39;top\u0026#39;].set_color(\u0026#39;none\u0026#39;) # set left and bottom spines position ax[1, 0].spines[\u0026#39;left\u0026#39;].set_position(\u0026#39;zero\u0026#39;) ax[1, 0].spines[\u0026#39;bottom\u0026#39;].set_position(\u0026#39;zero\u0026#39;) # set tickline position of bottom adn left spines ax[1, 0].xaxis.tick_bottom() ax[1, 0].yaxis.tick_left() ax[1, 0].set_ylim(-1, 1) ax[1, 0].set_facecolor(\u0026#39;lemonchiffon\u0026#39;) # subplot(2, 3, 2) ax[0, 1].plot(x, y, lw = 3, color = \u0026#39;steelblue\u0026#39;) ax[0, 1].spines[\u0026#39;right\u0026#39;].set_visible(False) ax[0, 1].spines[\u0026#39;top\u0026#39;].set_visible(False) # set left and bottom spines position ax[0, 1].spines[\u0026#39;left\u0026#39;].set_position((\u0026#39;axes\u0026#39;, 0.25)) ax[0, 1].spines[\u0026#39;bottom\u0026#39;].set_position((\u0026#39;axes\u0026#39;, 0.75)) ax[0, 1].xaxis.set_ticks_position(\u0026#39;bottom\u0026#39;) ax[0, 1].yaxis.set_ticks_position(\u0026#39;left\u0026#39;) ax[0, 1].set_ylim(-1, 1) ax[0, 1].set_facecolor(\u0026#39;lemonchiffon\u0026#39;) # subplot(2, 3, 5) ax[1, 1].plot(x, y, lw = 3, color = \u0026#39;steelblue\u0026#39;) ax[1, 1].spines[\u0026#39;right\u0026#39;].set_color(\u0026#39;none\u0026#39;) ax[1, 1].spines[\u0026#39;top\u0026#39;].set_color(\u0026#39;none\u0026#39;) # set left and bottom spines position ax[1, 1].spines[\u0026#39;left\u0026#39;].set_position(\u0026#39;center\u0026#39;) ax[1, 1].spines[\u0026#39;bottom\u0026#39;].set_position(\u0026#39;center\u0026#39;) # set tickline position of bottom adn left spines ax[1, 1].xaxis.tick_bottom() ax[1, 1].yaxis.tick_left() ax[1, 1].set_ylim(-1, 1) ax[1, 1].set_facecolor(\u0026#39;lemonchiffon\u0026#39;) # subplot(2, 3, 3) ax[0, 2].plot(x, y, lw = 3, color = \u0026#39;steelblue\u0026#39;) ax[0, 2].spines[\u0026#39;right\u0026#39;].set_visible(False) ax[0, 2].spines[\u0026#39;top\u0026#39;].set_visible(False) # set left and bottom spines position ax[0, 2].spines[\u0026#39;left\u0026#39;].set_position((\u0026#39;outward\u0026#39;, 3)) ax[0, 2].spines[\u0026#39;bottom\u0026#39;].set_position((\u0026#39;outward\u0026#39;, 2)) ax[0, 2].xaxis.set_ticks_position(\u0026#39;bottom\u0026#39;) ax[0, 2].yaxis.set_ticks_position(\u0026#39;left\u0026#39;) ax[0, 2].set_ylim(-1, 1) ax[0, 2].set_facecolor(\u0026#39;lemonchiffon\u0026#39;) # subplot(2, 3, 6) ax[1, 2].plot(x, y, lw = 3, color = \u0026#39;steelblue\u0026#39;) ax[1, 2].spines[\u0026#39;right\u0026#39;].set_color(\u0026#39;none\u0026#39;) ax[1, 2].spines[\u0026#39;top\u0026#39;].set_color(\u0026#39;none\u0026#39;) # set left and bottom spines position ax[1, 2].spines[\u0026#39;left\u0026#39;].set_position((\u0026#39;outward\u0026#39;, -3)) ax[1, 2].spines[\u0026#39;bottom\u0026#39;].set_position((\u0026#39;outward\u0026#39;, -2)) # set tickline position of bottom adn left spines ax[1, 2].xaxis.tick_bottom() ax[1, 2].yaxis.tick_left() ax[1, 2].set_ylim(-1, 1) ax[1, 2].set_facecolor(\u0026#39;lemonchiffon\u0026#39;) fig.subplots_adjust(wspace = 0.35, hspace = 0.2) plt.show()   动画 使用模块animation绘制动画 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  import numpy as np import matplotlib.pyplot as plt from matplotlib.animation import FuncAnimation fig, ax = plt.subplots(1, 1) x = np.linspace(0, 2*np.pi, 5000) y = np.exp(-x)*np.cos(2*np.pi*x) line, = ax.plot(x, y, color = \u0026#39;cornflowerblue\u0026#39;, lw = 3) ax.set_ylim(-1.0, 1.0) # to clear current frame def init(): line.set_ydata([np.nan]*len(x)) return line, # to update the data def animate(data): line.set_ydata(np.exp(-x)*np.cos(2*np.pi*x+float(data)/100)) return line, # to call calsss FuncAnimation which connects animate and init ani = FuncAnimation(fig, animate, init_func = init, frames = 200, interval = 2, blit = True) # to save the animation # ani.save(\u0026#39;./mymovie.mp4\u0026#39;, fps = 20, writer = \u0026#39;ffmpeg\u0026#39;) ani.save(\u0026#39;./ch07_1.gif\u0026#39;, fps = 20, writer = \u0026#39;pillow\u0026#39;)   调用模块pyplot的API绘制动画 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55  from matplotlib.patches import Circle from warnings import filterwarnings %matplotlib qt # ignore warning filterwarnings(\u0026#39;ignore\u0026#39;, \u0026#39;.*GUI is implemented\u0026#39;) # set several variables word = \u0026#39;kaleidoscope\u0026#39; row = int(len(word)/4) col = int(len(word)/4) num = int(len(word)/4) data = np.random.random((row, col, num)) colorMap = [\u0026#39;spring\u0026#39;, \u0026#39;summer\u0026#39;, \u0026#39;autumn\u0026#39;, \u0026#39;winter\u0026#39;] subplot_row = int(len(word)/6) subplot_col = int(len(word)/6) font = dict(family = \u0026#39;monospace\u0026#39;, weight = \u0026#39;bold\u0026#39;, style = \u0026#39;italic\u0026#39;, fontsize = 10) subplot_kw = dict(aspect = \u0026#39;equal\u0026#39;, frame_on = False, xticks = [], yticks = []) # create subplots fig, ax = plt.subplots(subplot_row, subplot_col, subplot_kw = subplot_kw) # generate a subplot def rowcolgenerator(r, c, season): index = colorMap.index(season) t = index*num subtitle = \u0026#34;No.{}\u0026#39;{}\u0026#39; Theme of the {}\u0026#34; for j in range(len(data)): ax[r, c].cla() collection = ax[r, c].pcolor(data[j, :], cmap = colorMap[index]) patch = Circle((1.5, 1.5), radius = 1.5, transform = ax[r, c].transData) collection.set_clip_path(patch) element = colorMap[index].capitalize() ax[r, c].set_title(subtitle.format((j+1), word[t:t+3], element), font) ax[r, c].set_axis_off() plt.pause(0.15) # create animation def animation(): i = 0 for r in range(subplot_row): for c in range(subplot_col): rowcolgenerator(r, c, colorMap[i]) i += 1 title = \u0026#39;Life Kaleidoscope Consists of Four Seasons\u0026#39; plt.suptitle(title, family = \u0026#39;serif\u0026#39;, weight = \u0026#39;black\u0026#39;, fontsize = 20) plt.subplots_adjust(wspace = 0.05, hspace = 0.2) if __name__ == \u0026#34;__main__\u0026#34;: animation()   GUI效果 类RadioButtons的使用方法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48  import numpy as np import matplotlib.pyplot as plt from matplotlib.widgets import RadioButtons %matplotlib auto x = np.linspace(0.0, 2.0, 1000) y1 = 1.5*np.cos(2*np.pi*x) y2 = 1.0*np.cos(2*np.pi*x) y3 = 0.8*np.cos(2*np.pi*x) fig, ax = plt.subplots(1, 1) line, = ax.plot(x, y1, color = \u0026#39;red\u0026#39;, lw = 2) plt.subplots_adjust(left = 0.35) axesbgcolor = \u0026#39;cornflowerblue\u0026#39; # a set of radionbuttons about amplitude axl = plt.axes([0.1, 0.7, 0.15, 0.15], fc = axesbgcolor) radio1 = RadioButtons(axl, (\u0026#39;1.5 A\u0026#39;, \u0026#39;1.0 A\u0026#39;, \u0026#39;0.8 A\u0026#39;)) def amplitudefunc(label): hzdict = {\u0026#39;1.5 A\u0026#39;:y1, \u0026#39;1.0 A\u0026#39;:y2, \u0026#39;0.8 A\u0026#39;:y3} ydata = hzdict[label] line.set_ydata(ydata) plt.draw() radio1.on_clicked(amplitudefunc) # a set of radiobuttons about color ax2 = plt.axes([0.1,0.4,0.15,0.15],fc=axesbgcolor) radio2 = RadioButtons(ax2,(\u0026#34;red\u0026#34;,\u0026#34;green\u0026#34;,\u0026#34;orange\u0026#34;)) def colorfunc(label): line.set_color(label) plt.draw() radio2.on_clicked(colorfunc) # a set of radionbuttons about linestyle ax3 = plt.axes([0.1,0.1,0.15,0.15],fc=axesbgcolor) radio3 = RadioButtons(ax3,(\u0026#34;-\u0026#34;,\u0026#34;--\u0026#34;,\u0026#34;-.\u0026#34;,\u0026#34;:\u0026#34;)) def linestylefunc(label): line.set_linestyle(label) plt.draw() radio3.on_clicked(linestylefunc) plt.show()   Using matplotlib backend: Qt5Agg\r 类Cursor的使用方法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  from matplotlib.widgets import Cursor lineprops=dict(color=\u0026#34;red\u0026#34;,lw=2) fig,ax = plt.subplots(1,1,subplot_kw=dict(fc=\u0026#34;lemonchiffon\u0026#34;)) x = np.random.random(100) y = np.random.random(100) ax.scatter(x,y,marker=\u0026#34;o\u0026#34;) ax.set_xlim(-0.02,1.02) ax.set_ylim(-0.02,1.02) cursor = Cursor(ax,useblit=True,**lineprops) plt.show()   类 CheckButtons 的使用方法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  from matplotlib.widgets import CheckButtons x = np.linspace(0.0,2.0,1000) y1 = 1.2*np.cos(2*np.pi*x) y2 = 1.0*np.cos(2*np.pi*x) y3 = 0.8*np.cos(2*np.pi*x) fig,ax = plt.subplots(1,1) line1, = ax.plot(x,y1,color=\u0026#34;red\u0026#34;,lw=2,visible=False,label=\u0026#34;1.2 A\u0026#34;) line2, = ax.plot(x,y2,color=\u0026#34;green\u0026#34;,lw=2,label=\u0026#34;1.0 A\u0026#34;) line3, = ax.plot(x,y3,color=\u0026#34;orange\u0026#34;,lw=2,label=\u0026#34;0.8 A\u0026#34;) plt.subplots_adjust(left=0.30) axesbgcolor = \u0026#34;cornflowerblue\u0026#34; cax = plt.axes([0.1,0.4,0.1,0.15],fc=axesbgcolor) lines = [line1,line2,line3] labels = [str(line.get_label()) for line in lines] visibility = [line.get_visible() for line in lines] check = CheckButtons(cax,labels,visibility) def func(label): index = labels.index(label) lines[index].set_visible(not lines[index].get_visible()) plt.draw() check.on_clicked(func) plt.show()   事件处理效果 单击关闭画布后出现事件结果提示 1 2 3 4 5 6 7 8 9 10 11 12 13 14  from __future__ import print_function import matplotlib.pyplot as plt %matplotlib auto def handle_event(close): print(\u0026#34;Handling Event: Closed Figure!\u0026#34;) font_style = dict(family=\u0026#34;serif\u0026#34;,weight=\u0026#34;black\u0026#34;,size=40) fig = plt.figure() fig.canvas.mpl_connect(\u0026#34;close_event\u0026#34;, handle_event) plt.text(0.15, 0.5,\u0026#34;close_event\u0026#34;,**font_style)   Using matplotlib backend: Qt5Agg\rText(0.15, 0.5, 'close_event')\r 画布局部放大效果的实现方法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34  import numpy as np fig1,ax1 = plt.subplots(1,1) fig2,ax2 = plt.subplots(1,1) ax1.set_xlim(0,1) ax1.set_ylim(0,1) ax1.set_autoscale_on(False) ax1.set_title(\u0026#34;Click to zoom\u0026#34;) ax2.set_xlim(0.0,0.4) ax2.set_ylim(0.0,0.4) ax2.set_autoscale_on(False) ax2.set_title(\u0026#34;Zoom window\u0026#34;) x = np.random.rand(100) y = np.random.rand(100) s = np.random.rand(100)*100 c = np.random.rand(100) ax1.scatter(x,y,s,c) ax2.scatter(x,y,s,c) def clicktozoom(event): if event.button != 1: return x,y = event.xdata,event.ydata ax2.set_xlim(x-0.15,x+0.15) ax2.set_ylim(y-0.15,y+0.15) fig2.canvas.draw() fig1.canvas.mpl_connect(\u0026#34;button_press_event\u0026#34;, clicktozoom) plt.show()   导入图像 外部图像的多样化展示 1 2 3 4 5 6 7 8 9 10 11 12  import matplotlib.pyplot as plt from matplotlib.cbook import get_sample_data from matplotlib.patches import Circle imageArray = plt.imread(\u0026#34;./Ch10_sunflower.png\u0026#34;) fig, ax = plt.subplots(1,2, figsize=(12,6)) ax[0].imshow(imageArray) ax[0].set_axis_off() ai = ax[1].imshow(imageArray) patch = Circle((605, 360),radius=350, transform=ax[1].transData) ai.set_clip_path(patch) ax[1].set_axis_off()   地势图 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  import numpy as np from matplotlib.colors import LightSource fontstyle = dict(fontsize=25,weight=\u0026#34;bold\u0026#34;,family=\u0026#34;serif\u0026#34;) filePath = get_sample_data(\u0026#34;jacksboro_fault_dem.npz\u0026#34;,asfileobj=False) with np.load(filePath) as jfdem: elev = jfdem[\u0026#34;elevation\u0026#34;] fig,ax = plt.subplots(1,2) ls = LightSource(azdeg=315,altdeg=45) ai1 = ax[0].imshow(elev,cmap=plt.cm.gist_earth) fig.colorbar(ai1,ax=ax[0],orientation=\u0026#34;horizontal\u0026#34;) rgba = ls.shade(elev,cmap=plt.cm.gist_earth,vert_exag=0.05,blend_mode=\u0026#34;soft\u0026#34;) ai2 = ax[1].imshow(rgba) fig.colorbar(ai1,ax=ax[1],orientation=\u0026#34;horizontal\u0026#34;) fig.suptitle(\u0026#34;shaded relief plot blending with \u0026#39;soft\u0026#39;\u0026#34;,y=0.92,**fontstyle) plt.show()   热力图 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42  golfer_stats = [\u0026#34;GIR\u0026#34;,\u0026#34;Scrambling\u0026#34;,\u0026#34;Bounce Back\u0026#34;,\u0026#34;Ball Striking\u0026#34;,\u0026#34;Sand Saves\u0026#34;,\u0026#34;Birdie Conversion\u0026#34;] golfer_names = [\u0026#34;Golfer %d\u0026#34; % i for i in range(1,7)] # we use the normalized percentages. golfer_percentages = np.random.randn(6,6) shape = golfer_percentages.shape fig,ax = plt.subplots() im = ax.imshow(golfer_percentages,cmap=\u0026#34;Greens\u0026#34;) colorbar = fig.colorbar(im,ax=ax) colorbar.set_label(\u0026#34;Golfer normalized percentages\u0026#34;,rotation=-90,va=\u0026#34;bottom\u0026#34;) ax.set_xticks(np.arange(0,shape[1],1)) ax.set_yticks(np.arange(0,shape[0],1)) ax.set_xticklabels(golfer_names) ax.set_yticklabels(golfer_stats) # add text to each area of heatmap for i in range(len(golfer_stats)): for j in range(len(golfer_names)): text = ax.text(i,j,round(golfer_percentages[j,i],1),ha=\u0026#34;center\u0026#34;,va=\u0026#34;center\u0026#34;,color=\u0026#34;w\u0026#34;) # turn tick line off and set tick label position ax.tick_params(direction=\u0026#34;out\u0026#34;,bottom=False,right=False,labeltop=True,labelbottom=False) # set tick label format plt.setp(ax.get_xticklabels(),rotation=-30,ha=\u0026#34;right\u0026#34;,rotation_mode=\u0026#34;anchor\u0026#34;) # turn spines off spinesTupleList = list(ax.spines.items()) for i,each in enumerate(spinesTupleList): spine = each[1] spine.set_visible(False) # set minor tick line position and create white grid ax.set_xticks(np.arange(0.5,shape[1]-1,1),minor=True) ax.set_yticks(np.arange(0.5,shape[0]-1,1),minor=True) ax.grid(which=\u0026#34;minor\u0026#34;,color=\u0026#34;w\u0026#34;,linestyle=\u0026#34;-\u0026#34;,linewidth=3) # turn minor tick line off ax.tick_params(which=\u0026#34;minor\u0026#34;,top=False,bottom=False,left=False,right=False) fig.tight_layout()   设置图片具有超链接功能 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44  from matplotlib.offsetbox import AnnotationBbox,OffsetImage,TextArea fig = plt.figure() # set background of picture in the axes ax0 = plt.axes([0.0,0.0,1.0,1.0],frameon=True,aspect=\u0026#34;equal\u0026#34;) backgroundData = plt.imread(\u0026#34;./Ch10_map.jpg\u0026#34;) im0 = ax0.imshow(backgroundData) ax0.set_axis_off() # set point links with urls pc = plt.scatter([351,823],[343,163],c=\u0026#34;r\u0026#34;,edgecolors=\u0026#34;r\u0026#34;,s=50,alpha=0.8) pc.set_urls([\u0026#34;https://www.trip.com\u0026#34;,\u0026#34;https://www.wunderground.com\u0026#34;]) # add arrow to the background of picture ax0.annotate(\u0026#34;\u0026#34;,xy=(351,343),xytext=(823,163),xycoords=\u0026#34;data\u0026#34;,textcoords=\u0026#34;data\u0026#34;, arrowprops=dict(arrowstyle=\u0026#34;fancy,head_length=0.6,head_width=0.6,tail_width=0.5\u0026#34;, shrinkA=10,shrinkB=10,connectionstyle=\u0026#34;arc3,rad=0.3\u0026#34;,color=\u0026#34;b\u0026#34;)) #annotate 1st position with a image box imageData = plt.imread(\u0026#34;./Ch10_das-Auto.png\u0026#34;) imagebox = OffsetImage(imageData,zoom=0.035) ab_image = AnnotationBbox(imagebox,xy=(351,343),xybox=(-50,40),xycoords=\u0026#34;data\u0026#34;, boxcoords=\u0026#34;offset points\u0026#34;,pad=0.05,frameon=True, arrowprops=dict(arrowstyle=\u0026#34;-\u0026#34;,shrinkA=0,shrinkB=5,relpos=(1.0, 0.0))) ax0.add_artist(ab_image) # annotate 2rd position with a linked image ax1 = plt.axes([0.63,0.8,0.1,0.1],frameon=True,aspect=\u0026#34;equal\u0026#34;) imageData = plt.imread(\u0026#34;./Ch10_pilot.png\u0026#34;) im = ax1.imshow(imageData,url=\u0026#34;https://www.guankui.name\u0026#34;) #im.set_url(\u0026#34;https://www.lufthansa.com\u0026#34;) ax1.set_axis_off() # annotate 2rd position with a text box textprops=dict(fontsize=10,weight=\u0026#34;bold\u0026#34;,color=\u0026#34;b\u0026#34;) textbox = TextArea(\u0026#34;TRAVEL\u0026#34;,textprops=textprops) ab_text = AnnotationBbox(textbox,xy=(823,163),xybox=(-40,52),xycoords=\u0026#34;data\u0026#34;,boxcoords=\u0026#34;offset points\u0026#34;, pad=0.2,bboxprops=dict(facecolor=\u0026#34;gray\u0026#34;,alpha=0.5), arrowprops=dict(arrowstyle=\u0026#34;-\u0026#34;,shrinkA=0,shrinkB=5,relpos=(0.5, 0.0))) ax0.add_artist(ab_text) fig.savefig(\u0026#34;./Ch10_hyperlink_image.svg\u0026#34;)   添加画布层面的外部图像 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37  # create a new figure fig = plt.figure() # figure picture # use \u0026#34;r\u0026#34; to avoid escape sequence \\f imageData1 = plt.imread(r\u0026#34;./Ch10_captain-bird.png\u0026#34;) # add an image to the figure fig.figimage(imageData1,200,100,origin=\u0026#34;upper\u0026#34;,alpha=0.05,resize=True,zorder=1) # axes pictrue imageData2 = plt.imread(r\u0026#34;./Ch10_treasure-map.png\u0026#34;) # display an image i.e. data on a 2D raster plt.imshow(imageData2,alpha=1.0) plt.axis(\u0026#34;off\u0026#34;) # set several points plt.scatter([348,445,657],[387,523,415],c=\u0026#34;black\u0026#34;,edgecolor=\u0026#34;w\u0026#34;,s=50) bboxs=dict(facecolor=\u0026#34;navy\u0026#34;,edgecolor=\u0026#34;navy\u0026#34;,alpha=0.8) plt.text(299,369,r\u0026#34;#1$\\ \\Re\\Game\\Im$\u0026#34;,fontsize=15,color=\u0026#34;w\u0026#34;,bbox=bboxs) plt.text(404,504,r\u0026#34;#2$\\ \\ss\\ell\\wp$\u0026#34;,fontsize=15,color=\u0026#34;w\u0026#34;,bbox=bboxs) plt.text(614,399,r\u0026#34;#3$\\ \\hslash\\imath\\jmath$\u0026#34;,fontsize=15,color=\u0026#34;w\u0026#34;,bbox=bboxs) plt.annotate(\u0026#34;where to go...\u0026#34;,xy=(552,363),xycoords=\u0026#34;data\u0026#34;,xytext=(555,308),textcoords=\u0026#34;data\u0026#34;, weight=\u0026#34;black\u0026#34;,color=\u0026#34;#000000\u0026#34;,arrowprops=dict(arrowstyle=\u0026#34;\u0026lt;|-\u0026#34;,relpos=(0.2,0.0))) # set a diagram describing the points diagramContent = r\u0026#34;#1$\\ \\ $\u0026#34;+r\u0026#34;$\\bigstar$\u0026#34;*3+\u0026#34;\\n\u0026#34;+\\ r\u0026#34;#2$\\ \\ $\u0026#34;+r\u0026#34;$\\bigstar$\u0026#34;*4+\u0026#34;\\n\u0026#34;+\\ r\u0026#34;#3$\\ \\ $\u0026#34;+r\u0026#34;$\\bigstar$\u0026#34;*1+\u0026#34;\\n\u0026#34;+\\ r\u0026#34;#?$\\ \\ $\u0026#34;+\u0026#34;???\u0026#34; bbox={\u0026#34;boxstyle\u0026#34;:\u0026#34;round\u0026#34;,\u0026#34;facecolor\u0026#34;:\u0026#34;#F3F0ED\u0026#34;,\u0026#34;edgecolor\u0026#34;:\u0026#34;#453B34\u0026#34;,\u0026#34;linewidth\u0026#34;:2,\u0026#34;linestyle\u0026#34;:\u0026#34;--\u0026#34;,\u0026#34;alpha\u0026#34;:0.8} plt.text(688,162,diagramContent,fontsize=25,color=\u0026#34;#453B34\u0026#34;,rotation=-5,bbox=bbox) plt.text(663,62,\u0026#34;Potential Treasure\u0026#34;,fontsize=20,color=\u0026#34;k\u0026#34;,weight=\u0026#34;bold\u0026#34;,rotation=-5) # save a SVG file fig.savefig(r\u0026#34;.\\Ch10_figure_image.svg\u0026#34;)   颜色的翻转 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  import scipy.misc as msc fig,ax = plt.subplots(1,2) font = dict(family=\u0026#34;serif\u0026#34;,weight=\u0026#34;bold\u0026#34;) ascent = msc.ascent() inverted_ascent = 255 - ascent # show source image ax[0].imshow(ascent) ax[0].set_title(\u0026#34;source_image\u0026#34;,**font) ax[0].set_axis_off() # show inverted image ax[1].imshow(inverted_ascent) ax[1].set_title(\u0026#34;inverted_image\u0026#34;,**font) ax[1].set_axis_off() plt.show()   RGB 通道 NumPy 数组转换成单通道 NumPy 数组 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33  fig,ax = plt.subplots(2,2) font = dict(family=\u0026#34;monospace\u0026#34;,weight=\u0026#34;bold\u0026#34;) # get the array of RGB channels outfile = plt.imread(r\u0026#34;./Ch10_tree_image.jpg\u0026#34;) print(\u0026#34;the array \u0026#39;outfile\u0026#39; shape: {}\u0026#34;.format(outfile.shape)) # get the arrays of the red, green and blue channels rCh = outfile[:,:,0] print(\u0026#34;the array \u0026#39;rCh\u0026#39; shape: {}\u0026#34;.format(rCh.shape)) gCh = outfile[:,:,1] print(\u0026#34;the array \u0026#39;gCh\u0026#39; shape: {}\u0026#34;.format(gCh.shape)) bCh = outfile[:,:,2] print(\u0026#34;the array \u0026#39;bCh\u0026#39; shape: {}\u0026#34;.format(bCh.shape)) # show source image ax[0,0].imshow(outfile) ax[0,0].set_title(\u0026#34;source_image\u0026#34;,**font) ax[0,0].set_axis_off() # show the images of the red, green and blue channels ax[0,1].imshow(rCh) ax[0,1].set_title(\u0026#34;rCh_image\u0026#34;,**font) ax[0,1].set_axis_off() ax[1,0].imshow(gCh) ax[1,0].set_title(\u0026#34;gCh_image\u0026#34;,**font) ax[1,0].set_axis_off() ax[1,1].imshow(bCh) ax[1,1].set_title(\u0026#34;bCh_image\u0026#34;,**font) ax[1,1].set_axis_off()   the array 'outfile' shape: (1273, 1920, 3)\rthe array 'rCh' shape: (1273, 1920)\rthe array 'gCh' shape: (1273, 1920)\rthe array 'bCh' shape: (1273, 1920)\r 3D图形 绘制带颜色标尺的彩色曲面 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  import numpy as np import matplotlib.pyplot as plt import numpy as np from matplotlib import cm from matplotlib.ticker import LinearLocator, FormatStrFormatter from mpl_toolkits.mplot3d import axes3d fig = plt.figure() ax = fig.add_subplot(1, 1, 1, projection = \u0026#39;3d\u0026#39;) x = np.arange(-3, 3, 0.25) y = np.arange(-3, 3, 0.25) x, y = np.meshgrid(x, y) r = np.sqrt(np.power(x, 2) + np.power(y, 2)) z = np.sin(r) # plot 3d surface surf = ax.plot_surface(x, y, z, rstride = 1, cstride = 1, cmap = cm.coolwarm, linewidth = 0, antialiased = False) # customize the z axis ax.set(zlim = (-1, 1)) ax.zaxis.set_major_locator(LinearLocator(7)) ax.zaxis.set_major_formatter(FormatStrFormatter(\u0026#39;%3.2f\u0026#39;)) # add a color bar mapping values to colors fig.colorbar(surf, shrink = 0.6, aspect = 10, ) plt.show()   在3D空间里分层展示投射到指定平面后的2D柱状图 1 2 3 4 5 6 7 8 9 10 11 12 13  fig = plt.figure() ax = fig.add_subplot(1, 1, 1, projection = \u0026#39;3d\u0026#39;) colorsList = [\u0026#39;r\u0026#39;, \u0026#39;b\u0026#39;, \u0026#39;y\u0026#39;] yLayersList = [2, 1, 0] for color, layer in zip(colorsList, yLayersList): x = np.arange(10) y = np.random.rand(10) ax.bar(x, y, zs = layer, zdir = \u0026#39;y\u0026#39;, color = color, alpha = .7) ax.set(xlabel = \u0026#39;X\u0026#39;, ylabel = \u0026#39;Y\u0026#39;, zlabel = \u0026#39;Z\u0026#39;, yticks = yLayersList) plt.show()   在3D空间里绘制散点图 1 2 3 4 5 6 7 8 9 10 11 12 13  fig = plt.figure() ax = fig.gca(projection = \u0026#39;3d\u0026#39;) xs = np.random.rand(50)*10 ys = np.random.rand(50)*10+20 zs1 = np.random.rand(50)*10 zs2 = np.sqrt(xs**2+ys**2) ax.scatter(xs, ys, zs = zs1, zdir = \u0026#39;z\u0026#39;, c = \u0026#39;cornflowerblue\u0026#39;, marker = \u0026#39;o\u0026#39;, s = 40) ax.scatter(xs, ys, zs = zs2, zdir = \u0026#39;z\u0026#39;, c = \u0026#39;purple\u0026#39;, marker = \u0026#39;^\u0026#39;, s = 40) ax.set(xlabel = \u0026#39;X\u0026#39;, ylabel = \u0026#39;Y\u0026#39;, zlabel = \u0026#39;Z\u0026#39;) plt.show()   绘制地图 澳大利亚的首都和首府城市的人口数量 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56  from mpl_toolkits.basemap import Basemap import matplotlib.pyplot as plt import matplotlib as mpl import numpy as np # city population in 2017 locations = {\u0026#39;Sydney\u0026#39;:5131326, \u0026#39;Melbourne\u0026#39;:4850740, \u0026#39;Brisbane\u0026#39;:2408223, \u0026#39;Adelaide\u0026#39;:1333927, \u0026#39;Perth\u0026#39;:2043138, \u0026#39;Hobart\u0026#39;:226884, \u0026#39;Darwin\u0026#39;:146612, \u0026#39;Canberra\u0026#39;:41030} # Latitude and Longigude in degrees names = {\u0026#39;Sydney\u0026#39;:(-33.86785,151.20732), \u0026#39;Melbourne\u0026#39;:(-37.8142,144.96332), \u0026#39;Brisbane\u0026#39;:(-27.46794,153.02809), \u0026#39;Adelaide\u0026#39;:(-34.92866,138.59863), \u0026#39;Perth\u0026#39;:(-31.95224,115.8614), \u0026#39;Hobart\u0026#39;:(-42.87936,147.32941), \u0026#39;Darwin\u0026#39;:(-12.46113,130.84185), \u0026#39;Canberra\u0026#39;:(-35.28346,149.12807)} # setup mercator map projection basemap = Basemap(projection = \u0026#39;merc\u0026#39;, resolution = \u0026#39;h\u0026#39;, area_thresh = 0.1, llcrnrlon = 112, llcrnrlat = -45, urcrnrlon = 155, urcrnrlat = -8) # draw several map elements basemap.drawcoastlines(linewidth = 0.6, linestyle = \u0026#39;-\u0026#39;, color = \u0026#39;#b7cfe9\u0026#39;, zorder = 3) basemap.drawrivers(linewidth = 0.8, linestyle = \u0026#39;-\u0026#39;, color = \u0026#39;#689CD2\u0026#39;, zorder = 2) basemap.fillcontinents(color = \u0026#39;#BF9E30\u0026#39;, lake_color=\u0026#39;#689CD2\u0026#39;, zorder = 1) basemap.drawmapboundary(color = \u0026#39;gray\u0026#39;, fill_color = \u0026#39;#689CD2\u0026#39;) basemap.drawmeridians(np.arange(0, 360, 15), color = \u0026#39;#4e8bca\u0026#39;, labels = [0, 0, 0, 1], labelstyle = \u0026#39;+/-\u0026#39;) basemap.drawparallels(np.arange(-90, 90, 15), color = \u0026#39;#4e8bca\u0026#39;, labels = [1, 1, 0, 0], labelstyle = \u0026#39;+/-\u0026#39;) # convert lon/lat (in degrees) tp x/y map projection coordinates (in meters) # longitude is transformed into x and latitude in transformed into y names_values = [] names_keys = list(names.keys()) for i, name in enumerate(names_keys): names_values.append(names[name]) lat_x, long_y = list(zip(*names_values)) x, y = basemap(long_y, lat_x) # draw city markers and add text to markers size_factor = 80.0 offset_factor = 21000 roration = 30 max_population = max(locations.values()) for city_name, city_x, city_y in zip(names_keys, x, y): size = (size_factor/max_population)*locations[city_name] x_offset = offset_factor y_offset = offset_factor basemap.scatter(city_x, city_y, s = size, facecolor = \u0026#39;w\u0026#39;, edgecolor = \u0026#39;r\u0026#39;, linewidths = 2.0, zorder = 10) plt.text(city_x+x_offset, city_y+y_offset, city_name) # setup map title font = dict(family = \u0026#39;serif\u0026#39;, fontsize = 15, weight = \u0026#39;bold\u0026#39;) plt.title(\u0026#39;Australian Population of Captial City\u0026#39;, **font) plt.show()   当前时间点的昼夜地理区域分布 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  import datetime # setup miller projection basemap = Basemap(projection = \u0026#39;mill\u0026#39;, resolution = \u0026#39;h\u0026#39;, area_thresh = 0.1, llcrnrlon = -180, llcrnrlat = -90, urcrnrlon = 180, urcrnrlat = 90) # draw coastines basemap.drawcoastlines(linewidth = 0.6, zorder = 2) # darw mapboundary basemap.drawmapboundary(fill_color = \u0026#39;aqua\u0026#39;) # fill continents with color \u0026#39;coral\u0026#39;, and lake \u0026#39;aqua\u0026#39; basemap.fillcontinents(color = \u0026#39;coral\u0026#39;, lake_color = \u0026#39;aqua\u0026#39;, zorder = 1) # draw meridians and parallels basemap.drawmeridians(np.arange(-120, 150, 60), linewidth = 0.6, labels = [0, 0, 0, 1]) basemap.drawparallels(np.arange(-60, 80, 30), linewidth = 0.6, labels = [1, 0, 0, 0]) # shade the night areas, and use current in UTC date = datetime.datetime.utcnow() basemap.nightshade(date) # format title with data and time content = \u0026#39;Shade dark regions of the map %s(UTC)\u0026#39; dtFormat = \u0026#39;%d%b %Y %H:%M:%S\u0026#39; stringTime = date.strftime(dtFormat) plt.title(content % stringTime, fontsize = 15) plt.show()   城市之间相隔距离的可视化呈现 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42  class MapDisVisualization(Basemap): # get city names def getCityNames(self, names): namesKeys = list(names.keys()) return namesKeys # define distance between cityA and cityB def citiesDistance(self, x, y): d = np.power(np.power(x[0]-y[0], 2)+np.power(x[1]-y[1], 2), 0.5) distance = round(d, 4) return distance # compute distance between target city and every other city def centerCittyDistance(self, city, names): distanceDict = {} namesKeys = self.getCityNames(names) for i, name in enumerate(namesKeys): if name != city: distanceDict[name] = self.citiesDistance(names[city], names[name]) return distanceDict # compute line width and line color def setcolorandwidth(self, city, names): size_factor = 2.0 namesKeys = self.getCityNames(names) distanceDict = self.centerCittyDistance(city, names) distanceList = list(distanceDict.values()) maxDistacne = max(distanceList) for i, name in enumerate(namesKeys): if name != city: self.drawgreatcircle(names[city][1], names[city][0], names[name][1], names[name][0], linewidth = size_factor, color = mpl.cm.Blues(distanceDict[name]/float(maxDistacne))) # visualize city distance on the map def showmap(self, city, names): self.setcolorandwidth(city, names) namesKeys = self.getCityNames(names) number = len(namesKeys) titleContent = \u0026#39;a map of visualizing distance between %sand every other city (%dcities)\u0026#39; font = dict(family = \u0026#39;serif\u0026#39;, fontsize = 15, weight = \u0026#39;black\u0026#39;) plt.title(titleContent % (city, (number - 1)), fontdict = font) plt.show()   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  def main(projection, city): # get a Basemap instance m = MapDisVisualization(projection = projection, resolution = \u0026#39;h\u0026#39;, area_thresh = 0.1, llcrnrlon = 112, llcrnrlat = -50, urcrnrlon = 180, urcrnrlat = -8) # draw several elements on the map m.drawcoastlines(linewidth = 0.6, linestyle = \u0026#39;-\u0026#39;, zorder = 2) m.fillcontinents(alpha = 0.5, zorder = 1) m.drawmapboundary(color = \u0026#39;gray\u0026#39;) m.drawmeridians(np.arange(100, 180, 15), linewidth = 0.4, labels = [1, 0, 0, 0]) # Latitude and Longditude in degrees names = {\u0026#39;Sydney\u0026#39;:(-33.86785, 151.20732), \u0026#39;Wellington\u0026#39;:(-41.28664, 174.77557), \u0026#39;Brisbane\u0026#39;:(-27.46794, 153.02809), \u0026#39;Adelaide\u0026#39;:(-34.92866, 138.59863), \u0026#39;Perth\u0026#39;:(-31.95224, 115.8614), \u0026#39;Auckland\u0026#39;:(-36.86667, 174.76667), \u0026#39;Darwin\u0026#39;:(-12.46113, 130.84185), \u0026#39;Canberra\u0026#39;:(-35.28346, 149.12807)} # show the distance between Sydeny and every other city m.showmap(city, names) if __name__ == \u0026#39;__main__\u0026#39;: # use projection mercator and choose Sydeny main(\u0026#39;merc\u0026#39;, \u0026#39;Sydney\u0026#39;)   图形属性 输入数据可以使用字符串代替变量 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  import matplotlib.pyplot as plt import numpy as np fig = plt.figure() ax = fig.gca() x = np.random.rand(50)*10 y = np.random.rand(50)*10+20 s = np.random.rand(50)*100 c = np.random.rand(50) data = {\u0026#39;a\u0026#39;:x, \u0026#39;b\u0026#39;:y, \u0026#39;color\u0026#39;:c, \u0026#39;size\u0026#39;:s} # with the \u0026#39;data\u0026#39; keyword argement ax.scatter(\u0026#39;a\u0026#39;, \u0026#39;b\u0026#39;, c = \u0026#39;color\u0026#39;, s = \u0026#39;size\u0026#39;, data = data) ax.set(xlabel = \u0026#39;X\u0026#39;, ylabel = \u0026#39;Y\u0026#39;) plt.show()   以PDF文件格式存储画布图形 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36  from matplotlib.backends.backend_pdf import PdfPages with PdfPages(\u0026#39;./Ch13_PdfPages.pdf\u0026#39;) as pdf: # page one plt.figure(figsize = (4, 4)) x = np.random.rand(20)*100 y = np.random.rand(20)*100+30 s = np.random.rand(20)*100 c = np.random.rand(20) data = {\u0026#39;a\u0026#39;:x, \u0026#39;b\u0026#39;:y, \u0026#39;color\u0026#39;:c, \u0026#39;size\u0026#39;:s} plt.scatter(\u0026#39;a\u0026#39;, \u0026#39;b\u0026#39;, c = \u0026#39;color\u0026#39;, s = \u0026#39;size\u0026#39;, data = data) plt.title(\u0026#39;Page1\u0026#39;) pdf.savefig() # save the current figure plt.close() # close the current figure # page two fig = plt.figure(figsize = (8, 6)) x = np.linspace(0, 2*np.pi, 100) y1 = 0.5*np.cos(x) y2 = 0.5*np.sin(x) plt.plot(y1, y2, color = \u0026#39;navy\u0026#39;, lw = 3) plt.axis(\u0026#39;equal\u0026#39;) plt.title(\u0026#39;Page2\u0026#39;) pdf.savefig(fig) # pass the Figure instance fig to pdf.savefig plt.close(fig) # close the Figure instance fig # page three fig, ax = plt.subplots(1, 2) x = np.linspace(0, 2*np.pi, 100) y = np.sin(x)*np.exp(-x) ax[0].scatter(x, y, c = \u0026#39;cornflowerblue\u0026#39;, s = 100) ax[1].plot(x, y, \u0026#39;k-o\u0026#39;, lw = 2) ax[1].set(xlim = (-1, 7)) fig.suptitle(\u0026#39;Page3\u0026#39;) pdf.savefig(fig) plt.close(fig)   调用pyplot的API和面向对象的API设置图形属性 pyplot的API的代码编写方法 1 2 3 4  x = [1, 2, 3, 4, 5] y = [2, 4, 1, 8, 3] line, = plt.plot(x, y) plt.setp(line, \u0026#39;linewidth\u0026#39;, 2)   [None]\r 面向对象API的代码编写方法 1 2 3 4  x = [1, 2, 3, 4, 5] y = [2, 4, 1, 8, 3] line, = plt.plot(x, y) line.set_linewidth(2)   用树形图展示文件夹中的文件大小 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43  import squarify from glob import glob from matplotlib.image import thumbnail from os import mkdir from os.path import basename, dirname, getsize, isdir, join from sys import argv script, indir, outdir = argv sizeList = [] nameList = [] if len(argv) != 3: print(\u0026#39;On command line, information is not full.\u0026#39;) raise SystemExit if not isdir(indir): print(\u0026#39;Input directory %ris not found.\u0026#39; %indir) raise SystemExit if not isdir(outdir): print(\u0026#39;Output directory %ris created.\u0026#39; % outdir) mkdir(outdir) else: print(\u0026#39;Output directory %rhas been created\u0026#39; % outdir) # the image file must be PNG or Pillow-readable for fname in glob(join(indir, \u0026#39;*.png\u0026#39;)): indir = dirname(fname) filename = basename(fname) outfile = join(outdir, filename) fig = thumbnail(fname, outfile, scale = 0.5) print(\u0026#39;Copy %rof %rtpo %r\u0026#39; % (filename, indir, outdir)) outfilesize = getsize(outfile) sizeList.append(outfilesize) fn = filename.split(\u0026#39;.\u0026#39;) nameList.append(fn[0]) # treemap squarify.plot(sizeList, label = nameList, alpha = .7) plt.hsv() # set color plt.axis(\u0026#39;off\u0026#39;) plt.show()   1  !python Ch13_image_thumbnail_visualization.py \u0026#34;C:\\Users\\Boylad\\Pictures\u0026#34; \u0026#34;C:\\Users\\Boylad\\Pictures\\thumbnail\u0026#34;   Output directory 'C:\\\\Users\\\\Boylad\\\\Pictures\\\\thumbnail' is created.\rCopy 'chenping.png' of 'C:\\\\Users\\\\Boylad\\\\Pictures' tpo 'C:\\\\Users\\\\Boylad\\\\Pictures\\\\thumbnail'\rCopy 'download (1).png' of 'C:\\\\Users\\\\Boylad\\\\Pictures' tpo 'C:\\\\Users\\\\Boylad\\\\Pictures\\\\thumbnail'\rCopy 'phoenix.png' of 'C:\\\\Users\\\\Boylad\\\\Pictures' tpo 'C:\\\\Users\\\\Boylad\\\\Pictures\\\\thumbnail'\rCopy 'school_of_evofish.png' of 'C:\\\\Users\\\\Boylad\\\\Pictures' tpo 'C:\\\\Users\\\\Boylad\\\\Pictures\\\\thumbnail'\rCopy '荣格测试.png' of 'C:\\\\Users\\\\Boylad\\\\Pictures' tpo 'C:\\\\Users\\\\Boylad\\\\Pictures\\\\thumbnail'\rFigure(640x480)\r matplotlib 风格集的设置方法 1 2 3  from matplotlib.style.core import available available   ['Solarize_Light2',\r'_classic_test_patch',\r'_mpl-gallery',\r'_mpl-gallery-nogrid',\r'bmh',\r'classic',\r'dark_background',\r'fast',\r'fivethirtyeight',\r'ggplot',\r'grayscale',\r'seaborn',\r'seaborn-bright',\r'seaborn-colorblind',\r'seaborn-dark',\r'seaborn-dark-palette',\r'seaborn-darkgrid',\r'seaborn-deep',\r'seaborn-muted',\r'seaborn-notebook',\r'seaborn-paper',\r'seaborn-pastel',\r'seaborn-poster',\r'seaborn-talk',\r'seaborn-ticks',\r'seaborn-white',\r'seaborn-whitegrid',\r'tableau-colorblind10']\r 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  from matplotlib.style.core import use, available use(\u0026#39;fivethirtyeight\u0026#39;) # ColorBrewer Diverging: RdYlBu hexHtml = [\u0026#39;#d73027\u0026#39;, \u0026#39;#f46d43\u0026#39;, \u0026#39;#fdae61\u0026#39;, \u0026#39;#fee090\u0026#39;, \u0026#39;#ffffbf\u0026#39;, \u0026#39;#e0f3f8\u0026#39;, \u0026#39;#abd9e9\u0026#39;, \u0026#39;#74add1\u0026#39;, \u0026#39;#4575b4\u0026#39;] sample = 1000 fig, ax = plt.subplots() for i in range(len(hexHtml)): x = np.arange(sample) y = np.random.normal(0, 0.1, size = sample).cumsum() ax.scatter(x, y, label = str(i), linewidths = 0.1, edgecolors = \u0026#39;grey\u0026#39;, facecolor = hexHtml[i]) ax.legend() plt.show()   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31  use(\u0026#39;ggplot\u0026#39;) x = np.linspace(0, 2*np.pi, 100) y = 1.85*np.sin(x) y1 = 1.85*np.sin(x)+np.random.randn(100) fig, ax = plt.subplots(2, 2, sharex = True, sharey = True) # subplot(2, 2, 1) ax[0, 0].scatter(x, y1, s = 50, c = \u0026#39;dodgerblue\u0026#39;) ax[0, 0].set_ylim(-5, 5) ax[0, 0].set_facecolor(\u0026#39;lemonchiffon\u0026#39;) # subplot(2, 2, 2) ax[0, 1].plot(x, y, lw = 3, color = \u0026#39;yellowgreen\u0026#39;) ax[0, 1].set_xlim(-1, 7) ax[0, 1].set_ylim(-5, 5) ax[0, 1].set_facecolor(\u0026#39;lemonchiffon\u0026#39;) # subplot(2, 2, 3) ax[1, 0].plot(x, y, ls = \u0026#39;--\u0026#39;, lw = 3, color = \u0026#39;k\u0026#39;) ax[1, 0].scatter(x, y1, s = 50, c = \u0026#39;r\u0026#39;) ax[1, 0].set_ylim(-5, 5) ax[1, 0].set_facecolor(\u0026#39;lemonchiffon\u0026#39;) # subplot(2, 2, 4) # non-existence fig.suptitle(\u0026#34;\u0026#39;ggplot\u0026#39; style of subplots (2, 2)\u0026#34;, fontsize = 18, weight = \u0026#39;bold\u0026#39;, family = \u0026#39;monospace\u0026#39;) plt.show(0)   matplotlib后端类型的配置方法 1 2 3  import matplotlib as mpl print(mpl.get_backend())   module://ipykernel.pylab.backend_inline\r 3种方法改变后端类型  方法1——调用属性字典rcParams  1 2 3 4 5 6 7 8  mpl.rcParams[\u0026#39;backend\u0026#39;] = \u0026#39;Qt5Agg\u0026#39; x = np.linspace(-2*np.pi, 2*np.pi, 1000) y = np.exp(-x)*np.sin(2*np.pi*x) plt.plot(x, y, linewidth = 3.0) plt.show()    方法2——使用函数use()  1 2 3 4 5 6  mpl.use(\u0026#39;qt5agg\u0026#39;) x = np.linspace(-2*np.pi, 2*np.pi, 1000) y = np.exp(-x)*np.sin(2*np.pi*x) plt.plot(x, y, color = \u0026#39;g\u0026#39;, linewidth = 3.0)   [\u0026lt;matplotlib.lines.Line2D at 0x290b9466b20\u0026gt;]\r  方法3——使用配置文件matplotlibrc  matplotlibrc配置文件和脚本放同一路径下！\n1 2 3 4 5 6  x = np.linspace(-2*np.pi, 2*np.pi, 1000) y = np.exp(-x)*np.sin(2*np.pi*x) plt.plot(x, y, color = \u0026#39;k\u0026#39;, linewidth = 3.0) plt.show()   Latex 案例展示 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47  import numpy as np import matplotlib as mpl import matplotlib.pyplot as plt from jupyterthemes import jtplot jtplot.style(theme=\u0026#39;grade3\u0026#39;, context=\u0026#39;paper\u0026#39;) plt.rc(\u0026#39;text\u0026#39;, usetex=True) plt.rc(\u0026#39;text.latex\u0026#39;, preamble=r\u0026#39;\\usepackage{amsmath}\u0026#39;) plt.rc(\u0026#34;font\u0026#34;,**{\u0026#34;family\u0026#34;:\u0026#34;sans-serif\u0026#34;,\u0026#34;sans-serif\u0026#34;:[\u0026#34;Helvetica\u0026#34;],\u0026#34;size\u0026#34;:16}) # sample data t = np.linspace(0.0, 1.0, 100) s = np.cos(4*np.pi*t)+2 # plt figure plt.plot(t, s, ls = \u0026#39;-\u0026#39;, lw = 0.5, c = \u0026#39;b\u0026#39;) # No.1 text plt.text(0.2,2.8, r\u0026#34;$some\\ ranges:(\\alpha),[\\beta],\\{\\gamma\\},|\\Gamma|,\\Vert\\phi\\Vert,\\langle\\Phi\\rangle$\u0026#34;) # No.2 text # these went wrong in pdf in a previous version plt.text(0.2, 2.5, r\u0026#34;gamma: $\\gamma$\u0026#34;, {\u0026#34;color\u0026#34;: \u0026#34;r\u0026#34;, \u0026#34;fontsize\u0026#34;: 20}) plt.text(0.2, 2.3, r\u0026#34;Omega: $\\Omega$\u0026#34;, {\u0026#34;color\u0026#34;: \u0026#34;b\u0026#34;, \u0026#34;fontsize\u0026#34;: 20}) # No.3 text plt.text(0.2,2.0,r\u0026#34;$\\lim_{i\\to\\infty}\\cos(2\\pi)\\times\\exp\\{-i\\}=0$\u0026#34;) # No.4 text plt.text(0.2,1.5,r\u0026#34;$\\mathrm{math\\ equation}:\\frac{n!}{(n-k)!}=\\binom{n}{k}$\u0026#34;,{\u0026#34;color\u0026#34;: \u0026#34;c\u0026#34;, \u0026#34;fontsize\u0026#34;: 20}) # No.5 text plt.text(0.2,1.2,r\u0026#34;$\\forall\\ i,\\exists\\ \\alpha_i\\geq\\beta_i,\\sqrt{\\alpha_i-\\beta_i}\\geq{0}$\u0026#34;) # we can write labels with LaTeX plt.xlabel(r\u0026#34;\\textbf{time(s)}\u0026#34;) plt.ylabel(r\u0026#34;\\textit{Velocity(m/s)}\u0026#34;) # and also write title with LaTex plt.title(r\u0026#34;\\TeX\\ is Number $\\displaystyle\\sum_{n=1}^\\infty\\frac{-e^{i\\pi}}{2^n}$!\u0026#34;, color=\u0026#34;r\u0026#34;) plt.annotate(r\u0026#34;$\\cos(4\\times\\pi\\times{t})+2$\u0026#34;, xy=(0.87,2.0), xytext=(0.65,2.3), color=\u0026#34;r\u0026#34;, arrowprops={\u0026#34;arrowstyle\u0026#34;:\u0026#34;-\u0026gt;\u0026#34;,\u0026#34;color\u0026#34;:\u0026#34;r\u0026#34;}) plt.subplots_adjust(top=0.8) plt.grid(False) plt.show()   数学表达式 设置输出字符串的字体效果 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  import matplotlib as mpl import numpy as np import matplotlib.pyplot as plt from jupyterthemes import jtplot jtplot.style(theme=\u0026#39;grade3\u0026#39;, context=\u0026#39;paper\u0026#39;) # set sample data x = np.linspace(0,10,10000) y = np.sin(x)*np.cos(x) plt.figure(figsize = (8,6)) plt.plot(x,y,ls=\u0026#34;-\u0026#34;,lw=2,color=\u0026#34;c\u0026#34;,alpha=0.3) plt.text(1,0.5,r\u0026#34;\\mathrm{Roman}:$\\mathrm{Roman}\\/(1st)$\u0026#34;, fontsize=15) plt.text(1,0.4,r\u0026#34;\\mathit{Italic}:$\\mathit{Italic}\\/(2nd)$\u0026#34;, fontsize=15) plt.text(1,0.3,r\u0026#34;\\mathtt{Typewriter}:$\\mathtt{Typewriter}\\/(3rd)$\u0026#34;, fontsize=15) plt.text(1,0.2,r\u0026#34;\\mathcal{CALLIGRAPHY}:$\\mathcal{CALLIGRAPHY}\\/(4th)$\u0026#34;, fontsize=15) plt.text(1,0.1,r\u0026#34;\\mathbb{blackboard}:$\\mathbb{blackboard}\\/(5th)$\u0026#34;, fontsize=15) plt.text(1,0.0,r\u0026#34;\\mathfrak{Fraktur}:$\\mathfrak{Fraktur}\\/(6th)$\u0026#34;, fontsize=15) plt.text(1,-0.1,r\u0026#34;\\mathsf{sansserif}:$\\mathsf{sansserif}\\/(7th)$\u0026#34;, fontsize=15) # plt.text(1,-0.2,r\u0026#34;\\mathcircled{circled}:$\\mathcircled{3333}\\/(8th)$\u0026#34;, fontsize=15) plt.text(1,-0.3,r\u0026#34;\\mathrm{\\mathbb{blackboard}}:$\\mathrm{\\mathbb{blackboard}}\\/(9th)$\u0026#34;,fontsize=15) plt.grid(False) plt.show()   通过数学公式和数学表达式学习TeX符号的编写规则 $\\sin^2\\alpha+\\cos^2\\alpha=1$ 1 2 3 4 5 6 7  # set sample data x = np.linspace(0,10,10000) y = np.power(np.sin(x),2)+np.power(np.cos(x),2) plt.plot(x,y,ls=\u0026#34;-\u0026#34;,lw=2,color=\u0026#34;c\u0026#34;,alpha=0.3) plt.text(1,1.01,r\u0026#34;$\\sin^2\\alpha+\\cos^2\\alpha=1$\u0026#34;,fontsize=20) plt.grid(False) plt.show()   $\\bar X = \\frac{\\sum_{i=1}^n x_i}{n}$ 1 2 3 4 5 6 7 8 9  # set sample data x = np.linspace(0,10,10000) y = np.sin(x)*np.cos(x) plt.plot(x,y,ls=\u0026#34;-\u0026#34;,lw=2,color=\u0026#34;c\u0026#34;,alpha=0.3) plt.text(1,0.02,r\u0026#34;$\\mathrm{\\bar x=\\frac{\\sum_{i=1}^{n}x_i}{n}}$\u0026#34;, fontsize=20) plt.axhline(y=0,ls=\u0026#34;:\u0026#34;,lw=2,color=\u0026#34;r\u0026#34;) plt.grid(False) plt.show()    使用Latex渲染  1 2 3 4 5 6 7 8 9 10 11 12  plt.rc(\u0026#39;text\u0026#39;, usetex=True) plt.rc(\u0026#39;text.latex\u0026#39;, preamble=r\u0026#39;\\usepackage{amsmath}\u0026#39;) plt.rc(\u0026#34;font\u0026#34;,**{\u0026#34;family\u0026#34;:\u0026#34;sans-serif\u0026#34;,\u0026#34;sans-serif\u0026#34;:[\u0026#34;Helvetica\u0026#34;],\u0026#34;size\u0026#34;:16}) # set sample data x = np.linspace(0,10,10000) y = np.sin(x)*np.cos(x) plt.plot(x,y,ls=\u0026#34;-\u0026#34;,lw=2,color=\u0026#34;c\u0026#34;,alpha=0.3) plt.text(1,0.02,r\u0026#34;$\\mathrm{\\bar x = \\frac{\\sum_{i=1}^n x_i}{n}}$\u0026#34;,fontsize=20) plt.axhline(y=0,ls=\u0026#34;:\u0026#34;,lw=2,color=\u0026#34;r\u0026#34;) plt.grid(False) plt.show()   $\\lim_{n\\to\\infty}(1+\\frac{1}{n})^n$ 1 2 3 4 5 6 7 8 9  # set sample data x = np.linspace(1,10,10000) y = np.power(1+1/x,x) plt.plot(x,y,ls=\u0026#34;-\u0026#34;,lw=2,color=\u0026#34;c\u0026#34;,alpha=0.3) plt.text(1,2.64,r\u0026#34;$\\mathrm{\\lim_{n\\to\\infty}(1+\\frac{1}{n})^{n}}$\u0026#34;, fontsize=20) plt.axhline(y=np.exp(1),ls=\u0026#34;:\u0026#34;,lw=2,color=\u0026#34;r\u0026#34;) plt.grid(False) plt.show()   $\\max_{0\\leq x \\leq10}xe^{-x^2}$\n1 2 3 4 5 6 7 8  # set sample data x = np.linspace(0,10,10000) y = x*np.power(np.exp(1),(-x**2)) plt.plot(x,y,ls=\u0026#34;-\u0026#34;,lw=2,color=\u0026#34;r\u0026#34;) plt.text(1,0.39,r\u0026#34;$\\mathrm{\\max_{0\\leq{x}\\leq10} xe^{-{x}^2}}$\u0026#34;,fontsize=20) plt.axhline(y=np.max(x*np.power(np.exp(1),(-x**2))),ls=\u0026#34;:\u0026#34;,lw=2,color=\u0026#34;c\u0026#34;) plt.grid(False) plt.show()   $\\log_2 x$ 1 2 3 4 5 6 7 8 9  # set sample data x = np.linspace(0.5,16,100) y = np.array([np.log2(value) for value in x]) plt.plot(x,y,ls=\u0026#34;-\u0026#34;,lw=2,color=\u0026#34;r\u0026#34;) plt.text(4.0,1.6,r\u0026#34;$\\mathrm{\\log_{2}{x}}$\u0026#34;,fontsize=20) plt.axhline(y=1,ls=\u0026#34;:\u0026#34;,lw=2,color=\u0026#34;c\u0026#34;) plt.axvline(x=2,ls=\u0026#34;:\u0026#34;,lw=2,color=\u0026#34;c\u0026#34;) plt.grid(False) plt.show()   矩阵$\\begin{pmatrix} \\ln{e^2} \u0026amp; 2 \\ 1 \u0026amp; \\ln e \\end{pmatrix}$ 1 2 3 4 5 6 7 8 9 10 11 12 13 14  # set sample data x = np.linspace(0.5,16,100) y = [np.log(value) for value in x] plt.plot(x,y,ls=\u0026#34;-\u0026#34;,lw=2,color=\u0026#34;r\u0026#34;) plt.text(4.0,2.1,r\u0026#34;$\\mathrm{\\begin{pmatrix}\\ln{e^{2}}\u0026amp;2 \\\\1\u0026amp;\\ln{e}\\end{pmatrix}}$\u0026#34;,fontsize=20) plt.text(12.0,2.3,r\u0026#34;$\\mathrm{y=\\ln{x}}$\u0026#34;,fontsize=20) #(e,1) plt.axhline(y=1,ls=\u0026#34;:\u0026#34;,lw=1,color=\u0026#34;c\u0026#34;) plt.axvline(x=np.exp(1),ls=\u0026#34;:\u0026#34;,lw=1,color=\u0026#34;c\u0026#34;) #(e^2,2) plt.axhline(y=2,ls=\u0026#34;:\u0026#34;,lw=1,color=\u0026#34;c\u0026#34;) plt.axvline(x=(np.exp(1))*(np.exp(1)),ls=\u0026#34;:\u0026#34;,lw=1,color=\u0026#34;c\u0026#34;) plt.grid(False) plt.show()   ","description":" ","id":5,"section":"booknote","tags":["Python"],"title":"《Matplotlib精进》","uri":"https://www.metasphinx.com/zh/booknote/20221010_matplotlib/"},{"content":"KNN乳腺癌诊断 过拟合：试图用模型拟合噪声。\n1 2 3 4  # 保存和加载R数据结构 save(x, y ,z, file = \u0026#39;mydata.RData\u0026#39;) load(\u0026#39;mydata.RData\u0026#39;) save.image()   %in%操作符：根据左边的值是否在右边的向量中，为操作符左边向量中的每一个值返回TRUE或FALASE。\n 近邻分类器非常适用于这样的分类任务，其中的特征和目标之间的关系众多、复杂，用其他方式难以理解，但是具有相似类的项目又是非常相似。\n 过拟合与欠拟合训练数据之间的平衡问题称为bias-variance tradeoff。\n 大的k会减少噪声数据对模型的影响或者减少噪声导致的模型波动，但是它会使分类器产生偏差，比如，它有忽视不易察觉但却很重要模式的风险。 较小的k值会给出更复杂的决策边界，它可以更精细地拟合训练数据。但并不知道是直线边界还是曲线边界能更好地代表将要学习的概念。  应用kNN算法之前，通常将特征转换为一个标准的范围内。\n min-max标准化\n$$X_{new}=\\frac{X-min(x)}{max(X)-min(X)}$$ z-score标准化\n$$X_{new}=\\frac{X-\\mu}{\\sigma}=\\frac{x-Mean(X)}{StdDev(X)}$$  为计算名义特征之间的距离，需要将其转换为数值格式：\n dummy coding：编码后特征之间的距离总为1或者0，不需要进行额外的变换。 如果名义特征是有序的，可以对顺序编号进行min-max标准化。  为什么kNN算法是懒惰的 kNN仅仅是一字不差地存储训练数据，这样训练阶段就进行得很快，进行预测的过程往往会变得相对较慢。由于高度依赖于训练案例，所以懒惰学习又称为instance-based learning或rote learning。由于不会建立一个新模型，该方法又被归类为non-parametric学习方法。\n数据处理 数据包括乳房肿块细针抽吸活检图像的数字化的多项测度值，这些值代表出现在数字化图像中的细胞核特征。乳腺癌数据包括569例细胞活检案例，每个案例有32个特征。一个特征是识别号码，一个特征是癌症诊断结果，其他30个特征是数值型的实验室测量结果。癌症诊断结果用编码\u0026quot;M\u0026quot;表示恶性，用编码\u0026quot;B\u0026quot;表示良性。\n1 2  wbcd \u0026lt;- read.csv(\u0026#34;G:/R/Machine Learning With R/data/Chapter 03/wisc_bc_data.csv\u0026#34;, stringsAsFactors = FALSE) str(wbcd)   'data.frame':\t569 obs. of 32 variables:\r$ id : int 87139402 8910251 905520 868871 9012568 906539 925291 87880 862989 89827 ...\r$ diagnosis : chr \u0026quot;B\u0026quot; \u0026quot;B\u0026quot; \u0026quot;B\u0026quot; \u0026quot;B\u0026quot; ...\r$ radius_mean : num 12.3 10.6 11 11.3 15.2 ...\r$ texture_mean : num 12.4 18.9 16.8 13.4 13.2 ...\r$ perimeter_mean : num 78.8 69.3 70.9 73 97.7 ...\r$ area_mean : num 464 346 373 385 712 ...\r$ smoothness_mean : num 0.1028 0.0969 0.1077 0.1164 0.0796 ...\r$ compactness_mean : num 0.0698 0.1147 0.078 0.1136 0.0693 ...\r$ concavity_mean : num 0.0399 0.0639 0.0305 0.0464 0.0339 ...\r$ points_mean : num 0.037 0.0264 0.0248 0.048 0.0266 ...\r$ symmetry_mean : num 0.196 0.192 0.171 0.177 0.172 ...\r$ dimension_mean : num 0.0595 0.0649 0.0634 0.0607 0.0554 ...\r$ radius_se : num 0.236 0.451 0.197 0.338 0.178 ...\r$ texture_se : num 0.666 1.197 1.387 1.343 0.412 ...\r$ perimeter_se : num 1.67 3.43 1.34 1.85 1.34 ...\r$ area_se : num 17.4 27.1 13.5 26.3 17.7 ...\r$ smoothness_se : num 0.00805 0.00747 0.00516 0.01127 0.00501 ...\r$ compactness_se : num 0.0118 0.03581 0.00936 0.03498 0.01485 ...\r$ concavity_se : num 0.0168 0.0335 0.0106 0.0219 0.0155 ...\r$ points_se : num 0.01241 0.01365 0.00748 0.01965 0.00915 ...\r$ symmetry_se : num 0.0192 0.035 0.0172 0.0158 0.0165 ...\r$ dimension_se : num 0.00225 0.00332 0.0022 0.00344 0.00177 ...\r$ radius_worst : num 13.5 11.9 12.4 11.9 16.2 ...\r$ texture_worst : num 15.6 22.9 26.4 15.8 15.7 ...\r$ perimeter_worst : num 87 78.3 79.9 76.5 104.5 ...\r$ area_worst : num 549 425 471 434 819 ...\r$ smoothness_worst : num 0.139 0.121 0.137 0.137 0.113 ...\r$ compactness_worst: num 0.127 0.252 0.148 0.182 0.174 ...\r$ concavity_worst : num 0.1242 0.1916 0.1067 0.0867 0.1362 ...\r$ points_worst : num 0.0939 0.0793 0.0743 0.0861 0.0818 ...\r$ symmetry_worst : num 0.283 0.294 0.3 0.21 0.249 ...\r$ dimension_worst : num 0.0677 0.0759 0.0788 0.0678 0.0677 ...\rid变量是每个病人在数据中的唯一标识符（ID），它不能提供有用的信息，需要从模型中排除。不管是什么机器学习方法，ID变量总要被剔除，因为ID可以用来独一无二地“预测”每一个案例，容易过拟合。变量diagnosis（诊断），是希望预测的结果。\n1 2  wbcd \u0026lt;- wbcd[-1] # 复制一个不包括列1的wbcd数据框 table(wbcd$diagnosis)   B M 357 212 许多R机器学习分类器要求将目标属性编码为因子型，所以需要重新编码字符的diagnosis变量。同时用labels参数对B值和M值给出含有更多信息的标签。函数prop.table()输出结果显示，分别有62.7%的良性肿块和37.3%的恶性肿块。\n1 2  wbcd$diagnosis \u0026lt;- factor(wbcd$diagnosis, levels = c(\u0026#34;B\u0026#34;, \u0026#34;M\u0026#34;), labels = c(\u0026#34;Benign\u0026#34;, \u0026#34;Malignant\u0026#34;)) round(prop.table(table(wbcd$diagnosis))*100, digits = 1)   Benign Malignant 62.7 37.3 min-max标准化 lapply()函数可以输入一个列表，然后把一个函数应该到列表的每一个元素。因为数据框是一个含有等长度向量的列表，可以使用lapply()函数将normalize()函数应用到数据框中的每一个特征。\n1 2 3 4 5 6 7 8 9 10 11  normalize \u0026lt;- function(x){ return((x - min(x)) / (max(x) - min(x))) } wbcd_n \u0026lt;- as.data.frame(lapply(wbcd[2:31], normalize)) # 数据中的案例已经随机排列 wbcd_train \u0026lt;- wbcd_n[1:469, ] wbcd_test \u0026lt;- wbcd_n[470:569, ] wbcd_train_labels \u0026lt;- wbcd[1:469,1] wbcd_test_labels \u0026lt;- wbcd[470:569,1]   模型训练 class包中knn()函数使用欧氏距离标识k个近邻，通过k个近邻的“投票”来对测试个案进行分类，奇数k有助于减少各个类投票数相等这一情况的发生。如果各个类的票数相等，则测试实例会被随机分类。函数knn()返回一个因子向量，为测试数据集中的每一个案例返回一个预测标签。\n1 2 3  library(class) wbcd_test_pred \u0026lt;- knn(train = wbcd_train, test = wbcd_test, cl = wbcd_train_labels, k = 21)   性能评估 评估wbcd_test_pred向量中预测的分类与wbcd_test_labels向量中已知的值的匹配程度，可使用gmodels添加包中的CrossTable()函数，该函数可以创建一个标识两个向量之间一致性的交叉表。\n1 2  library(gmodels) CrossTable(x = wbcd_test_labels, y = wbcd_test_pred, prop.chisq = FALSE)   Cell Contents\r|-------------------------|\r| N |\r| N / Row Total |\r| N / Col Total |\r| N / Table Total |\r|-------------------------|\rTotal Observations in Table: 100 | wbcd_test_pred wbcd_test_labels | Benign | Malignant | Row Total | -----------------|-----------|-----------|-----------|\rBenign | 61 | 0 | 61 | | 1.000 | 0.000 | 0.610 | | 0.968 | 0.000 | | | 0.610 | 0.000 | | -----------------|-----------|-----------|-----------|\rMalignant | 2 | 37 | 39 | | 0.051 | 0.949 | 0.390 | | 0.032 | 1.000 | | | 0.020 | 0.370 | | -----------------|-----------|-----------|-----------|\rColumn Total | 63 | 37 | 100 | | 0.630 | 0.370 | | -----------------|-----------|-----------|-----------|\r表格中单元格的百分比表示落在4个分类结果里的值所占的比例。在左上角的单元格中，是真阴性(True Negative)的结果。100个值中有61个值标识肿块是良性的，而KNN算法也正确地把它们标识为良性的。在右下角的单元格中，显示的是真阳性(True Positive)的结果，这里表示的是分类器和临床确定的标签一致认为肿块是恶性的情形。100个预测值中有37个是真阴性的。落在另一对角线上的单元格包含了kNN算法与真实标签不一致的案例计数。位于左下角单元格的2个案例是假阴性(False Negative)的结果，在这种情况下，预测的值是良性的，但肿瘤实际上是恶性的。这个方向上的错误可能会产生极其高昂的代价，因为它们可能导致一位病人认为自己没有癌症，而实际上这种疾病可能会继续蔓延。如果右上角的单元格里有值，他包含的是假阳性(False Positive)的结果。当模型把肿块标识为恶性的，而事实上它是良性的就会产生这里的值。尽管这类错误没有假阴性的结果那么危险，但这类错误也应该避免，因为它们可能导致医疗系统的额外财政负担，或者病人的额外压力，毕竟这需要提供额外的检查或者治疗。根据kNN算法，个肿块中，有两个是被错误分类的，准确度达到了98%。\n性能提升  z-score标准化 尝试其他的k值  朴素贝叶斯手机垃圾短信过滤 基于贝叶斯方法的分类器是利用训练数据并根据特征的取值来计算每个类别被观察到的概率。当分类器被应用到无标签数据时，分类器就会根据观测到的概率来预测新的特征最有可能是属于哪个类。\n贝叶斯定理：\n$$P(A|B)=\\frac{P(B|A)P(A)}{P(B)}=\\frac{P(A\\bigcap B)}{B} $$\n其中：\n $P(A|B)$：后验概率 $P(B|A)$：似然概率 $P(A)$：先验概率 $P(B)$：边际似然概率  Naive Bayes 朴素贝叶斯假设数据集的所有特征都具有同样的重要性和类条件独立(class-conditional independence)。类条件独立意味着只要事件在相同类取值的条件下，这些事件就是相互独立的。本质上，在给定特征$F_1$,到$F_n$提供的证据的条件下，类$C$中水平为$L$的概率等于每一条证据在类$C$的水平$L$下的条件概率的乘积，再乘以类$C$的水平$L$的先验概率和尺度因子$1/Z$,尺度因子1/Z将把上述结果转换为一个概率值：\n$$P(C_L|F_1,\\cdots,F_n)=\\frac{1}{Z}p(C_L)\\prod_{i=1}^n{p(F_i|C_L)}$$\nLaplace estimator 拉普拉斯估计本质上是给频率表中的每个计数加上一个较小的数，这样就保证了每一类中每个特征发生的概率是非零的。通常情况下，拉普拉斯估计中加上的数值设定为1，这样就保证每一类特征的组合至少在数据中出现一次。\n在朴素贝叶斯算法中使用数值特征 由于朴素贝叶斯算法使用学习数据的频率表，所以为了创建类和特征值的组合所构成的矩阵，每个特征必须是分类变量。将数值型特征离散化，这就意味着将数值分到不同的分段(bin)中，这些分段就是离散化的类的水平。将数值特征离散化总是会导致信息量的减少，因为特征的原始粒度减少为几个数目较少的类别。在处理这个问题时，重要的是取得平衡，因为太少的分段会导致重要的趋势被掩盖，而太多的分段会导致朴素贝叶斯频率表中的计数值很小。\n数据处理 由于短信通常限制为160个字符，所以可以用来确定一条短信是否是垃圾消息的文本量减少了，这种限制与小的不方便的手机键盘一起，导致很多人采用短信术语缩写的形式，这进一步含糊了合法消息和垃圾消息的界限。sms_spam数据集包含短信的文本信息，而且带有表明该短信是否为垃圾短信的标签。垃圾短息标记为spam，而非垃圾短信标记为ham。\n构建分类器的第一步涉及原始数据的处理与分析，文本数据的准备具有挑战性，因为将词和句子转化成计算机能够理解的形式是必要的。这里把数据转化成一种称为词袋(bag-of-words)的表示方法，这种表示方法忽略了单词出现的顺序，只是简单地提供一个变量用来表示单词是否会出现。\n1 2  sms_raw \u0026lt;- read.csv(\u0026#34;G:/R/Machine Learning With R/data/Chapter 04/sms_spam.csv\u0026#34;, stringsAsFactors = FALSE) str(sms_raw)   'data.frame':\t5559 obs. of 2 variables:\r$ type: chr \u0026quot;ham\u0026quot; \u0026quot;ham\u0026quot; \u0026quot;ham\u0026quot; \u0026quot;spam\u0026quot; ...\r$ text: chr \u0026quot;Hope you are having a good week. Just checking in\u0026quot; \u0026quot;K..give back my thanks.\u0026quot; \u0026quot;Am also doing in cbe only. But have to pay.\u0026quot; \u0026quot;complimentary 4 STAR Ibiza Holiday or 拢10,000 cash needs your URGENT collection. 09066364349 NOW from Landline\u0026quot;| __truncated__ ...\rsms_raw数据文件包含了5559条短信，每条短信都有两个特征：type和text。将SMS的特征type编码为ham或者spam，而变量text存储整个SMS短信文本。type是一个字符串向量，由于它是一个分类变量，所以将其转换成一个因子会更好:\n1 2 3  sms_raw$type \u0026lt;- factor(sms_raw$type) str(sms_raw$type) table(sms_raw$type)   Factor w/ 2 levels \u0026quot;ham\u0026quot;,\u0026quot;spam\u0026quot;: 1 1 1 2 2 1 1 1 2 1 ...\rham spam 4812 747 处理和分析文本数据 短信就是由词、空格、数字和标点符号组成的文本字符串。处理这种类型的复杂数据需要大量的思考工作，一方面需要考虑如何去除数字和标点符号，如何处理没有意义的单词，如and、but和or等，以及如何将句子分解成单个的单词。文本挖掘添加包tm提供了这些功能。处理文本数据的第一步涉及创建一个语料库，即一个文本文件的集合。首先，函数Corpus()创建了一个R对象来存储文本文档，函数VectorSource()来指示函数Corpus()使用向量sms_train$text的信息。\n1 2 3 4 5 6  library(tm) sms_corpus \u0026lt;- Corpus(VectorSource(sms_raw$text)) print(sms_corpus) # inspect()函数查看语料库的内容 inspect(sms_corpus[1:3])   \u0026lt;\u0026lt;SimpleCorpus\u0026gt;\u0026gt;\rMetadata: corpus specific: 1, document level (indexed): 0\rContent: documents: 5559\r\u0026lt;\u0026lt;SimpleCorpus\u0026gt;\u0026gt;\rMetadata: corpus specific: 1, document level (indexed): 0\rContent: documents: 3\r[1] Hope you are having a good week. Just checking in\r[2] K..give back my thanks. [3] Am also doing in cbe only. But have to pay. 语料库包含的5559条训练数据短信。将文本内容分解成单词之前，需去除标点符号和可能会影响结果的其他字符。例如，把单词hello!、HELLO\u0026hellip;和Hello都作为单词hello的实例。函数tm_map()提供了一种用来转换(及映射)tm语料库的方法,首先把所有短信的字母变成小写字母，并去除所有的数字:\n1 2  corpus_clean \u0026lt;- tm_map(sms_corpus, tolower) corpus_clean \u0026lt;- tm_map(corpus_clean, removeNumbers)   在分析文本数据时，一个常见的做法就是去除填充词，比如to、and、but和or，这些词称为停用词（stop word）。tm添加包中提供的函数stopwords()函数包含了一组大量的停用词。如果想知道它包含的所有停用词，在命令行输入stopwords()即可。\n1 2 3 4  # 剔除停用词 corpus_clean \u0026lt;- tm_map(corpus_clean, removeWords, stopwords()) # 去除标点符号 corpus_clean \u0026lt;- tm_map(corpus_clean, removePunctuation)   已经去除了数字、停用词和标点符号的地方就变成了空格。最后一步就是去除额外的空格，只在词与词之间留下一个空格。\n1  corpus_clean \u0026lt;- tm_map(corpus_clean, stripWhitespace)   语料库中前3条短信在清洗前后的对比。短信消息已经被限制得只剩下最有意义的词，标点符号和大小写都已经被清理。\n1 2  inspect(sms_corpus[1:3]) inspect(corpus_clean[1:3])   \u0026lt;\u0026lt;SimpleCorpus\u0026gt;\u0026gt;\rMetadata: corpus specific: 1, document level (indexed): 0\rContent: documents: 3\r[1] Hope you are having a good week. Just checking in\r[2] K..give back my thanks. [3] Am also doing in cbe only. But have to pay. \u0026lt;\u0026lt;SimpleCorpus\u0026gt;\u0026gt;\rMetadata: corpus specific: 1, document level (indexed): 0\rContent: documents: 3\r[1] hope good week just checking kgive back thanks [3] also cbe pay\r最后通过一个所谓的标记化过程将消息分解成由单个单词组成的组。一个记号(token)就是一个文本字符串的单个元素，在这种情况下，本例中的记号就是单词。函数DocumentTermMatrix()将一个语料库作为输入，并创建一个稀疏矩阵的数据结构，其中矩阵的行表示文档(即短信)，矩阵的例表示单词。矩阵中的每一个单元存储一个数字，它代表由列标识的单词出现在由行标识的文档中的次数。这个数据结构被称为稀疏矩阵是因为在该矩阵中，绝大多数元素是以0来填充的。尽管每个消息包含了一些单词，但是任意具体的单词出现在给定的一条消息中概率都是很小的。\n1 2  # 将语料库标记化，返回稀疏矩阵 sms_dtm \u0026lt;- DocumentTermMatrix(corpus_clean)   将数据（短信的排序已随机）分成两部分：75%的训练数据和25%的测试数据。\n1 2 3 4 5 6 7 8  sms_raw_train \u0026lt;- sms_raw[1:4169, ] sms_raw_test \u0026lt;- sms_raw[4170:5559, ] #输出文档-单词矩阵 sms_dtm_train \u0026lt;- sms_dtm[1:4169, ] sms_dtm_test \u0026lt;- sms_dtm[4170:5559, ] #得到语料库 sms_corpus_train \u0026lt;- corpus_clean[1:4169] sms_corpus_test \u0026lt;- corpus_clean[4170:5559]   为了确认上述子集是一组完整的短信数据的代表，可以通过比较垃圾短信在训练数据和测试数据中所占的比例。可以看出无论是训练数据集还是测试数据集，他们都包含约13%的垃圾短信，这表明垃圾短息被平均分配在这两个数据集中。\n1 2  prop.table(table(sms_raw_train$type)) prop.table(table(sms_raw_test$type))   ham spam 0.8647158 0.1352842 ham spam 0.8683453 0.1316547\r可视化文本数据——词云 词云是一种可视化地描绘单词出现在文本数据中频率的方式。词云是由随机分布在词云图中的单词构成的，经常出现在文本中的单词会以比较大的字体呈现，而不太常见的单词将会以较小的字体呈现。wordcloud添加包提供了一个简单的R函数来创建这种类型的图形。\n1 2 3  options(repr.plot.width = 7, repr.plot.height = 7) library(wordcloud) wordcloud(sms_corpus_train, min.freq = 40, random.order = FALSE)   上述命令从sms_corpus_train语料库创建一个词云。random.order=FALSE使词云以非随机的顺序排列，而且出现频率越高的单词越靠近中心。如果没有设置random.order(默认设置)，该词云将会以默认的随机方式排列。参数min.freq用来指定显示在词云中的单词必须满足在语料库中出现的最小次数。通用的规则是，开始时设置参数min.freq的值为语料库中文档总数目的10%。这里，文档总数目的10%大约为40，因此，词云中的单词至少在40条短信中出现过。垃圾短信和非垃圾短信词云的比较：\n1 2 3 4 5 6  options(repr.plot.width = 10, repr.plot.height = 6) par(mfrow = c(1,2)) spam \u0026lt;- subset(sms_raw_train, type == \u0026#34;spam\u0026#34;) ham \u0026lt;- subset(sms_raw_train, type == \u0026#34;ham\u0026#34;) wordcloud(spam$text, max.words = 40, scale = c(3, 0.6)) wordcloud(ham$text, max.words = 40, scale = c(2, 0.6))   参数max.words，它用来显示两个集合的任何一个集合中最常见的40个单词，而且参数scale允许调整词云中单词的最大字体和最小字体。由于是随机化的处理，所以每一个词云看上去可能会略有不同。你可以通过多次运行wordcloud()函数来选择最令人满意的词云,从而达到演示的目的。显而易见，左边的为垃圾词云。\n为频繁出现的单词创建指示特征 最后一步就是把稀疏矩阵转换成可用于训练朴素贝叶斯分类器的数据结构，目前，该稀疏矩阵包含数量超过7000个的特征，即至少出现在一条短信中的每一个单词的特征。所有这些特征不可能都对分类发挥作用。为了减少特征的数量，我们将剔除训练数据中出现在少于5条短信中或者少于记录总数的0.1%的所有单词。查找频繁出现的单词需要使用tm添加包中的findFreqTerms()函数，该函数输入一个文档-单词矩阵，并返回一个字符向量，该向量包含出现字数不少于指定次数的单词。\nR Output  1  findFreqTerms(sms_dtm_train, 5)    \r\r.list-inline {list-style: none; margin:0; padding: 0}\r.list-inlineli {display: inline-block}\r.list-inlineli:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex}\r\r'checking''good''hope''just''week''back''thanks''also''pay''cash''collection''complimentary''holiday''landline''lose''needs''now''urgent''拢''award''box''call''collect''dear''final''notice''ppm''sae''tcs''tenerife''lar''later''pick''much''ask''father''please''free''game''mobile''official''play''right''send''text''room''swing''usf''whenever''big''hour''longer''man''sure''thing''though''anything''lor''ending''far''march''never''problem''ready''will''work''hmm''night''well''get''noon''see''chikku''cool''cos''darren''dat''den''dinner''dun''feel''leave''lunch''meet''meeting''saying''angry''tell''told''come''din''wan''can''draw''every''gift''music''starting''tscs''txt''vouchers''win''word''coming''goodnight''gym''birthday''today''wish''gud''reading''contact''cost''joke''less''one''ones''school''sent''think''thinking''love''read''bank''money''say''need''stop''sup''weather''thanx''plan''todays''cancer''care''cup''doctor''fat''sorry''morning''sleep''train''wine''auction''camera''digital''nokia''part''plus''take''won''cant''fri''leh''make''said''wait''carlos''hear''might''phones''texts''got''job''whats''chat''cheap''cheaper''gay''hot''national''pmin''rate''sale''anyway''help''know''let''use''yeah''centre''like''liked''road''something''min''awarded''claim''guaranteed''hrs''land''line''number''prize''valid''mah''tomorrow''believe''wat''hey'⋯'rock''walk''tells''london''txting''horny''live''ltd''normptone''wwq''wwwgetzedcouk''frnd''tour''choose''rather''timing''write''news''however''luck''feb''sounds''waste''open''goodmorning''uncle''disturb''pin''lookin''married''babes''months''press''john''added''fullonsmscom''visit''welcome''round''putting''announcement''spend''twice''tariffs''anymore''exciting''past''keeping''starts''almost''partner''single''cashbalance''hgsuitelands''maximize''rowwjhl''role''exams''jay''ten''simple''operator''mate''doin''thurs''normal''works''sis''bus''tickets''battery''unless''depends''anytime''studying''marry''relation''ave''stupid''mode''smth''ahead''aft''joking''bout''nah''tear''wks''paying''possible''fone''mrw''bid''loyalty''hungry''training''funny''earth''yar''door''receipt''registered''silent''understand''vodafone''sick''sucks''planned''pete''serious''sound''decide''happens''rates''entitled''save''access''lost''buying''teach''excellent''hate''lazy''direct''via''coffee''yep''sch''i鈧渕''semester''otherwise''yoga''lovable''juz''dnt''seriously''copy''aiyo''film''hurts''thru''user''arcade''crave''eating''dropped''log''argument''kick''wins''hop''die''monday''tot''nyt''link''future''sometimes''match''girlfrnd''lift''meaning''police''project''different''member''callertune''eyes''picking''fantastic''space''rent''httpwwwurawinnercom''onto''ugh''forever''拢wk''miracle''gave''rply''king''pleasure''uve''records''study''frens''photo''bluetooth''stand''persons''handset''cell''catch''figure''ice''tea''tick''accept''naughty''worries'\r   'use strict'; var containerId = JSON.parse(\"\\\"566802b74f9d700b\\\"\"); var containerElem = document.getElementById(containerId); var tabLinks = null; var tabContents = null; var ids = []; if (containerElem) { tabLinks = containerElem.querySelectorAll('.tab__link'); tabContents = containerElem.querySelectorAll('.tab__content'); } for (var i = 0; i 0) { tabContents[0].style.display = 'block'; }  限制训练矩阵和测试矩阵只包含出现频率高于5的单词：\n1 2 3 4 5  sms_train \u0026lt;- DocumentTermMatrix(sms_corpus_train, list(dictionary = findFreqTerms(sms_dtm_train, 5))) sms_test \u0026lt;- DocumentTermMatrix(sms_corpus_test, list(dictionary = findFreqTerms(sms_dtm_train, 5))) sms_train   \u0026lt;\u0026lt;DocumentTermMatrix (documents: 4169, terms: 1216)\u0026gt;\u0026gt;\rNon-/sparse entries: 24011/5045493\rSparsity : 100%\rMaximal term length: 19\rWeighting : term frequency (tf)\r现在，训练数据和测试数据包含了大约1200个特征，只对应于至少出现在5条短信中的单词。朴素贝叶斯分类器通常是训练具有明确特征的数据，这就带来了一个问题，因为稀疏矩阵中的元素表示一个单词出现在一条消息中的次数。于是，我们需要将其改变成因子向量，根据单词是否出现，简单地表示成yes或no。下面的代码定义了一个函数convert_counts()，它将计数转换成因子：\n1 2 3 4 5  convert_counts \u0026lt;- function(x) { x \u0026lt;- ifelse(x \u0026gt; 0, 1, 0) x \u0026lt;- factor(x, levels = c(0, 1), labels = c(\u0026#34;No\u0026#34;, \u0026#34;Yes\u0026#34;)) return(x) }   将convert_counts应用于稀疏矩阵的每一列（参数MARGIN来指定作用的对象是矩阵的行或列，MARGIN=1表示行）：\nR Output  1 2 3  sms_train \u0026lt;- apply(sms_train, MARGIN = 2, convert_counts) sms_test \u0026lt;- apply(sms_test, MARGIN = 2, convert_counts) head(sms_train)    \rA matrix: 6 × 1216 of type chr\r\rcheckinggoodhopejustweekbackthanksalsopaycash⋯handsetcellcatchfigureiceteatickacceptnaughtyworries\r\r\r1YesYesYesYesYesNo No No No No ⋯NoNoNoNoNoNoNoNoNoNo\r2No No No No No YesYesNo No No ⋯NoNoNoNoNoNoNoNoNoNo\r3No No No No No No No YesYesNo ⋯NoNoNoNoNoNoNoNoNoNo\r4No No No No No No No No No Yes⋯NoNoNoNoNoNoNoNoNoNo\r5No No No No No No No No No Yes⋯NoNoNoNoNoNoNoNoNoNo\r6No No No No No No No No No No ⋯NoNoNoNoNoNoNoNoNoNo\r\r\r   'use strict'; var containerId = JSON.parse(\"\\\"c2929c9ecf037e42\\\"\"); var containerElem = document.getElementById(containerId); var tabLinks = null; var tabContents = null; var ids = []; if (containerElem) { tabLinks = containerElem.querySelectorAll('.tab__link'); tabContents = containerElem.querySelectorAll('.tab__content'); } for (var i = 0; i 0) { tabContents[0].style.display = 'block'; }  模型训练 采用em1017包中的朴素贝叶斯算法实现：\n1 2 3 4  library(e1071) # laplace参数默认是0 sms_classifier \u0026lt;- naiveBayes(sms_train, sms_raw_train$type)   性能评估 用函数predict()进行预测，用CrossTable()函数比较预测值和真实值：\n1 2 3 4 5  sms_test_pred \u0026lt;- predict(sms_classifier, sms_test) library(gmodels) CrossTable(sms_test_pred, sms_raw_test$type, prop.chisq = FALSE, prop.t = FALSE, prop.r = FALSE, dnn = c(\u0026#39;predicted\u0026#39;, \u0026#39;actual\u0026#39;))   Cell Contents\r|-------------------------|\r| N |\r| N / Col Total |\r|-------------------------|\rTotal Observations in Table: 1390 | actual predicted | ham | spam | Row Total | -------------|-----------|-----------|-----------|\rham | 1203 | 30 | 1233 | | 0.997 | 0.164 | | -------------|-----------|-----------|-----------|\rspam | 4 | 153 | 157 | | 0.003 | 0.836 | | -------------|-----------|-----------|-----------|\rColumn Total | 1207 | 183 | 1390 | | 0.868 | 0.132 | | -------------|-----------|-----------|-----------|\r参数dnn(维度名称)重新标记行和列。从表中可以看出1207条非垃圾短信中有4条短信被错误地归为垃圾短信，比例为0.3%，而183条垃圾短信中有30条短信被错误地归为非垃圾短信，比例为16.4%。本案例的研究说明了为什么说朴素贝叶斯算法是应用于文本分类的一种标准算法，而且朴素贝叶斯方法可以直接拿来用，执行的效果也是出奇的好。另一方面，被错误地归为垃圾短信的四条短信可能会为过滤算法的部署带来明显的问题。如果过滤器导致某人错过一条重要的约会或者紧急情况的短信，那么他们会很快放弃这种产品，因此我们需要研究这些错误分类的短信，看看是哪里出了问题。\n性能提升 在训练模型时，没有设置一个值来用于拉普拉斯估计。这样就允许在分类的过程中单词可能出现在0条垃圾短信或者0条非垃圾短信中。\n1 2 3 4  sms_classifier2 \u0026lt;- naiveBayes(sms_train, sms_raw_train$type, laplace = 0.1) sms_test_pred2 \u0026lt;- predict(sms_classifier2, sms_test) CrossTable(sms_test_pred2, sms_raw_test$type, prop.chisq = FALSE, prop.t = FALSE, prop.r = FALSE, dnn = c(\u0026#39;predicted\u0026#39;, \u0026#39;actuall\u0026#39;))   Cell Contents\r|-------------------------|\r| N |\r| N / Col Total |\r|-------------------------|\rTotal Observations in Table: 1390 | actuall predicted | ham | spam | Row Total | -------------|-----------|-----------|-----------|\rham | 1204 | 24 | 1228 | | 0.998 | 0.131 | | -------------|-----------|-----------|-----------|\rspam | 3 | 159 | 162 | | 0.002 | 0.869 | | -------------|-----------|-----------|-----------|\rColumn Total | 1207 | 183 | 1390 | | 0.868 | 0.132 | | -------------|-----------|-----------|-----------|\r不仅将错误地归类为垃圾短信的非垃圾短信的数量由4减少到3，而且也将错误地归为非垃圾短信的垃圾短信的数量由30较少到了24。虽然这看上去是一个很小的改进，但我们必须意识到如果我们对垃圾短信的过滤过于激进，那么重要信息被遗漏的可能性是很大的。\n总结  朴素贝叶斯分类器通常用于文本分类。  C5.0决策树识别高风险银行贷款 节点终止划分的条件：\n All (or nearly all) of the examples at the node have the same class There are no remaining features to distinguish among the examples The tree has grown to a predefined size limit  决策树容易对训练数据进行过拟合，给出过于具体细节的决策。\nC5.0 algotithm The first challenge that a decision tree will face is to identify which feature to split upon. The degree to which a subset of examples contains only a single class is known as purity. C5.0 uses entropy, typically, entropy is measured in bits.\n$$Entropy(\\mathbf S)=\\sum_{i=1}^c -p_ilog_2(p_i)$$\n对于两点分布。If we know that the proportion of examples in one class is $x$, then the proportion in the other class is ($1 – x$). Using the curve() function, we can then plot the entropy for all the possible values of $x$:\n1 2 3  options(repr.plot.width = 6, repr.plot.height = 4) curve(-x * log2(x) - (1 - x) * log2(1 - x), col = \u0026#39;red\u0026#39;, xlab = \u0026#39;x\u0026#39;, ylab = \u0026#39;Entropy\u0026#39;, lwd = 4)   决策树算法使用熵值来计算有每一个可能特征的分割所引起的同质性（均匀性）变化，该计算称为information gain。对于特征$\\mathbf F$，信息增益的计算方法是：entropy in the segment before the split ($\\mathbf S_1$) and the partitions resulting from the split ($\\mathbf S_2$):\n$$InfoGain(\\mathbf F)=Entropy(\\mathbf S_1)-Entropy(\\mathbf S_2)$$\nthe data is divided into more than one partition. Therefore, the function to calculate $Entropy(\\mathbf S_2)$ needs to consider the total entropy across all of the partitions. It does this by weighing each partition\u0026rsquo;s entropy by the proportion of records falling into the partition:\n$$Entropy(\\mathbf S)=\\sum_{i=1}^n w_i Entropy(\\mathbf P_i)$$\nThe higher the information gain, the better a feature is at creating homogeneous groups after a split on this feature. Though it is used by C5.0, information gain is not the only splitting criterion that can be used to build decision trees. Other commonly used criteria are Gini index, Chi-Squared statistic, and gain ratio.\nPruning the decision tree 如果决策树增长过大，将会使许多决策过于具体，模型将会过度拟合训练数据。The process of pruning a decision tree involves reducing its size such that it generalizes better to unseen data.\nOne solution to this problem is to stop the tree from growing once it reaches a certain number of decisions or when the decision nodes contain only a small number of examples. This is called early stopping or pre-pruning the decision tree.\nAn alternative, called post-pruning, involves growing a tree that is intentionally too large and pruning leaf nodes to reduce the size of the tree to a more appropriate level.\nC5.0算法的优点之一就是自动修剪，即它关注许多决策，能自动使用许多相当合理的默认值。该算法的总体策略就是事后修剪决策树，它先生成一个过度拟合训练数据的大决策树，然后删除对分类误差影响不大的节点和分支。在某些情况下，整个分枝会被进一步向上移动或者被一些简单的决策所取代，这两个移植分枝的过程分别称为子树提升和子树替换。\n数据处理 The credit dataset includes 1,000 examples on loans, plus a set of numeric and nominal features indicating the characteristics of the loan and the loan applicant. A class variable indicates whether the loan went into default.\n1 2  credit \u0026lt;- read.csv(\u0026#34;G:/R/Machine Learning With R/data/Chapter 05/credit.csv\u0026#34;, stringsAsFactor = TRUE) str(credit)   'data.frame':\t1000 obs. of 17 variables:\r$ checking_balance : Factor w/ 4 levels \u0026quot;\u0026lt; 0 DM\u0026quot;,\u0026quot;\u0026gt; 200 DM\u0026quot;,..: 1 3 4 1 1 4 4 3 4 3 ...\r$ months_loan_duration: int 6 48 12 42 24 36 24 36 12 30 ...\r$ credit_history : Factor w/ 5 levels \u0026quot;critical\u0026quot;,\u0026quot;good\u0026quot;,..: 1 2 1 2 4 2 2 2 2 1 ...\r$ purpose : Factor w/ 6 levels \u0026quot;business\u0026quot;,\u0026quot;car\u0026quot;,..: 5 5 4 5 2 4 5 2 5 2 ...\r$ amount : int 1169 5951 2096 7882 4870 9055 2835 6948 3059 5234 ...\r$ savings_balance : Factor w/ 5 levels \u0026quot;\u0026lt; 100 DM\u0026quot;,\u0026quot;\u0026gt; 1000 DM\u0026quot;,..: 5 1 1 1 1 5 4 1 2 1 ...\r$ employment_duration : Factor w/ 5 levels \u0026quot;\u0026lt; 1 year\u0026quot;,\u0026quot;\u0026gt; 7 years\u0026quot;,..: 2 3 4 4 3 3 2 3 4 5 ...\r$ percent_of_income : int 4 2 2 2 3 2 3 2 2 4 ...\r$ years_at_residence : int 4 2 3 4 4 4 4 2 4 2 ...\r$ age : int 67 22 49 45 53 35 53 35 61 28 ...\r$ other_credit : Factor w/ 3 levels \u0026quot;bank\u0026quot;,\u0026quot;none\u0026quot;,..: 2 2 2 2 2 2 2 2 2 2 ...\r$ housing : Factor w/ 3 levels \u0026quot;other\u0026quot;,\u0026quot;own\u0026quot;,..: 2 2 2 1 1 1 2 3 2 2 ...\r$ existing_loans_count: int 2 1 1 1 2 1 1 1 1 2 ...\r$ job : Factor w/ 4 levels \u0026quot;management\u0026quot;,\u0026quot;skilled\u0026quot;,..: 2 2 4 2 2 4 2 1 4 1 ...\r$ dependents : int 1 1 2 2 2 2 1 1 1 1 ...\r$ phone : Factor w/ 2 levels \u0026quot;no\u0026quot;,\u0026quot;yes\u0026quot;: 2 1 1 1 1 2 1 2 1 1 ...\r$ default : Factor w/ 2 levels \u0026quot;no\u0026quot;,\u0026quot;yes\u0026quot;: 1 2 1 1 2 1 1 1 1 2 ...\r特征checking_balance和savings_balance表示支票和储蓄账户余额，并记录为分类变量；贷款期限（months_looan_duration）和信贷申请的金额（amount)为数值型变量。\n1 2 3 4  table(credit$checking_balance) table(credit$savings_balance) summary(credit$months_loan_duration) summary(credit$amount)   \u0026lt; 0 DM \u0026gt; 200 DM 1 - 200 DM unknown 274 63 269 394 \u0026lt; 100 DM \u0026gt; 1000 DM 100 - 500 DM 500 - 1000 DM unknown 603 48 103 63 183 Min. 1st Qu. Median Mean 3rd Qu. Max. 4.0 12.0 18.0 20.9 24.0 72.0 Min. 1st Qu. Median Mean 3rd Qu. Max. 250 1366 2320 3271 3972 18424 The loan amounts ranged from 250 DM to 18,420 DM（Deutsche Marks）across terms of 4 to 72 months with a median duration of 18 months and an amount of 2,320 DM. The default vector indicates whether the loan applicant was unable to meet the agreed payment terms and went into default. A total of 30 percent of the loans in this dataset went into default:\n1  table(credit$default)   no yes 700 300 模型训练 order()函数以升序或者降序的方式对数据列表进行重新排列，入股将order()函数与生成一系列随机数的函数相结合，就可以生成一个随机排列的列表。runif(1000)生成了一个含有1000个随机数的列表。然后，order()函数返回一个数值向量，该向量记录了排序之后的1000个随机数在原来序列中的位置，用这些位置筛选credit数据框中的行。划分数据集，每个数据集中大约30%的违约贷款。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  set.seed(12345) credit_rand \u0026lt;- credit[order(runif(1000)), ] summary(credit$amount) summary(credit_rand$amount) credit_train \u0026lt;- credit_rand[1:900, ] credit_test \u0026lt;- credit_rand[901:1000, ] prop.table(table(credit_train$default)) prop.table(table(credit_test$default)) # C5.0算法训练决策树 library(C50) credit_model \u0026lt;- C5.0(credit_train[-17], credit_train$default) credit_model   Min. 1st Qu. Median Mean 3rd Qu. Max. 250 1366 2320 3271 3972 18424 Min. 1st Qu. Median Mean 3rd Qu. Max. 250 1366 2320 3271 3972 18424 no yes 0.7022222 0.2977778 no yes 0.68 0.32 Call:\rC5.0.default(x = credit_train[-17], y = credit_train$default)\rClassification Tree\rNumber of samples: 900 Number of predictors: 16 Tree size: 67 Non-standard options: attempt to group attributes\r900个样本，16个特征，67个决策。查看决策：\nR Output  1  summary(credit_model1)    \r Call:\rC5.0.default(x = credit_train[-17], y = credit_train$default)\rC5.0 [Release 2.07 GPL Edition] Sun Sep 12 20:39:17 2021\r-------------------------------\rClass specified by attribute `outcome'\rRead 900 cases (17 attributes) from undefined.data\rDecision tree:\rchecking_balance = unknown: no (358/44)\rchecking_balance in {\u0026lt; 0 DM,\u0026gt; 200 DM,1 - 200 DM}:\r:...credit_history in {perfect,very good}:\r:...dependents \u0026gt; 1: yes (10/1)\r: dependents \u0026lt;= 1:\r: :...savings_balance = \u0026lt; 100 DM: yes (39/11)\r: savings_balance in {\u0026gt; 1000 DM,500 - 1000 DM,unknown}: no (8/1)\r: savings_balance = 100 - 500 DM:\r: :...checking_balance = \u0026lt; 0 DM: no (1)\r: checking_balance in {\u0026gt; 200 DM,1 - 200 DM}: yes (5/1)\rcredit_history in {critical,good,poor}:\r:...months_loan_duration \u0026lt;= 11: no (87/14)\rmonths_loan_duration \u0026gt; 11:\r:...savings_balance = \u0026gt; 1000 DM: no (13)\rsavings_balance in {\u0026lt; 100 DM,100 - 500 DM,500 - 1000 DM,unknown}:\r:...checking_balance = \u0026gt; 200 DM:\r:...dependents \u0026gt; 1: yes (3)\r: dependents \u0026lt;= 1:\r: :...credit_history in {good,poor}: no (23/3)\r: credit_history = critical:\r: :...amount \u0026lt;= 2337: yes (3)\r: amount \u0026gt; 2337: no (6)\rchecking_balance = 1 - 200 DM:\r:...savings_balance = unknown: no (34/6)\r: savings_balance in {\u0026lt; 100 DM,100 - 500 DM,500 - 1000 DM}:\r: :...months_loan_duration \u0026gt; 45: yes (11/1)\r: months_loan_duration \u0026lt;= 45:\r: :...other_credit = store:\r: :...age \u0026lt;= 35: yes (4)\r: : age \u0026gt; 35: no (2)\r: other_credit = bank:\r: :...years_at_residence \u0026lt;= 1: no (3)\r: : years_at_residence \u0026gt; 1:\r: : :...existing_loans_count \u0026lt;= 1: yes (5)\r: : existing_loans_count \u0026gt; 1:\r: : :...percent_of_income \u0026lt;= 2: no (4/1)\r: : percent_of_income \u0026gt; 2: yes (3)\r: other_credit = none:\r: :...job = unemployed: no (1)\r: job = management:\r: :...amount \u0026lt;= 7511: no (10/3)\r: : amount \u0026gt; 7511: yes (7)\r: job = unskilled: [S1]\r: job = skilled:\r: :...dependents \u0026lt;= 1: no (55/15)\r: dependents \u0026gt; 1:\r: :...age \u0026lt;= 34: no (3)\r: age \u0026gt; 34: yes (4)\rchecking_balance = \u0026lt; 0 DM:\r:...job = management: no (26/6)\rjob = unemployed: yes (4/1)\rjob = unskilled:\r:...employment_duration in {4 - 7 years,\r: : unemployed}: no (4)\r: employment_duration = \u0026lt; 1 year:\r: :...other_credit = bank: no (1)\r: : other_credit in {none,store}: yes (11/2)\r: employment_duration = \u0026gt; 7 years:\r: :...other_credit in {bank,none}: no (5/1)\r: : other_credit = store: yes (2)\r: employment_duration = 1 - 4 years:\r: :...age \u0026lt;= 39: no (14/3)\r: age \u0026gt; 39:\r: :...credit_history in {critical,good}: yes (3)\r: credit_history = poor: no (1)\rjob = skilled:\r:...credit_history = poor:\r:...savings_balance in {\u0026lt; 100 DM,100 - 500 DM,\r: : 500 - 1000 DM}: yes (8)\r: savings_balance = unknown: no (1)\rcredit_history = critical:\r:...other_credit = store: no (0)\r: other_credit = bank: yes (4)\r: other_credit = none:\r: :...savings_balance in {100 - 500 DM,\r: : unknown}: no (1)\r: savings_balance = 500 - 1000 DM: yes (1)\r: savings_balance = \u0026lt; 100 DM:\r: :...months_loan_duration \u0026lt;= 13:\r: :...percent_of_income \u0026lt;= 3: yes (3)\r: : percent_of_income \u0026gt; 3: no (3/1)\r: months_loan_duration \u0026gt; 13:\r: :...amount \u0026lt;= 5293: no (10/1)\r: amount \u0026gt; 5293: yes (2)\rcredit_history = good:\r:...existing_loans_count \u0026gt; 1: yes (5)\rexisting_loans_count \u0026lt;= 1:\r:...other_credit = store: no (2)\rother_credit = bank:\r:...percent_of_income \u0026lt;= 2: yes (2)\r: percent_of_income \u0026gt; 2: no (6/1)\rother_credit = none: [S2]\rSubTree [S1]\remployment_duration in {\u0026lt; 1 year,1 - 4 years}: yes (11/3)\remployment_duration in {\u0026gt; 7 years,4 - 7 years,unemployed}: no (8)\rSubTree [S2]\rsavings_balance = 100 - 500 DM: yes (3)\rsavings_balance = 500 - 1000 DM: no (1)\rsavings_balance = unknown:\r:...phone = no: yes (9/1)\r: phone = yes: no (3/1)\rsavings_balance = \u0026lt; 100 DM:\r:...percent_of_income \u0026lt;= 1: no (4)\rpercent_of_income \u0026gt; 1:\r:...phone = yes: yes (10/1)\rphone = no:\r:...purpose in {business,car0,education,renovations}: yes (3)\rpurpose = car:\r:...percent_of_income \u0026lt;= 3: no (2)\r: percent_of_income \u0026gt; 3: yes (6/1)\rpurpose = furniture/appliances:\r:...years_at_residence \u0026lt;= 1: no (4)\ryears_at_residence \u0026gt; 1:\r:...housing = other: no (1)\rhousing = rent: yes (2)\rhousing = own:\r:...amount \u0026lt;= 1778: no (3)\ramount \u0026gt; 1778:\r:...years_at_residence \u0026lt;= 3: yes (6)\ryears_at_residence \u0026gt; 3: no (3/1)\rEvaluation on training data (900 cases):\rDecision Tree ---------------- Size Errors 66 125(13.9%) \u0026lt;\u0026lt;\r(a) (b) \u0026lt;-classified as\r---- ----\r609 23 (a): class no\r102 166 (b): class yes\rAttribute usage:\r100.00%\tchecking_balance\r60.22%\tcredit_history\r53.22%\tmonths_loan_duration\r49.44%\tsavings_balance\r30.89%\tjob\r25.89%\tother_credit\r17.78%\tdependents\r9.67%\texisting_loans_count\r7.22%\tpercent_of_income\r6.67%\temployment_duration\r5.78%\tphone\r5.56%\tamount\r3.78%\tyears_at_residence\r3.44%\tage\r3.33%\tpurpose\r1.67%\thousing\rTime: 0.0 secs\r \r  'use strict'; var containerId = JSON.parse(\"\\\"e36a009fc6859db0\\\"\"); var containerElem = document.getElementById(containerId); var codetabLinks = null; var codetabContents = null; var ids = []; if (containerElem) { codetabLinks = containerElem.querySelectorAll('.codetab__link'); codetabContents = containerElem.querySelectorAll('.codetab__content'); } for (var i = 0; i 0) { codetabContents[0].style.display = 'block'; }  对上述输出前四行的解读：\n 如果支票账户余额是未知的，则归为类不太可能违约。 否则，如果账户支票余额少于0马克，或者1~200马克之间，或者超过200马克，或者\u0026hellip; 信用记录非常好，甚至完美，或者\u0026hellip; 有多个抚养人，就归类为很有可能违约。  括号中的数字表示符合该决策准则的案例的数量以及根据该决策不正确分类的案例的数量。例如，在第一行中，(358/44)表示有358个案例符合该决策条件，有44个案例被错误地归类为no，也就是说不太可能违约，换句话说，就是由44个申请者确实违约了。\nsummary(credit_model)输出一个混淆矩阵，这是一个交叉列表，表示模型对训练数据错误分类的记录数。字段Errors说明模型除了对900个训练案例中的125个案例以外的所有案例都进行了正确的分类，错误率为13.9%。共有23个真实值为no的个案被错误地归类为yes(错误肯定)，而有102个真实值为yes的个案被错误地归类为no(错误否定)。\n性能评估 设定参数prop.c和prop.r为FALSE来删除表中列与行的百分比，剩余的百分比(prop.t)表示单元格中的记录数占总记录数的百分比。\n1 2 3 4 5  credit_pred \u0026lt;- predict(credit_model, credit_test) library(gmodels) CrossTable(credit_test$default, credit_pred, prop.chisq = FALSE, prop.c = FALSE, prop.r = FALSE, dnn = c(\u0026#39;actual default\u0026#39;, \u0026#39;predicted default\u0026#39;))   Cell Contents\r|-------------------------|\r| N |\r| N / Table Total |\r|-------------------------|\rTotal Observations in Table: 100 | predicted default actual default | no | yes | Row Total | ---------------|-----------|-----------|-----------|\rno | 57 | 11 | 68 | | 0.570 | 0.110 | | ---------------|-----------|-----------|-----------|\ryes | 16 | 16 | 32 | | 0.160 | 0.160 | | ---------------|-----------|-----------|-----------|\rColumn Total | 73 | 27 | 100 | ---------------|-----------|-----------|-----------|\r100个贷款申请者的记录测试中，模型正确预测了57个申请者确实没有违约，而16个的申请者确实违约了，模型的准确率为73%，而错误率为27%。在训练数据上模型的性能略差，但并不令人意外，因为对于未知的数据，模型的性能往往会差些。另外，该模型只正确预测了测试数据中32个违约者的50%。遗憾的是，这种类型的错误是一个潜在的非常严重的错误。\n性能提升 提高决策树的准确性 5.0算法对C4.5算法改进的一种方法就是通过加入自适应增强(adaptive boosting)算法，这是许多决策树构建的一个过程，然后这些决策树通过投票表决的方法为每一个案例选择最佳分类。参数trials设置了一个上限，如果该算法识别出额外的试验似乎并没有提高模型的准确性，那么它将停止添加决策树。\n1 2  credit_boost10 \u0026lt;- C5.0(credit_train[-17], credit_train$default, trials = 10) credit_boost10   Call:\rC5.0.default(x = credit_train[-17], y = credit_train$default, trials = 10)\rClassification Tree\rNumber of samples: 900 Number of predictors: 16 Number of boosting iterations: 10 Average tree size: 56 Non-standard options: attempt to group attributes\r通过10次迭代，决策树变小。\nR Output  1  summary(credit_boost10)    \rCall:\rC5.0.default(x = credit_train[-17], y = credit_train$default, trials = 10)\rC5.0 [Release 2.07 GPL Edition] Sun Sep 12 22:46:19 2021\r-------------------------------\rClass specified by attribute `outcome'\rRead 900 cases (17 attributes) from undefined.data\r----- Trial 0: -----\rDecision tree:\rchecking_balance = unknown: no (358/44)\rchecking_balance in {\u0026lt; 0 DM,\u0026gt; 200 DM,1 - 200 DM}:\r:...credit_history in {perfect,very good}:\r:...dependents \u0026gt; 1: yes (10/1)\r: dependents \u0026lt;= 1:\r: :...savings_balance = \u0026lt; 100 DM: yes (39/11)\r: savings_balance in {\u0026gt; 1000 DM,500 - 1000 DM,unknown}: no (8/1)\r: savings_balance = 100 - 500 DM:\r: :...checking_balance = \u0026lt; 0 DM: no (1)\r: checking_balance in {\u0026gt; 200 DM,1 - 200 DM}: yes (5/1)\rcredit_history in {critical,good,poor}:\r:...months_loan_duration \u0026lt;= 11: no (87/14)\rmonths_loan_duration \u0026gt; 11:\r:...savings_balance = \u0026gt; 1000 DM: no (13)\rsavings_balance in {\u0026lt; 100 DM,100 - 500 DM,500 - 1000 DM,unknown}:\r:...checking_balance = \u0026gt; 200 DM:\r:...dependents \u0026gt; 1: yes (3)\r: dependents \u0026lt;= 1:\r: :...credit_history in {good,poor}: no (23/3)\r: credit_history = critical:\r: :...amount \u0026lt;= 2337: yes (3)\r: amount \u0026gt; 2337: no (6)\rchecking_balance = 1 - 200 DM:\r:...savings_balance = unknown: no (34/6)\r: savings_balance in {\u0026lt; 100 DM,100 - 500 DM,500 - 1000 DM}:\r: :...months_loan_duration \u0026gt; 45: yes (11/1)\r: months_loan_duration \u0026lt;= 45:\r: :...other_credit = store:\r: :...age \u0026lt;= 35: yes (4)\r: : age \u0026gt; 35: no (2)\r: other_credit = bank:\r: :...years_at_residence \u0026lt;= 1: no (3)\r: : years_at_residence \u0026gt; 1:\r: : :...existing_loans_count \u0026lt;= 1: yes (5)\r: : existing_loans_count \u0026gt; 1:\r: : :...percent_of_income \u0026lt;= 2: no (4/1)\r: : percent_of_income \u0026gt; 2: yes (3)\r: other_credit = none:\r: :...job = unemployed: no (1)\r: job = management:\r: :...amount \u0026lt;= 7511: no (10/3)\r: : amount \u0026gt; 7511: yes (7)\r: job = unskilled: [S1]\r: job = skilled:\r: :...dependents \u0026lt;= 1: no (55/15)\r: dependents \u0026gt; 1:\r: :...age \u0026lt;= 34: no (3)\r: age \u0026gt; 34: yes (4)\rchecking_balance = \u0026lt; 0 DM:\r:...job = management: no (26/6)\rjob = unemployed: yes (4/1)\rjob = unskilled:\r:...employment_duration in {4 - 7 years,\r: : unemployed}: no (4)\r: employment_duration = \u0026lt; 1 year:\r: :...other_credit = bank: no (1)\r: : other_credit in {none,store}: yes (11/2)\r: employment_duration = \u0026gt; 7 years:\r: :...other_credit in {bank,none}: no (5/1)\r: : other_credit = store: yes (2)\r: employment_duration = 1 - 4 years:\r: :...age \u0026lt;= 39: no (14/3)\r: age \u0026gt; 39:\r: :...credit_history in {critical,good}: yes (3)\r: credit_history = poor: no (1)\rjob = skilled:\r:...credit_history = poor:\r:...savings_balance in {\u0026lt; 100 DM,100 - 500 DM,\r: : 500 - 1000 DM}: yes (8)\r: savings_balance = unknown: no (1)\rcredit_history = critical:\r:...other_credit = store: no (0)\r: other_credit = bank: yes (4)\r: other_credit = none:\r: :...savings_balance in {100 - 500 DM,\r: : unknown}: no (1)\r: savings_balance = 500 - 1000 DM: yes (1)\r: savings_balance = \u0026lt; 100 DM:\r: :...months_loan_duration \u0026lt;= 13:\r: :...percent_of_income \u0026lt;= 3: yes (3)\r: : percent_of_income \u0026gt; 3: no (3/1)\r: months_loan_duration \u0026gt; 13:\r: :...amount \u0026lt;= 5293: no (10/1)\r: amount \u0026gt; 5293: yes (2)\rcredit_history = good:\r:...existing_loans_count \u0026gt; 1: yes (5)\rexisting_loans_count \u0026lt;= 1:\r:...other_credit = store: no (2)\rother_credit = bank:\r:...percent_of_income \u0026lt;= 2: yes (2)\r: percent_of_income \u0026gt; 2: no (6/1)\rother_credit = none: [S2]\rSubTree [S1]\remployment_duration in {\u0026lt; 1 year,1 - 4 years}: yes (11/3)\remployment_duration in {\u0026gt; 7 years,4 - 7 years,unemployed}: no (8)\rSubTree [S2]\rsavings_balance = 100 - 500 DM: yes (3)\rsavings_balance = 500 - 1000 DM: no (1)\rsavings_balance = unknown:\r:...phone = no: yes (9/1)\r: phone = yes: no (3/1)\rsavings_balance = \u0026lt; 100 DM:\r:...percent_of_income \u0026lt;= 1: no (4)\rpercent_of_income \u0026gt; 1:\r:...phone = yes: yes (10/1)\rphone = no:\r:...purpose in {business,car0,education,renovations}: yes (3)\rpurpose = car:\r:...percent_of_income \u0026lt;= 3: no (2)\r: percent_of_income \u0026gt; 3: yes (6/1)\rpurpose = furniture/appliances:\r:...years_at_residence \u0026lt;= 1: no (4)\ryears_at_residence \u0026gt; 1:\r:...housing = other: no (1)\rhousing = rent: yes (2)\rhousing = own:\r:...amount \u0026lt;= 1778: no (3)\ramount \u0026gt; 1778:\r:...years_at_residence \u0026lt;= 3: yes (6)\ryears_at_residence \u0026gt; 3: no (3/1)\r----- Trial 1: -----\rDecision tree:\rchecking_balance in {\u0026lt; 0 DM,1 - 200 DM}:\r:...savings_balance in {\u0026gt; 1000 DM,500 - 1000 DM}: no (29/8.6)\r: savings_balance = 100 - 500 DM:\r: :...credit_history in {critical,perfect,poor}: no (18/3.2)\r: : credit_history in {good,very good}: yes (30.5/9.5)\r: savings_balance = unknown:\r: :...credit_history in {critical,perfect,poor}: no (16.6)\r: : credit_history in {good,very good}:\r: : :...job = management: yes (9.3/2.4)\r: : job in {unemployed,unskilled}: no (7.9/0.8)\r: : job = skilled:\r: : :...purpose in {business,car0,renovations}: yes (0)\r: : purpose = education: no (3.2)\r: : purpose in {car,furniture/appliances}:\r: : :...months_loan_duration \u0026lt;= 18: yes (16.2/3.2)\r: : months_loan_duration \u0026gt; 18: no (16.5/7)\r: savings_balance = \u0026lt; 100 DM:\r: :...months_loan_duration \u0026gt; 47: yes (24.3/3.1)\r: months_loan_duration \u0026lt;= 47:\r: :...job = unemployed: yes (7/3.1)\r: job = unskilled:\r: :...housing in {other,rent}: yes (14.2/4.7)\r: : housing = own: no (66.4/20.3)\r: job = skilled:\r: :...percent_of_income \u0026gt; 2: yes (109.5/40.2)\r: : percent_of_income \u0026lt;= 2:\r: : :...employment_duration in {\u0026lt; 1 year,\u0026gt; 7 years,\r: : : 4 - 7 years}: yes (36/15)\r: : employment_duration in {1 - 4 years,\r: : unemployed}: no (31.3/7)\r: job = management:\r: :...existing_loans_count \u0026gt; 2: no (3.2)\r: existing_loans_count \u0026lt;= 2:\r: :...employment_duration in {\u0026lt; 1 year,\r: : 4 - 7 years}: no (9.4/0.8)\r: employment_duration in {\u0026gt; 7 years,\r: : 1 - 4 years}: yes (30.3/7.1)\r: employment_duration = unemployed:\r: :...percent_of_income \u0026lt;= 2: no (4.7)\r: percent_of_income \u0026gt; 2: yes (13.9/4)\rchecking_balance in {\u0026gt; 200 DM,unknown}:\r:...other_credit in {bank,store}:\r:...purpose = renovations: yes (0)\r: purpose in {car0,furniture/appliances}: no (31.4/6.9)\r: purpose in {business,car,education}:\r: :...percent_of_income \u0026lt;= 1: no (7/2.3)\r: percent_of_income \u0026gt; 1: yes (44.8/11.1)\rother_credit = none:\r:...credit_history in {critical,perfect}: no (116.7/10.1)\rcredit_history in {good,poor,very good}:\r:...existing_loans_count \u0026gt; 1:\r:...employment_duration = 4 - 7 years: no (7.9)\r: employment_duration in {\u0026lt; 1 year,\u0026gt; 7 years,1 - 4 years,\r: : unemployed}:\r: :...job in {management,unemployed}: yes (6.9)\r: job in {skilled,unskilled}:\r: :...years_at_residence \u0026lt;= 1: yes (4.6)\r: years_at_residence \u0026gt; 1:\r: :...years_at_residence \u0026lt;= 3: no (15.7/2.3)\r: years_at_residence \u0026gt; 3: yes (15.5/4)\rexisting_loans_count \u0026lt;= 1:\r:...credit_history = poor: yes (9.3/2.4)\rcredit_history = very good: no (1.6/0.8)\rcredit_history = good:\r:...phone = yes: no (54.4/4.6)\rphone = no:\r:...job in {management,unemployed}: no (2.4)\rjob = skilled:\r:...savings_balance in {\u0026gt; 1000 DM,100 - 500 DM,\r: : 500 - 1000 DM,\r: : unknown}: no (23.7)\r: savings_balance = \u0026lt; 100 DM:\r: :...years_at_residence \u0026lt;= 2: no (19.6/4.6)\r: years_at_residence \u0026gt; 2: yes (12.4/3.2)\rjob = unskilled:\r:...checking_balance = \u0026gt; 200 DM: yes (10.1/2.4)\rchecking_balance = unknown:\r:...percent_of_income \u0026lt;= 3: no (9.5)\rpercent_of_income \u0026gt; 3: yes (9.3/2.4)\r----- Trial 2: -----\rDecision tree:\rmonths_loan_duration \u0026lt;= 8:\r:...existing_loans_count \u0026gt; 1: no (19.1)\r: existing_loans_count \u0026lt;= 1:\r: :...amount \u0026lt;= 3161: no (45.5/7.7)\r: amount \u0026gt; 3161: yes (6.3/0.6)\rmonths_loan_duration \u0026gt; 8:\r:...checking_balance in {\u0026lt; 0 DM,\u0026gt; 200 DM,1 - 200 DM}:\r:...employment_duration = unemployed:\r: :...months_loan_duration \u0026gt; 33: no (11.4)\r: : months_loan_duration \u0026lt;= 33:\r: : :...phone = no: yes (11/2.7)\r: : phone = yes: no (15.5/6.5)\r: employment_duration = 4 - 7 years:\r: :...months_loan_duration \u0026lt;= 22: no (44.7/6.7)\r: : months_loan_duration \u0026gt; 22:\r: : :...job = management: no (4.6/0.6)\r: : job in {unemployed,unskilled}: yes (4.6/1.3)\r: : job = skilled:\r: : :...savings_balance in {\u0026lt; 100 DM,\u0026gt; 1000 DM,\r: : : 500 - 1000 DM}: yes (22.5/7.8)\r: : savings_balance in {100 - 500 DM,unknown}: no (8.8/2.1)\r: employment_duration = \u0026gt; 7 years:\r: :...amount \u0026gt; 6948: yes (13/1.3)\r: : amount \u0026lt;= 6948:\r: : :...purpose in {business,car0,education}: yes (22.8/7.8)\r: : purpose = renovations: no (1.3)\r: : purpose = car:\r: : :...job = unemployed: no (0)\r: : : job = unskilled: yes (6.9)\r: : : job in {management,skilled}:\r: : : :...years_at_residence \u0026lt;= 1: yes (2.5)\r: : : years_at_residence \u0026gt; 1: no (28.6/7.1)\r: : purpose = furniture/appliances:\r: : :...other_credit in {bank,store}: yes (7.3/2.1)\r: : other_credit = none:\r: : :...job = management: yes (5.1/1.3)\r: : job in {skilled,unemployed,unskilled}: no (29.2/3.4)\r: employment_duration = 1 - 4 years:\r: :...savings_balance = \u0026gt; 1000 DM: no (6.4)\r: : savings_balance in {\u0026lt; 100 DM,100 - 500 DM,500 - 1000 DM,unknown}:\r: : :...housing = other: yes (12/1.9)\r: : housing in {own,rent}:\r: : :...credit_history in {perfect,poor,very good}: no (29.3/8.6)\r: : credit_history = critical:\r: : :...months_loan_duration \u0026lt;= 16: no (10.6/0.6)\r: : : months_loan_duration \u0026gt; 16: yes (14.5/4.1)\r: : credit_history = good:\r: : :...phone = no: yes (81.6/33.5)\r: : phone = yes: no (30.2/11)\r: employment_duration = \u0026lt; 1 year:\r: :...savings_balance in {\u0026gt; 1000 DM,unknown}: no (9.1/1.9)\r: savings_balance in {100 - 500 DM,500 - 1000 DM}: yes (15.6/3.4)\r: savings_balance = \u0026lt; 100 DM:\r: :...housing = other: no (4.7)\r: housing in {own,rent}:\r: :...years_at_residence \u0026gt; 1: yes (41.6/11)\r: years_at_residence \u0026lt;= 1:\r: :...job in {management,unskilled}: no (13.9/4.9)\r: job = unemployed: yes (2.1)\r: job = skilled:\r: :...percent_of_income \u0026lt;= 3: yes (12.3/3.3)\r: percent_of_income \u0026gt; 3: no (9.7/0.6)\rchecking_balance = unknown:\r:...other_credit in {bank,store}:\r:...employment_duration in {1 - 4 years,unemployed}: yes (31.9/7.2)\r: employment_duration in {\u0026lt; 1 year,\u0026gt; 7 years,4 - 7 years}:\r: :...other_credit = store: no (8.1)\r: other_credit = bank:\r: :...age \u0026lt;= 43: yes (22/8.6)\r: age \u0026gt; 43: no (9)\rother_credit = none:\r:...age \u0026gt; 30: no (134.2/16.1)\rage \u0026lt;= 30:\r:...amount \u0026gt; 6458: yes (14.1/2.6)\ramount \u0026lt;= 6458:\r:...age \u0026lt;= 22: yes (17.4/5.9)\rage \u0026gt; 22:\r:...percent_of_income \u0026lt;= 3: no (22.7)\rpercent_of_income \u0026gt; 3:\r:...job = unemployed: no (0)\rjob in {management,unskilled}: yes (12.5/3.9)\rjob = skilled:\r:...purpose in {business,education,\r: renovations}: yes (8.6/1.9)\rpurpose in {car,car0,\rfurniture/appliances}: no (14.9)\r----- Trial 3: -----\rDecision tree:\ramount \u0026gt; 11054:\r:...credit_history in {critical,good,perfect}: yes (24.9/2.7)\r: credit_history in {poor,very good}: no (4.7/0.5)\ramount \u0026lt;= 11054:\r:...checking_balance in {\u0026gt; 200 DM,unknown}:\r:...employment_duration = \u0026gt; 7 years: no (91/18.6)\r: employment_duration = unemployed: yes (14.3/6.6)\r: employment_duration = 1 - 4 years:\r: :...job = management: yes (16.6/6.6)\r: : job in {skilled,unemployed,unskilled}: no (113.5/30.7)\r: employment_duration = 4 - 7 years:\r: :...age \u0026lt;= 22: yes (5.2/1.3)\r: : age \u0026gt; 22: no (49.9/4.7)\r: employment_duration = \u0026lt; 1 year:\r: :...purpose in {car,car0}: no (13.3)\r: purpose in {business,education,furniture/appliances,renovations}:\r: :...amount \u0026gt; 6681: yes (7)\r: amount \u0026lt;= 6681:\r: :...other_credit in {bank,store}: no (4)\r: other_credit = none:\r: :...months_loan_duration \u0026gt; 33: no (2.5)\r: months_loan_duration \u0026lt;= 33:\r: :...amount \u0026lt;= 1503: no (12.7/2.3)\r: amount \u0026gt; 1503: yes (18.3/5)\rchecking_balance in {\u0026lt; 0 DM,1 - 200 DM}:\r:...credit_history = perfect:\r:...percent_of_income \u0026lt;= 3: no (16.5/5.9)\r: percent_of_income \u0026gt; 3: yes (6.9)\rcredit_history = poor:\r:...percent_of_income \u0026lt;= 1: no (7.2)\r: percent_of_income \u0026gt; 1:\r: :...savings_balance in {\u0026lt; 100 DM,\u0026gt; 1000 DM,\r: : 500 - 1000 DM}: yes (19.2/3.9)\r: savings_balance in {100 - 500 DM,unknown}: no (12.8/2.3)\rcredit_history = very good:\r:...other_credit = none: yes (10.6)\r: other_credit in {bank,store}:\r: :...months_loan_duration \u0026lt;= 9: yes (4.7)\r: months_loan_duration \u0026gt; 9: no (20.6/8.1)\rcredit_history = critical:\r:...years_at_residence \u0026lt;= 1: no (7.5)\r: years_at_residence \u0026gt; 1:\r: :...savings_balance in {\u0026gt; 1000 DM,100 - 500 DM,\r: : unknown}: no (16.3/2.4)\r: savings_balance = 500 - 1000 DM: yes (2.8/0.5)\r: savings_balance = \u0026lt; 100 DM:\r: :...dependents \u0026gt; 1: no (12.9/0.5)\r: dependents \u0026lt;= 1:\r: :...other_credit = bank: yes (6.7/0.5)\r: other_credit = store: no (1.7/0.5)\r: other_credit = none:\r: :...age \u0026gt; 61: no (6.4)\r: age \u0026lt;= 61:\r: :...existing_loans_count \u0026gt; 2: no (3.3)\r: existing_loans_count \u0026lt;= 2:\r: :...job in {management,unemployed,\r: : unskilled}: yes (14.6/2.7)\r: job = skilled: no (41.3/17.6)\rcredit_history = good:\r:...purpose in {business,car0,education,renovations}: no (40.7/12.7)\rpurpose = furniture/appliances:\r:...months_loan_duration \u0026lt;= 7: no (10.6)\r: months_loan_duration \u0026gt; 7:\r: :...phone = no: no (123.2/45.7)\r: phone = yes:\r: :...years_at_residence \u0026lt;= 3: yes (27.8/6.6)\r: years_at_residence \u0026gt; 3: no (9.4/3.1)\rpurpose = car:\r:...employment_duration = unemployed: no (7.1)\remployment_duration in {\u0026lt; 1 year,\u0026gt; 7 years,1 - 4 years,\r: 4 - 7 years}:\r:...dependents \u0026gt; 1: no (17.3/5.8)\rdependents \u0026lt;= 1:\r:...percent_of_income \u0026lt;= 2:\r:...amount \u0026lt;= 2697: yes (8.6/1.3)\r: amount \u0026gt; 2697: no (15.4/2.2)\rpercent_of_income \u0026gt; 2:\r:...percent_of_income \u0026lt;= 3: yes (17/2.3)\rpercent_of_income \u0026gt; 3:\r:...phone = yes: no (5.7/1.1)\rphone = no:\r:...checking_balance = \u0026lt; 0 DM: yes (16.7/1.3)\rchecking_balance = 1 - 200 DM: no (10.6/4.3)\r----- Trial 4: -----\rDecision tree:\rchecking_balance = unknown:\r:...other_credit in {bank,store}:\r: :...employment_duration in {\u0026lt; 1 year,4 - 7 years}: no (16.1/3.4)\r: : employment_duration = unemployed: yes (5.8/1.9)\r: : employment_duration = \u0026gt; 7 years:\r: : :...age \u0026lt;= 41: yes (16.4/6)\r: : : age \u0026gt; 41: no (7.7)\r: : employment_duration = 1 - 4 years:\r: : :...years_at_residence \u0026lt;= 1: no (3.1)\r: : years_at_residence \u0026gt; 1:\r: : :...amount \u0026lt;= 1503: no (3.6)\r: : amount \u0026gt; 1503: yes (26.3/6)\r: other_credit = none:\r: :...credit_history in {perfect,very good}: no (2.8)\r: credit_history = critical:\r: :...age \u0026gt; 30: no (45.3)\r: : age \u0026lt;= 30:\r: : :...purpose in {business,car,car0,furniture/appliances,\r: : : renovations}: no (21.4/3.9)\r: : purpose = education: yes (3)\r: credit_history = poor:\r: :...dependents \u0026gt; 1: yes (8.2/1.8)\r: : dependents \u0026lt;= 1:\r: : :...age \u0026lt;= 29: yes (11.8/4.6)\r: : age \u0026gt; 29: no (9.9)\r: credit_history = good:\r: :...existing_loans_count \u0026gt; 1:\r: :...percent_of_income \u0026lt;= 2: yes (13/0.4)\r: : percent_of_income \u0026gt; 2: no (7.5/1.3)\r: existing_loans_count \u0026lt;= 1:\r: :...percent_of_income \u0026lt;= 2: no (30.9/1.3)\r: percent_of_income \u0026gt; 2:\r: :...employment_duration = \u0026gt; 7 years: no (11.2)\r: employment_duration in {\u0026lt; 1 year,1 - 4 years,4 - 7 years,\r: : unemployed}:\r: :...job in {management,unemployed}: no (10.7/4.9)\r: job = unskilled: yes (10/3.6)\r: job = skilled:\r: :...age \u0026lt;= 23: yes (9.3/2.6)\r: age \u0026gt; 23: no (17.9)\rchecking_balance in {\u0026lt; 0 DM,\u0026gt; 200 DM,1 - 200 DM}:\r:...credit_history = very good:\r:...age \u0026lt;= 23: no (3)\r: age \u0026gt; 23: yes (38.4/9.1)\rcredit_history = perfect:\r:...housing in {other,rent}: yes (9.1)\r: housing = own:\r: :...percent_of_income \u0026gt; 3: yes (5)\r: percent_of_income \u0026lt;= 3:\r: :...other_credit in {bank,none}: no (16/3.9)\r: other_credit = store: yes (2.7)\rcredit_history = poor:\r:...savings_balance in {\u0026gt; 1000 DM,500 - 1000 DM}: yes (0)\r: savings_balance = unknown: no (5.9)\r: savings_balance in {\u0026lt; 100 DM,100 - 500 DM}:\r: :...housing = rent: no (4.7/0.4)\r: housing in {other,own}:\r: :...percent_of_income \u0026lt;= 2: no (14.4/3.7)\r: percent_of_income \u0026gt; 2: yes (16.9/2.7)\rcredit_history = good:\r:...amount \u0026gt; 8648: yes (19.4/2.4)\r: amount \u0026lt;= 8648:\r: :...purpose in {business,car0}: no (18/4.2)\r: purpose = renovations: yes (7.1/3)\r: purpose = education:\r: :...checking_balance = \u0026lt; 0 DM: yes (12.1/1.4)\r: : checking_balance in {\u0026gt; 200 DM,1 - 200 DM}: no (8.7/1.1)\r: purpose = car:\r: :...employment_duration = unemployed: no (5.9)\r: : employment_duration in {\u0026lt; 1 year,\u0026gt; 7 years,1 - 4 years,\r: : : 4 - 7 years}:\r: : :...job in {management,unemployed}: no (8.6/2.4)\r: : job = unskilled: yes (31.1/10.2)\r: : job = skilled:\r: : :...housing in {other,rent}: yes (24.2/6.4)\r: : housing = own:\r: : :...dependents \u0026gt; 1: no (4.3)\r: : dependents \u0026lt;= 1:\r: : :...existing_loans_count \u0026gt; 1: no (3.6)\r: : existing_loans_count \u0026lt;= 1:\r: : :...months_loan_duration \u0026lt;= 13: no (9.2/1.5)\r: : months_loan_duration \u0026gt; 13: yes (11.6/1.4)\r: purpose = furniture/appliances:\r: :...savings_balance in {\u0026gt; 1000 DM,500 - 1000 DM}: no (8.8/1.8)\r: savings_balance = 100 - 500 DM: yes (16.1/3.5)\r: savings_balance = unknown:\r: :...employment_duration in {\u0026lt; 1 year,\u0026gt; 7 years,1 - 4 years,\r: : : unemployed}: yes (20.8/6.5)\r: : employment_duration = 4 - 7 years: no (4.9)\r: savings_balance = \u0026lt; 100 DM:\r: :...years_at_residence \u0026lt;= 1: no (31.1/9.5)\r: years_at_residence \u0026gt; 1:\r: :...other_credit in {bank,store}: yes (14.9/4.8)\r: other_credit = none:\r: :...months_loan_duration \u0026gt; 42: yes (5.5)\r: months_loan_duration \u0026lt;= 42:\r: :...job in {management,unemployed}: no (11.9/3.4)\r: job in {skilled,unskilled}:\r: :...age \u0026lt;= 22: yes (11.8/2.7)\r: age \u0026gt; 22: no (76.6/33.4)\rcredit_history = critical:\r:...savings_balance in {\u0026gt; 1000 DM,100 - 500 DM,unknown}: no (23.6/5.9)\rsavings_balance = 500 - 1000 DM: yes (6.2/1.6)\rsavings_balance = \u0026lt; 100 DM:\r:...dependents \u0026gt; 1: no (12.2/1.1)\rdependents \u0026lt;= 1:\r:...age \u0026gt; 61: no (5.7)\rage \u0026lt;= 61:\r:...years_at_residence \u0026lt;= 1: no (6.1/1)\ryears_at_residence \u0026gt; 1:\r:...other_credit in {bank,store}: yes (8.3/2.1)\rother_credit = none:\r:...amount \u0026gt; 5998: yes (7)\ramount \u0026lt;= 5998:\r:...existing_loans_count \u0026lt;= 1: no (11.6/3.9)\rexisting_loans_count \u0026gt; 1:\r:...existing_loans_count \u0026gt; 2: no (2.7)\rexisting_loans_count \u0026lt;= 2:\r:...age \u0026gt; 54: yes (3.9)\rage \u0026lt;= 54:\r:...age \u0026gt; 44: no (5)\rage \u0026lt;= 44:\r:...amount \u0026lt;= 5324: yes (30.9/10.8)\ramount \u0026gt; 5324: no (2.7)\r----- Trial 5: -----\rDecision tree:\rchecking_balance = unknown:\r:...other_credit = store: no (17.3/6.3)\r: other_credit = bank:\r: :...purpose = business: yes (8.9/4.1)\r: : purpose in {car0,education,renovations}: no (7.2/1.8)\r: : purpose = car:\r: : :...credit_history in {critical,perfect,poor,very good}: yes (17.2/4.4)\r: : : credit_history = good: no (3.5)\r: : purpose = furniture/appliances:\r: : :...months_loan_duration \u0026lt;= 13: yes (6.5/1.6)\r: : months_loan_duration \u0026gt; 13: no (17.4/2.5)\r: other_credit = none:\r: :...credit_history in {perfect,very good}: no (2.3)\r: credit_history = critical:\r: :...amount \u0026lt;= 6967: no (50.3/2.5)\r: : amount \u0026gt; 6967: yes (8.9/3.4)\r: credit_history = good:\r: :...existing_loans_count \u0026lt;= 1: no (86.1/19.3)\r: : existing_loans_count \u0026gt; 1:\r: : :...percent_of_income \u0026lt;= 2: yes (11.5/1.2)\r: : percent_of_income \u0026gt; 2: no (7.2/2.1)\r: credit_history = poor:\r: :...percent_of_income \u0026lt;= 3: no (13.6/1)\r: percent_of_income \u0026gt; 3:\r: :...amount \u0026lt;= 1526: no (3.4)\r: amount \u0026gt; 1526: yes (15.7/5.7)\rchecking_balance in {\u0026lt; 0 DM,\u0026gt; 200 DM,1 - 200 DM}:\r:...savings_balance in {\u0026gt; 1000 DM,500 - 1000 DM}: no (33.1/13.9)\rsavings_balance = 100 - 500 DM:\r:...existing_loans_count \u0026gt; 3: yes (3.5)\r: existing_loans_count \u0026lt;= 3:\r: :...credit_history in {critical,poor}: no (12/1.4)\r: credit_history in {perfect,very good}: yes (9.7/2.8)\r: credit_history = good:\r: :...months_loan_duration \u0026gt; 30: yes (6.3)\r: months_loan_duration \u0026lt;= 30:\r: :...amount \u0026lt;= 836: yes (3.8)\r: amount \u0026gt; 836: no (25.9/7.2)\rsavings_balance = unknown:\r:...months_loan_duration \u0026lt;= 11: no (9.8)\r: months_loan_duration \u0026gt; 11:\r: :...months_loan_duration \u0026gt; 36: no (8.3)\r: months_loan_duration \u0026lt;= 36:\r: :...purpose in {business,education,renovations}: no (8.9/1.8)\r: purpose = car0: yes (1.8)\r: purpose = car:\r: :...amount \u0026lt;= 1804: yes (9.3)\r: : amount \u0026gt; 1804: no (14.4/4.1)\r: purpose = furniture/appliances:\r: :...housing in {other,rent}: yes (6.8/0.7)\r: housing = own: no (25.6/8.1)\rsavings_balance = \u0026lt; 100 DM:\r:...months_loan_duration \u0026gt; 47: yes (29.2/4.2)\rmonths_loan_duration \u0026lt;= 47:\r:...credit_history in {perfect,very good}: yes (42.5/16.6)\rcredit_history = poor:\r:...phone = no: no (10.6/2.3)\r: phone = yes: yes (15.2/2.5)\rcredit_history = critical:\r:...dependents \u0026gt; 1: no (11/2)\r: dependents \u0026lt;= 1:\r: :...housing = other: no (3.3)\r: housing = rent: yes (14.4/4.7)\r: housing = own:\r: :...purpose in {business,car0,renovations}: no (6.4/1.8)\r: purpose = education: yes (2.8/0.4)\r: purpose = car:\r: :...age \u0026lt;= 29: yes (5.3)\r: : age \u0026gt; 29: no (20.3/5.1)\r: purpose = furniture/appliances:\r: :...phone = yes: no (4.6)\r: phone = no:\r: :...years_at_residence \u0026lt;= 3: yes (14.4/4.8)\r: years_at_residence \u0026gt; 3: no (9.3/0.8)\rcredit_history = good:\r:...job = unemployed: yes (2.9)\rjob = management:\r:...amount \u0026lt;= 7582: no (18.8/3.8)\r: amount \u0026gt; 7582: yes (11.1/2)\rjob = skilled:\r:...employment_duration = 1 - 4 years: yes (61/25.1)\r: employment_duration = unemployed: no (2.1)\r: employment_duration = \u0026lt; 1 year:\r: :...amount \u0026lt;= 3124: yes (32.1/10.7)\r: : amount \u0026gt; 3124: no (6.1)\r: employment_duration = \u0026gt; 7 years:\r: :...age \u0026lt;= 33: no (3.7)\r: : age \u0026gt; 33: yes (15.5/4.9)\r: employment_duration = 4 - 7 years:\r: :...dependents \u0026lt;= 1: yes (20/8.3)\r: dependents \u0026gt; 1: no (5.5/0.9)\rjob = unskilled:\r:...months_loan_duration \u0026lt;= 8: no (5.7)\rmonths_loan_duration \u0026gt; 8:\r:...employment_duration in {\u0026lt; 1 year,\r: unemployed}: yes (21.8/5.6)\remployment_duration in {\u0026gt; 7 years,\r: 4 - 7 years}: no (13.3/4.3)\remployment_duration = 1 - 4 years:\r:...phone = yes: yes (3.8/0.4)\rphone = no:\r:...checking_balance in {\u0026lt; 0 DM,\r: 1 - 200 DM}: no (26.4/9.3)\rchecking_balance = \u0026gt; 200 DM: yes (4.9)\r----- Trial 6: -----\rDecision tree:\rchecking_balance in {\u0026gt; 200 DM,unknown}:\r:...purpose in {business,car0}: no (47.2/16.3)\r: purpose = renovations: yes (6.8/3)\r: purpose = education:\r: :...years_at_residence \u0026lt;= 2: yes (11/2)\r: : years_at_residence \u0026gt; 2: no (14.3/4.9)\r: purpose = car:\r: :...other_credit in {none,store}: no (82.6/19.2)\r: : other_credit = bank:\r: : :...existing_loans_count \u0026lt;= 1: no (11.2/3.9)\r: : existing_loans_count \u0026gt; 1: yes (13.4/3.5)\r: purpose = furniture/appliances:\r: :...age \u0026gt; 44: no (20.8)\r: age \u0026lt;= 44:\r: :...credit_history in {critical,poor,very good}: no (42.4/8.2)\r: credit_history = perfect: yes (1.8/0.6)\r: credit_history = good:\r: :...existing_loans_count \u0026gt; 1: yes (14.7/4)\r: existing_loans_count \u0026lt;= 1:\r: :...job in {management,skilled,unemployed}: no (51.6/13.3)\r: job = unskilled: yes (16.8/4.1)\rchecking_balance in {\u0026lt; 0 DM,1 - 200 DM}:\r:...years_at_residence \u0026lt;= 1:\r:...employment_duration = unemployed: yes (6.4)\r: employment_duration in {\u0026lt; 1 year,\u0026gt; 7 years,1 - 4 years,4 - 7 years}:\r: :...housing in {other,own}: no (78/21.9)\r: housing = rent: yes (9.7/3.2)\ryears_at_residence \u0026gt; 1:\r:...employment_duration = 4 - 7 years: no (67/24.6)\remployment_duration = unemployed:\r:...dependents \u0026gt; 1: yes (7.5/0.6)\r: dependents \u0026lt;= 1:\r: :...credit_history in {critical,good,very good}: no (23/2.7)\r: credit_history in {perfect,poor}: yes (5.5/0.9)\remployment_duration = \u0026lt; 1 year:\r:...savings_balance in {\u0026gt; 1000 DM,100 - 500 DM,\r: : 500 - 1000 DM}: yes (17.6/2.4)\r: savings_balance = unknown: no (6/2.1)\r: savings_balance = \u0026lt; 100 DM:\r: :...months_loan_duration \u0026gt; 22: yes (22.2/3)\r: months_loan_duration \u0026lt;= 22:\r: :...dependents \u0026gt; 1: no (2.1)\r: dependents \u0026lt;= 1:\r: :...months_loan_duration \u0026lt;= 12: yes (8.4/2)\r: months_loan_duration \u0026gt; 12: no (14.6/2.8)\remployment_duration = \u0026gt; 7 years:\r:...months_loan_duration \u0026gt; 40: yes (5.8)\r: months_loan_duration \u0026lt;= 40:\r: :...purpose in {business,car0,education}: yes (20.2/6.2)\r: purpose = renovations: no (1.3)\r: purpose = furniture/appliances:\r: :...years_at_residence \u0026lt;= 3: yes (15.3/3.3)\r: : years_at_residence \u0026gt; 3:\r: : :...amount \u0026lt;= 5711: no (21.9/3.7)\r: : amount \u0026gt; 5711: yes (5.3)\r: purpose = car:\r: :...months_loan_duration \u0026lt;= 18: yes (18.6/4.1)\r: months_loan_duration \u0026gt; 18:\r: :...job = unemployed: no (0)\r: job = unskilled: yes (2.3)\r: job in {management,skilled}:\r: :...existing_loans_count \u0026lt;= 3: no (18.3/2.8)\r: existing_loans_count \u0026gt; 3: yes (2.1)\remployment_duration = 1 - 4 years:\r:...savings_balance = \u0026gt; 1000 DM: no (2.9)\rsavings_balance in {100 - 500 DM,500 - 1000 DM}: yes (20.2/6.7)\rsavings_balance = unknown:\r:...other_credit in {bank,store}: no (2.8)\r: other_credit = none: yes (17.4/7.3)\rsavings_balance = \u0026lt; 100 DM:\r:...months_loan_duration \u0026gt; 36: yes (11.3)\rmonths_loan_duration \u0026lt;= 36:\r:...purpose in {business,education,\r: renovations}: yes (12.4/3.2)\rpurpose = car0: no (3/1.4)\rpurpose = car:\r:...housing = other: yes (1)\r: housing = rent: no (13.1/1.3)\r: housing = own:\r: :...dependents \u0026gt; 1: no (3.4)\r: dependents \u0026lt;= 1:\r: :...years_at_residence \u0026lt;= 3: yes (12.5/3.7)\r: years_at_residence \u0026gt; 3: no (6.7/0.7)\rpurpose = furniture/appliances:\r:...months_loan_duration \u0026gt; 24: no (5.6)\rmonths_loan_duration \u0026lt;= 24:\r:...other_credit = bank: yes (9.3/2.7)\rother_credit = store: no (4.3)\rother_credit = none:\r:...percent_of_income \u0026lt;= 1: yes (4.9)\rpercent_of_income \u0026gt; 1:\r:...amount \u0026lt;= 1164: no (14)\ramount \u0026gt; 1164:\r:...phone = yes: yes (4.4)\rphone = no:\r:...age \u0026lt;= 24: yes (13.6/1.9)\rage \u0026gt; 24: no (23.6/7.8)\r----- Trial 7: -----\rDecision tree:\rmonths_loan_duration \u0026lt;= 8:\r:...existing_loans_count \u0026gt; 1: no (12.1)\r: existing_loans_count \u0026lt;= 1:\r: :...amount \u0026gt; 3161: yes (6.1/0.6)\r: amount \u0026lt;= 3161:\r: :...age \u0026lt;= 25: yes (9.4/3.2)\r: age \u0026gt; 25: no (33/2.6)\rmonths_loan_duration \u0026gt; 8:\r:...checking_balance = \u0026lt; 0 DM:\r:...credit_history = critical: no (45.5/18.9)\r: credit_history in {perfect,poor,very good}: yes (50.8/15.6)\r: credit_history = good:\r: :...purpose in {business,car0}: no (7.7/1.3)\r: purpose in {education,renovations}: yes (11.2/2.8)\r: purpose = car:\r: :...savings_balance in {\u0026gt; 1000 DM,100 - 500 DM}: no (2.9)\r: : savings_balance in {500 - 1000 DM,unknown}: yes (10.9/3.1)\r: : savings_balance = \u0026lt; 100 DM:\r: : :...years_at_residence \u0026lt;= 2: yes (18.3/3)\r: : years_at_residence \u0026gt; 2:\r: : :...existing_loans_count \u0026lt;= 1: no (23.8/9.1)\r: : existing_loans_count \u0026gt; 1: yes (2.4)\r: purpose = furniture/appliances:\r: :...savings_balance in {\u0026gt; 1000 DM,500 - 1000 DM}: no (1.7)\r: savings_balance in {100 - 500 DM,unknown}: yes (15/3.3)\r: savings_balance = \u0026lt; 100 DM:\r: :...phone = yes: yes (15.5/2.6)\r: phone = no:\r: :...years_at_residence \u0026lt;= 1: no (13.4/1.3)\r: years_at_residence \u0026gt; 1:\r: :...percent_of_income \u0026lt;= 1: no (6.6/1)\r: percent_of_income \u0026gt; 1:\r: :...age \u0026lt;= 23: yes (7.5)\r: age \u0026gt; 23:\r: :...housing in {other,rent}: no (6.1/0.6)\r: housing = own:\r: :...months_loan_duration \u0026gt; 28: yes (7.7)\r: months_loan_duration \u0026lt;= 28:\r: :...other_credit in {bank,\r: : store}: yes (8.1/2.1)\r: other_credit = none: no (19.7/5.9)\rchecking_balance in {\u0026gt; 200 DM,1 - 200 DM,unknown}:\r:...savings_balance = \u0026gt; 1000 DM:\r:...housing = other: yes (5.5)\r: housing in {own,rent}:\r: :...existing_loans_count \u0026lt;= 2: no (16.6)\r: existing_loans_count \u0026gt; 2: yes (2.1)\rsavings_balance = 100 - 500 DM:\r:...purpose in {business,car0,renovations}: no (15.7/1.9)\r: purpose = education: yes (7/0.5)\r: purpose = furniture/appliances:\r: :...months_loan_duration \u0026lt;= 27: no (16.6/3.8)\r: : months_loan_duration \u0026gt; 27: yes (3.8)\r: purpose = car:\r: :...dependents \u0026gt; 1: yes (4.2/0.5)\r: dependents \u0026lt;= 1:\r: :...age \u0026lt;= 29: yes (12/2.8)\r: age \u0026gt; 29: no (10.7/1.8)\rsavings_balance = 500 - 1000 DM:\r:...existing_loans_count \u0026gt; 2: yes (3.5)\r: existing_loans_count \u0026lt;= 2:\r: :...job in {management,unemployed}: no (6)\r: job in {skilled,unskilled}:\r: :...other_credit = bank: yes (4.7)\r: other_credit in {none,store}: no (21.8/7.7)\rsavings_balance = unknown:\r:...purpose in {business,car,car0,education,\r: : renovations}: no (69.3/20.1)\r: purpose = furniture/appliances:\r: :...months_loan_duration \u0026gt; 18: no (16.8/1.2)\r: months_loan_duration \u0026lt;= 18:\r: :...age \u0026lt;= 24: no (5)\r: age \u0026gt; 24: yes (21.6/6.9)\rsavings_balance = \u0026lt; 100 DM:\r:...months_loan_duration \u0026gt; 26:\r:...years_at_residence \u0026lt;= 1: no (14.4/4.8)\r: years_at_residence \u0026gt; 1:\r: :...percent_of_income \u0026lt;= 1: no (8.6/2.5)\r: percent_of_income \u0026gt; 1: yes (66.3/17.7)\rmonths_loan_duration \u0026lt;= 26:\r:...age \u0026gt; 47: no (16/0.6)\rage \u0026lt;= 47:\r:...dependents \u0026gt; 1:\r:...age \u0026lt;= 33: no (5.3)\r: age \u0026gt; 33:\r: :...existing_loans_count \u0026gt; 2: no (2.1)\r: existing_loans_count \u0026lt;= 2:\r: :...months_loan_duration \u0026lt;= 11: no (2.6)\r: months_loan_duration \u0026gt; 11: yes (21.7/1)\rdependents \u0026lt;= 1:\r:...existing_loans_count \u0026gt; 1:\r:...amount \u0026lt;= 8133: no (61.5/14.6)\r: amount \u0026gt; 8133: yes (5.4)\rexisting_loans_count \u0026lt;= 1:\r:...purpose in {business,car0,\r: education}: no (15.1/6.6)\rpurpose = renovations: yes (2.6)\rpurpose in {car,furniture/appliances}:\r:...checking_balance = \u0026gt; 200 DM: no (14.1/3.4)\rchecking_balance = unknown:\r:...age \u0026lt;= 25: yes (12.5/4)\r: age \u0026gt; 25: no (11.9)\rchecking_balance = 1 - 200 DM:\r:...other_credit in {bank,\r: store}: yes (9.4/2.3)\rother_credit = none:\r:...housing = other: yes (2.3)\rhousing = rent: no (12.5/4.1)\rhousing = own:\r:...age \u0026gt; 34: yes (7.5/0.5)\rage \u0026lt;= 34: [S1]\rSubTree [S1]\rmonths_loan_duration \u0026lt;= 9: yes (8.7/2.2)\rmonths_loan_duration \u0026gt; 9: no (21.2/7.2)\r----- Trial 8: -----\rDecision tree:\rchecking_balance = unknown:\r:...employment_duration in {\u0026gt; 7 years,4 - 7 years}:\r: :...months_loan_duration \u0026gt; 24: no (28.1)\r: : months_loan_duration \u0026lt;= 24:\r: : :...amount \u0026lt;= 10222: no (75.5/20.4)\r: : amount \u0026gt; 10222: yes (3.6)\r: employment_duration in {\u0026lt; 1 year,1 - 4 years,unemployed}:\r: :...dependents \u0026gt; 1:\r: :...other_credit in {bank,none}: no (17.2/1.6)\r: : other_credit = store: yes (2.9/0.4)\r: dependents \u0026lt;= 1:\r: :...amount \u0026gt; 4455: yes (50.2/14.1)\r: amount \u0026lt;= 4455:\r: :...percent_of_income \u0026lt;= 2: no (21.9/3.1)\r: percent_of_income \u0026gt; 2:\r: :...employment_duration = \u0026lt; 1 year: no (8.5/1.2)\r: employment_duration = unemployed: yes (6.6/1.6)\r: employment_duration = 1 - 4 years:\r: :...existing_loans_count \u0026gt; 1: no (20.7/4)\r: existing_loans_count \u0026lt;= 1:\r: :...savings_balance in {\u0026gt; 1000 DM,\r: : 100 - 500 DM}: no (4.8)\r: savings_balance in {\u0026lt; 100 DM,500 - 1000 DM,unknown}:\r: :...other_credit in {bank,store}: yes (5.3)\r: other_credit = none:\r: :...age \u0026lt;= 31: yes (21.1/5.9)\r: age \u0026gt; 31: no (5.4)\rchecking_balance in {\u0026lt; 0 DM,\u0026gt; 200 DM,1 - 200 DM}:\r:...savings_balance = \u0026gt; 1000 DM: no (12.6/4.4)\rsavings_balance = 500 - 1000 DM:\r:...other_credit in {bank,none}: yes (20.8/7.3)\r: other_credit = store: no (1.6)\rsavings_balance = 100 - 500 DM:\r:...existing_loans_count \u0026gt; 3: yes (3.8)\r: existing_loans_count \u0026lt;= 3:\r: :...credit_history in {critical,poor}: no (12.9/1.4)\r: credit_history in {perfect,very good}: yes (12.3/3.8)\r: credit_history = good:\r: :...months_loan_duration \u0026gt; 30: yes (4.1)\r: months_loan_duration \u0026lt;= 30:\r: :...housing in {other,rent}: yes (8.3/2.1)\r: housing = own:\r: :...purpose in {business,car,car0,education,\r: : renovations}: no (11.2/0.5)\r: purpose = furniture/appliances: yes (7.8/2.1)\rsavings_balance = unknown:\r:...months_loan_duration \u0026lt;= 11: no (6.9)\r: months_loan_duration \u0026gt; 11:\r: :...job in {management,unemployed,unskilled}: no (22.6/7)\r: job = skilled:\r: :...purpose in {car0,renovations}: yes (0)\r: purpose in {business,education}: no (10.5)\r: purpose in {car,furniture/appliances}:\r: :...amount \u0026lt;= 1412: yes (7.7)\r: amount \u0026gt; 1412:\r: :...existing_loans_count \u0026gt; 1: no (4.5)\r: existing_loans_count \u0026lt;= 1:\r: :...amount \u0026gt; 10366: yes (2.6)\r: amount \u0026lt;= 10366:\r: :...purpose = car: no (10.6/3.4)\r: purpose = furniture/appliances: yes (15.5/6.2)\rsavings_balance = \u0026lt; 100 DM:\r:...months_loan_duration \u0026lt;= 15:\r:...credit_history in {perfect,very good}: yes (20.7/7.6)\r: credit_history = poor: no (7.6/1.8)\r: credit_history = critical:\r: :...dependents \u0026gt; 1: no (4.5)\r: : dependents \u0026lt;= 1:\r: : :...job in {unemployed,unskilled}: no (5.8)\r: : job in {management,skilled}:\r: : :...percent_of_income \u0026lt;= 3: yes (10.5/2.7)\r: : percent_of_income \u0026gt; 3: no (15.5/3.4)\r: credit_history = good:\r: :...phone = yes:\r: :...amount \u0026lt;= 3021: no (17.8/0.6)\r: : amount \u0026gt; 3021: yes (4.2/0.2)\r: phone = no:\r: :...purpose in {business,car0,renovations}: no (4.3/1)\r: purpose = education: yes (4.7)\r: purpose = car:\r: :...months_loan_duration \u0026gt; 13: no (2.8)\r: : months_loan_duration \u0026lt;= 13:\r: : :...checking_balance in {\u0026lt; 0 DM,\r: : : 1 - 200 DM}: yes (20.6/4.8)\r: : checking_balance = \u0026gt; 200 DM: no (2.3)\r: purpose = furniture/appliances:\r: :...other_credit = bank: no (3.6)\r: other_credit = store: yes (4.1)\r: other_credit = none:\r: :...checking_balance = \u0026lt; 0 DM: no (15.7/1.8)\r: checking_balance in {\u0026gt; 200 DM,1 - 200 DM}:\r: :...months_loan_duration \u0026lt;= 7: no (4.6)\r: months_loan_duration \u0026gt; 7:\r: :...amount \u0026gt; 2625: no (2.8)\r: amount \u0026lt;= 2625:\r: :...amount \u0026lt;= 601: no (2.4)\r: amount \u0026gt; 601: yes (24.7/5.6)\rmonths_loan_duration \u0026gt; 15:\r:...months_loan_duration \u0026gt; 47: yes (28.1/4.8)\rmonths_loan_duration \u0026lt;= 47:\r:...amount \u0026lt;= 2320: yes (83.1/19.4)\ramount \u0026gt; 2320:\r:...percent_of_income \u0026lt;= 1:\r:...amount \u0026lt;= 11054: no (24/4.1)\r: amount \u0026gt; 11054: yes (2.3)\rpercent_of_income \u0026gt; 1:\r:...credit_history = perfect: no (12.6/5.2)\rcredit_history in {poor,very good}: yes (12.1/2.4)\rcredit_history = critical:\r:...age \u0026lt;= 31: yes (12.8/2)\r: age \u0026gt; 31: no (16.6/3)\rcredit_history = good:\r:...other_credit = store: no (4.9)\rother_credit in {bank,none}:\r:...job = management: no (16.2/6.3)\rjob in {unemployed,unskilled}: yes (14.8/4.3)\rjob = skilled:\r:...housing = other: no (3.8)\rhousing in {own,rent}: [S1]\rSubTree [S1]\rchecking_balance = \u0026lt; 0 DM: yes (22.4/4.4)\rchecking_balance in {\u0026gt; 200 DM,1 - 200 DM}: no (19.1/6.6)\r----- Trial 9: -----\rDecision tree:\rchecking_balance in {\u0026gt; 200 DM,unknown}:\r:...purpose in {business,education,renovations}:\r: :...employment_duration = 4 - 7 years: no (9.1)\r: : employment_duration in {\u0026lt; 1 year,\u0026gt; 7 years,1 - 4 years,unemployed}:\r: : :...other_credit = store: yes (7.1/0.4)\r: : other_credit in {bank,none}:\r: : :...credit_history in {critical,perfect}: no (19.3/4.7)\r: : credit_history in {good,poor,very good}: yes (38.8/11.6)\r: purpose in {car,car0,furniture/appliances}:\r: :...existing_loans_count \u0026lt;= 1: no (147.5/30.2)\r: existing_loans_count \u0026gt; 1:\r: :...checking_balance = \u0026gt; 200 DM: yes (12.9/4.2)\r: checking_balance = unknown:\r: :...housing = other: no (4.5)\r: housing = rent: yes (11.7/3.6)\r: housing = own:\r: :...months_loan_duration \u0026lt;= 16: no (18.7)\r: months_loan_duration \u0026gt; 16:\r: :...credit_history in {good,perfect,\r: : very good}: yes (12.4/1.9)\r: credit_history in {critical,poor}:\r: :...percent_of_income \u0026lt;= 2: no (11.3)\r: percent_of_income \u0026gt; 2:\r: :...employment_duration in {\u0026lt; 1 year,4 - 7 years,\r: : unemployed}: no (10.9)\r: employment_duration in {\u0026gt; 7 years,1 - 4 years}: [S1]\rchecking_balance in {\u0026lt; 0 DM,1 - 200 DM}:\r:...months_loan_duration \u0026gt; 26:\r:...months_loan_duration \u0026gt; 47: yes (29.7/5.5)\r: months_loan_duration \u0026lt;= 47:\r: :...dependents \u0026lt;= 1: yes (86.5/30.6)\r: dependents \u0026gt; 1: no (14.8/5.1)\rmonths_loan_duration \u0026lt;= 26:\r:...housing = other:\r:...amount \u0026gt; 7409: yes (7.9)\r: amount \u0026lt;= 7409:\r: :...job in {management,skilled}: no (22.5/4.7)\r: job in {unemployed,unskilled}: yes (5)\rhousing = rent:\r:...credit_history = perfect: yes (6.6)\r: credit_history in {critical,good,poor,very good}:\r: :...other_credit in {bank,store}: yes (18.4/5.6)\r: other_credit = none:\r: :...months_loan_duration \u0026gt; 22:\r: :...percent_of_income \u0026lt;= 2: no (7.3/2.6)\r: : percent_of_income \u0026gt; 2: yes (14.7/1.4)\r: months_loan_duration \u0026lt;= 22:\r: :...job in {management,unemployed,unskilled}: no (16.8/1.9)\r: job = skilled:\r: :...credit_history = very good: yes (0)\r: credit_history in {critical,poor}: no (12/3)\r: credit_history = good:\r: :...amount \u0026lt;= 1382: yes (9.6)\r: amount \u0026gt; 1382: no (16.2/5.5)\rhousing = own:\r:...employment_duration = unemployed: yes (16.9/4.2)\remployment_duration in {\u0026lt; 1 year,\u0026gt; 7 years,1 - 4 years,4 - 7 years}:\r:...savings_balance in {\u0026gt; 1000 DM,500 - 1000 DM}: no (16.4/2.8)\rsavings_balance = 100 - 500 DM:\r:...amount \u0026lt;= 1442: yes (8.8/1.8)\r: amount \u0026gt; 1442: no (19.2/1.2)\rsavings_balance = unknown:\r:...credit_history in {critical,good,perfect,\r: : poor}: no (30.1/6.7)\r: credit_history = very good: yes (3.8)\rsavings_balance = \u0026lt; 100 DM:\r:...job = management: yes (6.8/2)\rjob in {unemployed,unskilled}: no (69.1/23.1)\rjob = skilled:\r:...purpose in {education,renovations}: yes (6.3)\rpurpose in {business,car,car0,furniture/appliances}:\r:...months_loan_duration \u0026lt;= 7: no (7)\rmonths_loan_duration \u0026gt; 7:\r:...credit_history in {perfect,\r: poor}: no (9.4/1.5)\rcredit_history = very good: yes (3.1)\rcredit_history = critical:\r:...percent_of_income \u0026lt;= 2: no (6.1)\r: percent_of_income \u0026gt; 2:\r: :...percent_of_income \u0026lt;= 3: yes (4.5)\r: percent_of_income \u0026gt; 3: no (16.1/5.3)\rcredit_history = good:\r:...years_at_residence \u0026gt; 3: no (19.1/3.6)\ryears_at_residence \u0026lt;= 3:\r:...existing_loans_count \u0026gt; 1: no (4.1/0.9)\rexisting_loans_count \u0026lt;= 1:\r:...years_at_residence \u0026gt; 2: yes (14.1/2.8)\ryears_at_residence \u0026lt;= 2:\r:...amount \u0026lt;= 999: yes (6.8/1.4)\ramount \u0026gt; 999:\r:...age \u0026lt;= 24: yes (10.4/2)\rage \u0026gt; 24: no (18.2/2)\rSubTree [S1]\rpurpose = car: yes (12.4/4.1)\rpurpose in {car0,furniture/appliances}: no (6.9/1)\rEvaluation on training data (900 cases):\rTrial\tDecision Tree -----\t---------------- Size Errors 0\t66 125(13.9%)\r1\t40 205(22.8%)\r2\t46 196(21.8%)\r3\t45 193(21.4%)\r4\t68 163(18.1%)\r5\t62 175(19.4%)\r6\t56 186(20.7%)\r7\t62 188(20.9%)\r8\t66 156(17.3%)\r9\t49 200(22.2%)\rboost\t31( 3.4%) \u0026lt;\u0026lt;\r(a) (b) \u0026lt;-classified as\r---- ----\r626 6 (a): class no\r25 243 (b): class yes\rAttribute usage:\r100.00%\tchecking_balance\r100.00%\tmonths_loan_duration\r100.00%\tamount\r100.00%\temployment_duration\r98.56%\tcredit_history\r97.44%\tsavings_balance\r94.11%\tpurpose\r88.44%\tother_credit\r82.44%\texisting_loans_count\r80.89%\tjob\r75.67%\tage\r71.89%\tpercent_of_income\r71.67%\thousing\r70.78%\tdependents\r69.33%\tyears_at_residence\r49.56%\tphone\rTime: 0.0 secs\r \r  'use strict'; var containerId = JSON.parse(\"\\\"ed5e34bcab38e1af\\\"\"); var containerElem = document.getElementById(containerId); var codetabLinks = null; var codetabContents = null; var ids = []; if (containerElem) { codetabLinks = containerElem.querySelectorAll('.codetab__link'); codetabContents = containerElem.querySelectorAll('.codetab__content'); } for (var i = 0; i 0) { codetabContents[0].style.display = 'block'; }  在900个训练案例中，该分类犯了31个错误，错误率为3.4%。加入boosting算法之前，训练案例的错误率为13.9%。这是很大的提高。\n1 2 3  credit_boost_pred10 \u0026lt;- predict(credit_boost10, credit_test) CrossTable(credit_test$default, credit_boost_pred10, prop.chisq = FALSE, prop.c = FALSE, prop.r = FALSE, dnn = c(\u0026#39;actual default\u0026#39;, \u0026#39;predicted default\u0026#39;))   Cell Contents\r|-------------------------|\r| N |\r| N / Table Total |\r|-------------------------|\rTotal Observations in Table: 100 | predicted default actual default | no | yes | Row Total | ---------------|-----------|-----------|-----------|\rno | 60 | 8 | 68 | | 0.600 | 0.080 | | ---------------|-----------|-----------|-----------|\ryes | 15 | 17 | 32 | | 0.150 | 0.170 | | ---------------|-----------|-----------|-----------|\rColumn Total | 75 | 25 | 100 | ---------------|-----------|-----------|-----------|\r犯一些比其他错误更严重的错误 给一个很有可能违约的申请者一笔贷款是一种很严重的错误。一种减少错误地否定申请者数量的方法是拒绝大量处于边界线的申请者。为了防止一棵决策树犯更严重的错误，C5.0算法允许我们将一个惩罚因子分配到不同类型的错误上。这些惩罚因子设定在一个代价矩阵中，用来指定每种错误相对于其他任何错误有多少倍的严重性。假设我们认为一个贷款违约者使银行损失了四倍，不亚于一个错失的机遇，则代价矩阵可以定义为：\nR Output  1 2 3 4 5  error_cost \u0026lt;- matrix(c(0, 1, 4, 0), nrow = 2) error_cost_view \u0026lt;- error_cost colnames(error_cost_view) \u0026lt;- c(\u0026#39;real no\u0026#39;, \u0026#39;real yes\u0026#39;) rownames(error_cost_view) \u0026lt;- c(\u0026#39;predict no\u0026#39;, \u0026#39;predict yes\u0026#39;) error_cost_view    \rA matrix: 2 × 2 of type dbl\r\rreal noreal yes\r\r\rpredict no04\rpredict yes10\r\r\r\r  'use strict'; var containerId = JSON.parse(\"\\\"1215bd4368af4717\\\"\"); var containerElem = document.getElementById(containerId); var tabLinks = null; var tabContents = null; var ids = []; if (containerElem) { tabLinks = containerElem.querySelectorAll('.tab__link'); tabContents = containerElem.querySelectorAll('.tab__content'); } for (var i = 0; i 0) { tabContents[0].style.display = 'block'; }  当该算法正确地将一个案例分类为no或者yes时，此时没有分配代价，相对于代价为1的肯定错误(false positive)的案例，否定错误(false negtive)的案例的代价为4。\n1 2 3 4  credit_cost \u0026lt;- C5.0(credit_train[-17], credit_train$default, costs = error_cost) credit_cost_pred \u0026lt;- predict(credit_cost, credit_test) CrossTable(credit_test$default, credit_cost_pred, prop.chisq = FALSE, prop.c = FALSE, prop.r = FALSE, dnn = c(\u0026#39;actual default\u0026#39;, \u0026#39;predicted default\u0026#39;))   Cell Contents\r|-------------------------|\r| N |\r| N / Table Total |\r|-------------------------|\rTotal Observations in Table: 100 | predicted default actual default | no | yes | Row Total | ---------------|-----------|-----------|-----------|\rno | 42 | 26 | 68 | | 0.420 | 0.260 | | ---------------|-----------|-----------|-----------|\ryes | 6 | 26 | 32 | | 0.060 | 0.260 | | ---------------|-----------|-----------|-----------|\rColumn Total | 48 | 52 | 100 | ---------------|-----------|-----------|-----------|\r规则学习识别有毒蘑菇 理解规则分类 规则学习经常以一种类似于决策树的方式被使用。与决策树不同的是，决策树必须从上至下地应用，而规则是单独存在的事实。根据相同数据建立的模型，规则学习的结果往往比决策树的结果更简洁、更直接、更容易理解。决策树会给任务带来一组特定的偏差，而规则学习可以通过直接识别规则而避免偏差。决策树中每个决策节点是会受到过去决策历史的影响。而规则学习不存在这样的沿袭，一旦规则学习算法分离出一组案例，下一组案例可能会根据完全不同的特征，以完全不同的顺序分离出来。\n单规则（1R）算法  Zero R：对于一个未标记的案例，不用考虑它的特征值就会把它预测为最常见的类。 单规则算法（1R）:通过选择一个单一的规则来提高Zero算法的性能。对于每一个特征，基于相似的特征值1R对数据分组。然后，对每一个数据分组，改算法的预测类为占多数的类。规则错误率的计算基于每一个特征值，犯最少错误的规则选为唯一的规则。  重复增量修剪（RIPPER）算法 针对早期规划学习算法存在速度慢和对噪声数据不准确的问题，RIPPER算法主要通过生长、修剪和优化三个过程提高模型的性能。\n来自决策树的规则 使用决策树生成规则的主要缺点时由此产生的规则通常比那些由决策规则学习算法学到的规则更复杂。\n数据处理 数据集是23个带有菌褶的蘑菇品种的8124个蘑菇案例信息。每种蘑菇被鉴定为“肯定可以使用”、“肯定是有毒的”和“可能有毒，不建议使用”、将最后一类和“肯定是有毒的”一类合并到起义，从而最终由两个分类：有毒和无毒。每个蘑菇案例包含蘑菇帽的形状、蘑菇帽的颜色、蘑菇的气味、菌褶的大小和颜色、茎的形状和生存的环境等22个特征。\n22个特征和目标类都是名义变量，进行因子转换。\n1 2 3  mushrooms \u0026lt;- read.csv(\u0026#34;G:/R/Machine Learning With R/data/Chapter 05/mushrooms.csv\u0026#34;, stringsAsFactors = TRUE) str(mushrooms)   'data.frame':\t8124 obs. of 23 variables:\r$ type : Factor w/ 2 levels \u0026quot;edible\u0026quot;,\u0026quot;poisonous\u0026quot;: 2 1 1 2 1 1 1 1 2 1 ...\r$ cap_shape : Factor w/ 6 levels \u0026quot;bell\u0026quot;,\u0026quot;conical\u0026quot;,..: 3 3 1 3 3 3 1 1 3 1 ...\r$ cap_surface : Factor w/ 4 levels \u0026quot;fibrous\u0026quot;,\u0026quot;grooves\u0026quot;,..: 4 4 4 3 4 3 4 3 3 4 ...\r$ cap_color : Factor w/ 10 levels \u0026quot;brown\u0026quot;,\u0026quot;buff\u0026quot;,..: 1 10 9 9 4 10 9 9 9 10 ...\r$ bruises : Factor w/ 2 levels \u0026quot;no\u0026quot;,\u0026quot;yes\u0026quot;: 2 2 2 2 1 2 2 2 2 2 ...\r$ odor : Factor w/ 9 levels \u0026quot;almond\u0026quot;,\u0026quot;anise\u0026quot;,..: 8 1 2 8 7 1 1 2 8 1 ...\r$ gill_attachment : Factor w/ 2 levels \u0026quot;attached\u0026quot;,\u0026quot;free\u0026quot;: 2 2 2 2 2 2 2 2 2 2 ...\r$ gill_spacing : Factor w/ 2 levels \u0026quot;close\u0026quot;,\u0026quot;crowded\u0026quot;: 1 1 1 1 2 1 1 1 1 1 ...\r$ gill_size : Factor w/ 2 levels \u0026quot;broad\u0026quot;,\u0026quot;narrow\u0026quot;: 2 1 1 2 1 1 1 1 2 1 ...\r$ gill_color : Factor w/ 12 levels \u0026quot;black\u0026quot;,\u0026quot;brown\u0026quot;,..: 1 1 2 2 1 2 5 2 8 5 ...\r$ stalk_shape : Factor w/ 2 levels \u0026quot;enlarging\u0026quot;,\u0026quot;tapering\u0026quot;: 1 1 1 1 2 1 1 1 1 1 ...\r$ stalk_root : Factor w/ 5 levels \u0026quot;bulbous\u0026quot;,\u0026quot;club\u0026quot;,..: 3 2 2 3 3 2 2 2 3 2 ...\r$ stalk_surface_above_ring: Factor w/ 4 levels \u0026quot;fibrous\u0026quot;,\u0026quot;scaly\u0026quot;,..: 4 4 4 4 4 4 4 4 4 4 ...\r$ stalk_surface_below_ring: Factor w/ 4 levels \u0026quot;fibrous\u0026quot;,\u0026quot;scaly\u0026quot;,..: 4 4 4 4 4 4 4 4 4 4 ...\r$ stalk_color_above_ring : Factor w/ 9 levels \u0026quot;brown\u0026quot;,\u0026quot;buff\u0026quot;,..: 8 8 8 8 8 8 8 8 8 8 ...\r$ stalk_color_below_ring : Factor w/ 9 levels \u0026quot;brown\u0026quot;,\u0026quot;buff\u0026quot;,..: 8 8 8 8 8 8 8 8 8 8 ...\r$ veil_type : Factor w/ 1 level \u0026quot;partial\u0026quot;: 1 1 1 1 1 1 1 1 1 1 ...\r$ veil_color : Factor w/ 4 levels \u0026quot;brown\u0026quot;,\u0026quot;orange\u0026quot;,..: 3 3 3 3 3 3 3 3 3 3 ...\r$ ring_number : Factor w/ 3 levels \u0026quot;none\u0026quot;,\u0026quot;one\u0026quot;,\u0026quot;two\u0026quot;: 2 2 2 2 2 2 2 2 2 2 ...\r$ ring_type : Factor w/ 5 levels \u0026quot;evanescent\u0026quot;,\u0026quot;flaring\u0026quot;,..: 5 5 5 5 1 5 5 5 5 5 ...\r$ spore_print_color : Factor w/ 9 levels \u0026quot;black\u0026quot;,\u0026quot;brown\u0026quot;,..: 1 2 2 1 2 1 1 2 1 1 ...\r$ population : Factor w/ 6 levels \u0026quot;abundant\u0026quot;,\u0026quot;clustered\u0026quot;,..: 4 3 3 4 1 3 3 4 5 4 ...\r$ habitat : Factor w/ 7 levels \u0026quot;grasses\u0026quot;,\u0026quot;leaves\u0026quot;,..: 5 1 3 5 1 1 3 3 1 3 ...\r注意到veil_type可能是编码错误，只有一个水平值，不能为预测提供任何有用的信息，将其删除：\n1 2  mushrooms$veil_type \u0026lt;- NULL table(mushrooms$type)   edible poisonous 4208 3916 这里不需要担心数据不平衡（分则分类在预测少数类时会有困难）。\n模型训练 应用1R分类器，它能够识别对于目标类最具有预测性的单一特征，并利用该特征构建一个规则集。\n1 2 3 4 5  Sys.setenv(JAVA_HOME=\u0026#39;D:\\\\Program Files\\\\Java\\\\jdk1.8.0_191\\\\jre\u0026#39;) library(RWeka) mushroom_1R \u0026lt;- OneR(type ~ ., data = mushrooms) mushroom_1R   odor:\ralmond\t-\u0026gt; edible\ranise\t-\u0026gt; edible\rcreosote\t-\u0026gt; poisonous\rfishy\t-\u0026gt; poisonous\rfoul\t-\u0026gt; poisonous\rmusty\t-\u0026gt; poisonous\rnone\t-\u0026gt; edible\rpungent\t-\u0026gt; poisonous\rspicy\t-\u0026gt; poisonous\r(8004/8124 instances correct)\r特征odor(气味)被选择为规则生成。特征odor的类别，比如almond(杏仁味)、anise(茴香味)等，注明蘑菇是否是可使用的或者是有毒的规则。例如，如果蘑菇闻起来fishy(腥味)、foul(臭味)、musty(霉味)、pungent(刺鼻)、spicy(辛辣)或者像creosote(木焦油)，那么蘑菇很可能是有毒的。另一方面，更加令人愉悦的气味，像almond(杏仁味)、anise(茴香味)（或者none，根本没有气味），则表明是可食用的蘑菇。对于蘑菇采集的实用指南，这些规则可能归纳在一个单一的简单经验规则（大拇指规则）里：“如果蘑菇闻起来不好吃，那么它很有可能是有毒的”。\n性能评估 输出表明该规则正确地指定了8124个蘑菇案例中的8004个案例，正确率接近99%。\n1  summary(mushroom_1R)   === Summary ===\rCorrectly Classified Instances 8004 98.5229 %\rIncorrectly Classified Instances 120 1.4771 %\rKappa statistic 0.9704\rMean absolute error 0.0148\rRoot mean squared error 0.1215\rRelative absolute error 2.958 %\rRoot relative squared error 24.323 %\rTotal Number of Instances 8124 === Confusion Matrix ===\ra b \u0026lt;-- classified as\r4208 0 | a = edible\r120 3796 | b = poisonous\r混淆矩阵中列表示蘑菇的真实类别，行表示预测值，表中120中蘑菇实际上是可使用的，但被归类为了有毒的，且没有有毒的蘑菇被归类为可食用的。\n性能提升 对于更复杂的规则学习算法，实用JRip()函数，一个基于Java实现的RIPPER规则学习算法。\n1 2  mushroom_JRip \u0026lt;- JRip(type ~ ., data = mushrooms) mushroom_JRip   JRIP rules:\r===========\r(odor = foul) =\u0026gt; type=poisonous (2160.0/0.0)\r(gill_size = narrow) and (gill_color = buff) =\u0026gt; type=poisonous (1152.0/0.0)\r(gill_size = narrow) and (odor = pungent) =\u0026gt; type=poisonous (256.0/0.0)\r(odor = creosote) =\u0026gt; type=poisonous (192.0/0.0)\r(spore_print_color = green) =\u0026gt; type=poisonous (72.0/0.0)\r(stalk_surface_below_ring = scaly) and (stalk_surface_above_ring = silky) =\u0026gt; type=poisonous (68.0/0.0)\r(habitat = leaves) and (cap_color = white) =\u0026gt; type=poisonous (8.0/0.0)\r(stalk_color_above_ring = yellow) =\u0026gt; type=poisonous (8.0/0.0)\r=\u0026gt; type=edible (4208.0/0.0)\rNumber of Rules : 9\rJRip()分类器从mushroom数据中学习了9条规则。理解这些规则的一种简单方法就是把它们当做类似于编程中if-else语句的一个列表。前三条规则可以这样表达：\n 如果气味是臭的，那么该蘑菇类是有毒的。 如果菌褶的尺寸狭小而且菌褶的颜色是浅黄色的，那么该蘑菇类是有毒的。 如果菌褶的尺寸狭小而且气味是刺鼻的，那么该蘑菇类是有毒的。  最后，第9条规则表示不属于上述8条规则的任何蘑菇案例都是可使用的。每个规则后面的数字表示被规则覆盖的案例数和被错误分类的案例数。值得注意的是，食用这9个规则就没有错误分类的蘑菇案例。因此，被最后一个规则覆盖的案例数正好等于数据中可食用的蘑菇数量(N=4208)。\n线性回归预测医疗费用 理解回归 简单线性回归和多元回归模型都假设因变量是连续的；逻辑回归可以用来对二元分类的结果建模；泊松回归可以用来对整型的计数数据建模。\n简单线性回归的截距项：$$b=\\frac{Cov(x,y)}{Var(x)}$$\nPearson相关系数：$$\\rho_{x,y}=Corr(x,y)=\\frac{Cov(x,y)}{\\sigma_x\\sigma_y}$$\n通常，相关性必须根据必须根据上下文解释，对于涉及人类的数据，0.5的相关性可能认为是非常强的；对于机械过程产生的数据，0.5的相关性可能认为是弱的。\n多元线性回归方程：$$\\mathbf Y=\\mathbf X \\mathbf \\beta + \\epsilon$$\n因变量$\\mathbf Y$是一个向量，一行比松hi一个案例；自变量被表示成一个矩阵$\\mathbf X$，一列表示一个特征，再加上额外的一列用来表示截距项的值全为“1”的列。同样，回归系数$\\mathbf \\beta$和误差$\\epsilon$都是向量。\n $\\mathbf \\beta$的估计：$$\\hat{\\mathbf \\beta}=\\mathbf{(X^TX)^{-1}X^TY}$$  数据处理 数据包含1338个案例，即目前已经登记过的保险计划受益者以及表示病人特点和历年计划计入的总的医疗费用的特征。这些特征是：\n age：这是一个整数，表示主要受益者的年龄(不包括超过64岁的人，因为他们一般由政府支付)。 sex：这是保单持有人的性别，要么是male,要么是female。 bmi：这是身体质量指数(Body Mass Index, BMI)它提供了一个判断人的体重相对于身高是过重还是偏轻的方法，BMI指数等于体重(公斤)除以身高(米)的平方。一个理想的BMI指数在18.5 ~ 24.9的范围内。 children：这是一个整数，表示保险计划中所包括的孩子/受抚养者的数量。\n-smoker：根据被保险人是否吸烟判断yes或者no。\n-region：根据受益人在美国的居住地，分为4个地理区域：northeast、southeast、southwest、northwest。  1 2 3  insurance \u0026lt;- read.csv(\u0026#34;G:/R/Machine Learning With R/data/Chapter 06/insurance.csv\u0026#34;, stringsAsFactors = TRUE) str(insurance)   'data.frame':\t1338 obs. of 7 variables:\r$ age : int 19 18 28 33 32 31 46 37 37 60 ...\r$ sex : Factor w/ 2 levels \u0026quot;female\u0026quot;,\u0026quot;male\u0026quot;: 1 2 2 2 2 1 1 1 2 1 ...\r$ bmi : num 27.9 33.8 33 22.7 28.9 25.7 33.4 27.7 29.8 25.8 ...\r$ children: int 0 1 3 0 0 0 1 3 2 0 ...\r$ smoker : Factor w/ 2 levels \u0026quot;no\u0026quot;,\u0026quot;yes\u0026quot;: 2 1 1 1 1 1 1 1 1 1 ...\r$ region : Factor w/ 4 levels \u0026quot;northeast\u0026quot;,\u0026quot;northwest\u0026quot;,..: 4 3 3 2 2 3 3 2 1 2 ...\r$ expenses: num 16885 1726 4449 21984 3867 ...\r数据框中有3个因子类型的特征。查看因变量的分布，因为均值大于中位数，所以右偏，非正态分布。\n1 2  summary(insurance$expenses) hist(insurance$expenses)   Min. 1st Qu. Median Mean 3rd Qu. Max. 1122 4740 9382 13270 16640 63770 相关系数矩阵 在使用回归模型拟合数据之前，有必要确定自变量与因变量之间以及自变量之间是如何相关的。对4个数值型变量创建相关系数矩阵：\n1  cor(insurance[c(\u0026#39;age\u0026#39;, \u0026#39;bmi\u0026#39;, \u0026#39;children\u0026#39;, \u0026#39;expenses\u0026#39;)])   A matrix: 4 × 4 of type dbl\r\ragebmichildrenexpenses\r\r\rage1.00000000.109341010.042469000.29900819\rbmi0.10934101.000000000.012644710.19857626\rchildren0.04246900.012644711.000000000.06799823\rexpenses0.29900820.198576260.067998231.00000000\r\r\r散点图矩阵 1  pairs(insurance[c(\u0026#39;age\u0026#39;, \u0026#39;bmi\u0026#39;, \u0026#39;children\u0026#39;, \u0026#39;expenses\u0026#39;)])   age和expenses之间的关系呈现出几条相对的直线，而bmi和expense的散点构成了两个不同的群体。下面使用psych包中的pairs.panels()函数创建散点图矩阵：\n1 2 3  # install.packages(\u0026#34;psych\u0026#34;) library(psych) pairs.panels(insurance[c(\u0026#39;age\u0026#39;, \u0026#39;bmi\u0026#39;, \u0026#39;children\u0026#39;, \u0026#39;expenses\u0026#39;)])   在对角线的上方，散点图被相关关系矩阵所取代，在对角线上，直方图描绘了每个特征的数值分布。最后，对角线下方的散点图带有额外的可视化信息。每个散点图中呈椭圆形的对象称为相关椭圆(correlation ellipse)，它提供了一种变量之间是如何密切相关的可视化信息。位于椭圆中心的点表示x轴变量的均值和y轴变量均值所确定的点。两个变量之间的相关性由椭圆的形状来表示，椭圆越被拉伸，其相关性越强。一个几乎类似于圆的完美的椭圆形，如bmi和children，表示一种非常弱的相关性(在这种情况下相关系数为0.01)。\n散点图中绘制的曲线称为局部回归平滑(loess smooth),它表示x轴和y轴变量之间的一般关系。最好通过例子来理解。散点图中age和children的曲线是一个倒置的U,峰值在中年附近，这意味着案例中年龄最大的人和年龄最小的人比年龄大约在中年人附近的人拥有的孩子要少。因为这种趋势是非线性的，所以这一发现已经不能单独从相关性推断出来。另一方面，对于age和bmi，局部回归光滑是一条倾斜的逐渐上升的线，这表明BMI会随着年龄(age)的增长而增加。其实已经从相关系数矩阵中推断出该结论。\n模型训练 默认截距项存在。\n1 2  ins_model \u0026lt;- lm(expenses ~ ., data = insurance) ins_model   Call:\rlm(formula = expenses ~ ., data = insurance)\rCoefficients:\r(Intercept) age sexmale bmi -11941.6 256.8 -131.4 339.3 children smokeryes regionnorthwest regionsoutheast 475.7 23847.5 -352.8 -1035.6 regionsouthwest -959.3 lm()函数自动将dummy coding的技术应用于模型所包含的每一个因子类型的变量中。它允许名义特征通过为一个特征的每一类创建一个二元变量来将其处理成数值型变量，即如果观测值属于某一类，那就设定为1，否则设定为0。\n当添加一个虚拟编码的变量到回归模型中时，一个类别总是被排除在外作为参照类别。然后，估计的系数就是相对于参照类别解释的。在我们的模型中，R自动保留sexfemale、smokerno和regionnortheast变量，使东北地区的女性非吸烟者作为参照组。因此，相对于女性来说，男性每年的医疗费用要少131.4美元；吸烟者平均多话23847.5美元，远远超过非吸烟者。此外，模型中另外3个地区的系数是负的，这意味着东北地区倾向于具有最高的平均医疗费用。\n默认R中使用factor(因子)变量的第一个水平作为参照组。如果想使用另一类(水平)，可使用relevel()函数来手动指定参照组。\n性能评估 1  summary(ins_model)   Call:\rlm(formula = expenses ~ ., data = insurance)\rResiduals:\rMin 1Q Median 3Q Max -11302.7 -2850.9 -979.6 1383.9 29981.7 Coefficients:\rEstimate Std. Error t value Pr(\u0026gt;|t|) (Intercept) -11941.6 987.8 -12.089 \u0026lt; 2e-16 ***\rage 256.8 11.9 21.586 \u0026lt; 2e-16 ***\rsexmale -131.3 332.9 -0.395 0.693255 bmi 339.3 28.6 11.864 \u0026lt; 2e-16 ***\rchildren 475.7 137.8 3.452 0.000574 ***\rsmokeryes 23847.5 413.1 57.723 \u0026lt; 2e-16 ***\rregionnorthwest -352.8 476.3 -0.741 0.458976 regionsoutheast -1035.6 478.7 -2.163 0.030685 * regionsouthwest -959.3 477.9 -2.007 0.044921 * ---\rSignif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\rResidual standard error: 6062 on 1329 degrees of freedom\rMultiple R-squared: 0.7509,\tAdjusted R-squared: 0.7494 F-statistic: 500.9 on 8 and 1329 DF, p-value: \u0026lt; 2.2e-16\rR方值为0.7509，所以我们知道，近75%的因变量变化程度可以由模型解释。因为模型的特征越多，模型解释变化的程度就越大，所以调整的R方值通过惩罚具有很多自变量的模型来修正R方值，用它来比较具有不同数目的解释变量的模型的性能是很有用的。\n性能提升 添加非线性关系 考虑到非线性关系，可以添加一个高阶项到回归模型中，把模型当做多项式处理。\n1  insurance$age2 \u0026lt;- insurance$age^2   二进制指标转换 如果一个特征的影响不是累计的，而是当特征的取值达到一个给定的阈值之后才产生影响，可以对数值型变量进行离散化。\n1  insurance$bmi30 \u0026lt;- ifelse(insurance$bmi \u0026gt;=30, 1, 0)   加入相互作用的影响 当两个特征存在共同的影响时，称为相互作用。\n1 2  # 等价写法：expenses ~ bmi30 + smokeryes + bmi30:smokeryes expenses ~ bmi30*smoker   改进的回归模型 1 2 3  ins_model2 \u0026lt;- lm(expenses ~ age + age2 + children + bmi + sex + bmi30*smoker + region, data = insurance) summary(ins_model2)   Call:\rlm(formula = expenses ~ age + age2 + children + bmi + sex + bmi30 * smoker + region, data = insurance)\rResiduals:\rMin 1Q Median 3Q Max -17297.1 -1656.0 -1262.7 -727.8 24161.6 Coefficients:\rEstimate Std. Error t value Pr(\u0026gt;|t|) (Intercept) 139.0053 1363.1359 0.102 0.918792 age -32.6181 59.8250 -0.545 0.585690 age2 3.7307 0.7463 4.999 6.54e-07 ***\rchildren 678.6017 105.8855 6.409 2.03e-10 ***\rbmi 119.7715 34.2796 3.494 0.000492 ***\rsexmale -496.7690 244.3713 -2.033 0.042267 * bmi30 -997.9355 422.9607 -2.359 0.018449 * smokeryes 13404.5952 439.9591 30.468 \u0026lt; 2e-16 ***\rregionnorthwest -279.1661 349.2826 -0.799 0.424285 regionsoutheast -828.0345 351.6484 -2.355 0.018682 * regionsouthwest -1222.1619 350.5314 -3.487 0.000505 ***\rbmi30:smokeryes 19810.1534 604.6769 32.762 \u0026lt; 2e-16 ***\r---\rSignif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\rResidual standard error: 4445 on 1326 degrees of freedom\rMultiple R-squared: 0.8664,\tAdjusted R-squared: 0.8653 F-statistic: 781.7 on 11 and 1326 DF, p-value: \u0026lt; 2.2e-16\r相对第一个模型，R方值从0.75提高到了0.87，模型现在能解释医疗费用变化的87%。此外，关于模型函数形式的理论似乎得到了验证，高阶项age2在统计上是显著的，肥胖指标bmi30也是显著的。肥胖和吸烟之间的相互作用表明了一个巨大的影响，除了单独吸烟增加的超过13404美元的费用外，肥胖的吸烟者每年要另花费19810美元，这可能表明吸烟会加剧(恶化)与肥胖有关的疾病。\n回归树和模型树估计葡萄酒质量 决策树用于数值预测可分为两类。第一类称为回归树(regression tree)，回归树并没有使用线性回归的方法，而是基于到达叶节点的案例的平均值做出预测。第二类决策树称为模型树(model trees)，模型树和回归树以大致相同的方式生长，但是在每个叶节点根据到达该节点的案例建立多元线性回归模型。根据叶节点的数目，一棵模型树可能会建立几十甚至上百个这样的模型，这可能会使模型树比同等的回归树更难理解，但好处是它们也许能建立一个更加精确的模型。\n将回归加入到决策树 在某些情况下，数值决策树提供了明显的优势。例如，决策树可能更适合于具有许多特征和结果之间具有许多复杂、非线性关系的任务，这些情景给回归带来了挑战。而且，回归建模关于数值型数据是如何分布的假设往往被现实世界的数据所违背，但决策树就不存在这样的情况。\n在分类决策树中，一致性(均匀性)是由熵值来度量的，而对于数值型数据是未定义的。于是，对于数值决策树，一致性(均匀性)可以通过统计量来度量(比如方差、标准差或者是平均绝对偏差)来度量。根据所使用的决策树生长算法，一致性(均匀性)度量可能会有所不同，但基本原理是相同的。\n一个常见的分割标准称为标准偏差减少(Standard Deviation Reduction, SDR)，它由下面的公式定义：$$SDR=sd(T)-\\sum_i{\\frac{|T_i|}{|T|}} \\times sd(T_i)$$\n在这个公式中，函数$sd(T)$指的是集合$T$中的值的标准差，而$T_i,T_2,\\cdots,T_n$是由对于一个特征的一次分割产生的值的合集；$|T|$项指的是集合$T$中观测值的数量。从本质上讲，公式度量的是从原始值的标准差减去分割后加权的标准差的减少量。下例，决策树计算SDR决定对二元特征A进行分割还时对二元特征B进行分割\n                       原始数据 1 1 1 2 2 3 4 5 5 6 6 7 7 7 7   根据特征A划分 1 1 1 2 2 3 4 5 5 $ $6 6 7 7 7   根据特征B划分 1 1 1 2 2 3 4 $ $5 5 6 6 7 7 7       T_1        T_2       1 2 3 4 5 6 7 8 9 10 11  tee \u0026lt;- c(1, 1, 1, 2, 2, 3, 4, 5, 5, 6, 6, 7, 7, 7, 7) at1 \u0026lt;- c(1, 1, 1, 2, 2, 3, 4, 5, 5) at2 \u0026lt;- c(6, 6, 7, 7, 7, 7) bt1 \u0026lt;- c(1, 1, 1, 2, 2, 3, 4) bt2 \u0026lt;- c(5, 5, 6, 6, 7, 7, 7, 7) sdr_a \u0026lt;- sd(tee) - (length(at1) / length(tee) * sd(at1) + length(at2) / length(tee) * sd(at2)) sdr_b \u0026lt;- sd(tee) - (length(bt1) / length(tee) * sd(bt1) + length(bt2) / length(tee) * sd(bt2)) sdr_a sdr_b   1.20281456809792\r1.39275139353039\r对特征B，标准差减少地更多，所以决策树首先使用特征B，它产生了比特征A略多的一致性(均匀性)集合。假设决策树在这里停止生长，只使用了这一个分割，那么回归树的工作就完成了。它可以为新的案例进行预测，取决于它们是落入组T1还是组T2。如果案例最后在T1中，那么模型将预测mean(bt1)=2，否则将预测mean(bt2)=6.25。\n相比之下，模型树将多走一步。使用落入bt1的7个训练案例和落入bt2的8个训练案例，模型树可以建立一个结果相对于特征A的线性回归模型(在回归模型中，特征B没有任何帮助，因为所有位于叶节点的个案与B有相同值)。然后，模型树可以使用两个线性模型中的任何一个为新的案例做出预测。\n数据处理 白葡萄酒数据包含了4898个葡萄酒案例的11种化学特性信息。对于每种葡萄酒，实验室分析测量的特性包括酸性、含糖量、氯化物含量、硫的含量、酒精度、pH值和密度。然后，这些样本会由不少于3名坚定者组成的小组以盲品的方式进行评级，质量尺度从0（很差）到10（极好）。如果鉴定者对于评级没有达成一致意见，那么就会使用中间值。\n由于特征都是数值型的，可忽略stringAsFactor参数。葡萄酒的11个特征和品质(quality)如下：\n1 2  wine \u0026lt;- read.csv(\u0026#34;G:/R/Machine Learning With R/data/Chapter 06/whitewines.csv\u0026#34;) str(wine)   'data.frame':\t4898 obs. of 12 variables:\r$ fixed.acidity : num 6.7 5.7 5.9 5.3 6.4 7 7.9 6.6 7 6.5 ...\r$ volatile.acidity : num 0.62 0.22 0.19 0.47 0.29 0.14 0.12 0.38 0.16 0.37 ...\r$ citric.acid : num 0.24 0.2 0.26 0.1 0.21 0.41 0.49 0.28 0.3 0.33 ...\r$ residual.sugar : num 1.1 16 7.4 1.3 9.65 0.9 5.2 2.8 2.6 3.9 ...\r$ chlorides : num 0.039 0.044 0.034 0.036 0.041 0.037 0.049 0.043 0.043 0.027 ...\r$ free.sulfur.dioxide : num 6 41 33 11 36 22 33 17 34 40 ...\r$ total.sulfur.dioxide: num 62 113 123 74 119 95 152 67 90 130 ...\r$ density : num 0.993 0.999 0.995 0.991 0.993 ...\r$ pH : num 3.41 3.22 3.49 3.48 2.99 3.25 3.18 3.21 2.88 3.28 ...\r$ sulphates : num 0.32 0.46 0.42 0.54 0.34 0.43 0.47 0.47 0.47 0.39 ...\r$ alcohol : num 10.4 8.9 10.1 11.2 10.9 ...\r$ quality : int 5 6 6 4 6 6 6 6 6 7 ...\r\r相关系数矩阵：\r1 2 3 4  # install.packages(\u0026#39;corrplot\u0026#39;) library(corrplot) corr \u0026lt;- cor(wine) corrplot(corr = corr, order =\u0026#39;AOE\u0026#39;)   决策树的优点之一就是它们可以处理多种类型的数据而无需将特征规范化或者标准化。查看葡萄酒质量分布：\n1  hist(wine$quality)   葡萄酒的质量值似乎遵循一个相当于正态的钟型分布，大约以数值6为中心。从直观上看这是有意义的，因为大部分葡萄酒的质量为平均质量，少数葡萄酒特别差或者特别好。由于wine(葡萄酒)数据已经处理成随机的顺序，所以可以将数据分割成两个连续行的集合，这里用75%的数据集用于训练，25%的数据集用于测试：\n1 2  wine_train \u0026lt;- wine[1:3750,] wine_test \u0026lt;- wine[3751:4898,]   模型训练 rpart(递归划分)添加包中提供CART(分类回归树)的实现。\n1 2 3 4  # install.packages(\u0026#34;rpart\u0026#34;) library(rpart) m.rpart \u0026lt;- rpart(quality ~ ., data = wine_train) m.rpart   n= 3750 node), split, n, deviance, yval\r* denotes terminal node\r1) root 3750 2945.53200 5.870933 2) alcohol\u0026lt; 10.85 2372 1418.86100 5.604975 4) volatile.acidity\u0026gt;=0.2275 1611 821.30730 5.432030 8) volatile.acidity\u0026gt;=0.3025 688 278.97670 5.255814 *\r9) volatile.acidity\u0026lt; 0.3025 923 505.04230 5.563380 *\r5) volatile.acidity\u0026lt; 0.2275 761 447.36400 5.971091 *\r3) alcohol\u0026gt;=10.85 1378 1070.08200 6.328737 6) free.sulfur.dioxide\u0026lt; 10.5 84 95.55952 5.369048 *\r7) free.sulfur.dioxide\u0026gt;=10.5 1294 892.13600 6.391036 14) alcohol\u0026lt; 11.76667 629 430.11130 6.173291 28) volatile.acidity\u0026gt;=0.465 11 10.72727 4.545455 *\r29) volatile.acidity\u0026lt; 0.465 618 389.71680 6.202265 *\r15) alcohol\u0026gt;=11.76667 665 403.99400 6.596992 *\r所有的3750个案例从根节点开始，其中，有2372个案例alcohol\u0026lt;10.85,1378个案例的alcohol\u0026gt;=10.85。因为alcohol(酒精)是决策树中第一个使用的变量，所以它是葡萄酒质量中唯一最重要的指标。用*表示的节点是终端或者叶节点，这意味着它们会产生预测(这里作为yval列出来)。例如，节点5有一个5.971091的yval。当该决策树用来预测时，对任意一个葡萄酒案例，如果其alcohol\u0026lt;10.85且volatile.acidity\u0026lt;0.2275，那么它的质量将预测为5.97。关于该决策树拟合的更详细的总结，包括每一个节点的均方误差和整体特征重要性的度量，使用summary(m.rpart)命令获得。\n可视化决策树 1 2 3  # install.packages(\u0026#39;rpart.plot\u0026#39;) library(rpart.plot) rpart.plot(m.rpart, digits = 3)#基本决策树图   参数digits控制包含在图形中数字位数，参数fallen.leaves强制叶节点与图的底部保持一致(对齐)，参数type和参数extra影响决策树和节点被标记的方式。\n1  rpart.plot(m.rpart, digits = 4, fallen.leaves = TRUE, type = 4, extra = 101)   性能评估 p \u0026lt;- predict(m, test, type=\u0026quot;vector\u0026quot;)参数type给定返回的预测值的类型，取值为\u0026quot;vector\u0026quot;(预测数值型数据)，或者\u0026quot;class\u0026quot;(预测类别)，或者\u0026quot;prob\u0026quot;(预测类别的概率)该函数的返回值取决于type参数，它是一个含有预测值的向量。\n1 2 3  p.rpart \u0026lt;- predict(m.rpart, wine_test) summary(p.rpart) summary(wine_test$quality)   Min. 1st Qu. Median Mean 3rd Qu. Max. 4.545 5.563 5.971 5.893 6.202 6.597 Min. 1st Qu. Median Mean 3rd Qu. Max. 3.000 5.000 6.000 5.901 6.000 9.000 该模型不能正确识别极端的情形，尤其是最好的和最差的葡萄酒。预测质量(quality)值和真实的质量啊(quality)值之间的相关性提供了一种度量模型性能的简单方法：\n1  cor(p.rpart, wine_test$quality)   0.53695245485698\r相关系数=0.54是可以接受的。然而，相关系数只是度量了预测值与真实值的相关性有多强，不能度量预测值离真实值有多远。\n用平均绝对误差度量性能 平均绝对误差(Mean Absolute Error, MAE)能够度量预测值离真实值有多远。MAE的方程如下，其中$n$表示预测值的数量，$e_i$表示第$i$个预测值的误差。从本质上讲，这个方程得到的\n#是误差绝对值的均值。$$MAE=\\frac{1}{n}\\sum_{i=1}^n|e_i|$$\n1 2 3 4  MAE \u0026lt;- function(actual, predicted){ mean(abs(actual - predicted)) } MAE(p.rpart, wine_test$quality)   0.587265173945366\r就平均而言，这意味着模型的预测值与真实的质量分数之间的差值大约为0.59。基于质量的尺度0-10，这似乎表明我们的模型做得相当好。另一方面，大多数葡萄酒既不是很好也不是很差，质量的分数大约为5-6。因此，根据这个指标，一个什么都没有做而仅仅是预测了均值的分类器可能会做得相当好。训练数据集中的平均质量等级如下所示：\n1 2  mean(wine_train$quality) MAE(mean(wine_train$quality), wine_test$quality)   5.87093333333333\r0.671923809523809\r如果对每一个葡萄酒案例预测的值为5.87，那么将只有大约0.67的平均绝对误差回归树(MAE=0.59)比估算的均值(MAE=0.67)平均更接近于真实的质量分数，但相差不是很大。\n性能提升 模型树可以通过回归模型取代叶节点来改善回归树。这通常会导致比回归树更精确的结果，而回归树在叶节点进行预测时只使用了一个单一的值。目前，模型树中最先进的算法是M5'算法(M5-prime)。\nR Output  1 2 3 4  Sys.setenv(JAVA_HOME=\u0026#39;D:\\\\Program Files\\\\Java\\\\jdk1.8.0_191\\\\jre\u0026#39;) library(RWeka) m.m5p \u0026lt;- M5P(quality ~ ., data = wine_train) m.m5p    \rM5 pruned model tree:\r(using smoothed linear models)\ralcohol \u0026lt;= 10.85 : | volatile.acidity \u0026lt;= 0.237 : | | fixed.acidity \u0026lt;= 6.85 : | | | sulphates \u0026lt;= 0.485 : | | | | fixed.acidity \u0026lt;= 6.55 : | | | | | chlorides \u0026lt;= 0.038 : LM1 (34/79.918%)\r| | | | | chlorides \u0026gt; 0.038 : | | | | | | free.sulfur.dioxide \u0026lt;= 42 : LM2 (65/50.3%)\r| | | | | | free.sulfur.dioxide \u0026gt; 42 : LM3 (53/59.54%)\r| | | | fixed.acidity \u0026gt; 6.55 : | | | | | total.sulfur.dioxide \u0026lt;= 132 : LM4 (38/51.023%)\r| | | | | total.sulfur.dioxide \u0026gt; 132 : | | | | | | total.sulfur.dioxide \u0026lt;= 148.5 : LM5 (16/50.024%)\r| | | | | | total.sulfur.dioxide \u0026gt; 148.5 : LM6 (27/48.375%)\r| | | sulphates \u0026gt; 0.485 : | | | | alcohol \u0026lt;= 10.117 : | | | | | total.sulfur.dioxide \u0026lt;= 124 : | | | | | | pH \u0026lt;= 3.26 : LM7 (19/0%)\r| | | | | | pH \u0026gt; 3.26 : | | | | | | | pH \u0026lt;= 3.295 : LM8 (3/0%)\r| | | | | | | pH \u0026gt; 3.295 : LM9 (11/0%)\r| | | | | total.sulfur.dioxide \u0026gt; 124 : | | | | | | fixed.acidity \u0026lt;= 6.65 : | | | | | | | density \u0026lt;= 0.995 : LM10 (22/41.911%)\r| | | | | | | density \u0026gt; 0.995 : | | | | | | | | residual.sugar \u0026lt;= 13.3 : | | | | | | | | | density \u0026lt;= 0.997 : LM11 (6/28.351%)\r| | | | | | | | | density \u0026gt; 0.997 : LM12 (5/0%)\r| | | | | | | | residual.sugar \u0026gt; 13.3 : LM13 (6/0%)\r| | | | | | fixed.acidity \u0026gt; 6.65 : | | | | | | | free.sulfur.dioxide \u0026lt;= 32 : LM14 (5/0%)\r| | | | | | | free.sulfur.dioxide \u0026gt; 32 : | | | | | | | | residual.sugar \u0026lt;= 11.4 : | | | | | | | | | chlorides \u0026lt;= 0.041 : LM15 (3/0%)\r| | | | | | | | | chlorides \u0026gt; 0.041 : | | | | | | | | | | sulphates \u0026lt;= 0.55 : LM16 (3/0%)\r| | | | | | | | | | sulphates \u0026gt; 0.55 : LM17 (2/0%)\r| | | | | | | | residual.sugar \u0026gt; 11.4 : LM18 (3/0%)\r| | | | alcohol \u0026gt; 10.117 : | | | | | chlorides \u0026lt;= 0.042 : LM19 (34/58.912%)\r| | | | | chlorides \u0026gt; 0.042 : LM20 (51/51.98%)\r| | fixed.acidity \u0026gt; 6.85 : | | | free.sulfur.dioxide \u0026lt;= 24.5 : | | | | chlorides \u0026lt;= 0.037 : LM21 (30/106.707%)\r| | | | chlorides \u0026gt; 0.037 : LM22 (83/75.354%)\r| | | free.sulfur.dioxide \u0026gt; 24.5 : | | | | alcohol \u0026lt;= 9.15 : | | | | | citric.acid \u0026lt;= 0.305 : | | | | | | residual.sugar \u0026lt;= 14.45 : | | | | | | | residual.sugar \u0026lt;= 13.8 : | | | | | | | | chlorides \u0026lt;= 0.052 : LM23 (6/77.537%)\r| | | | | | | | chlorides \u0026gt; 0.052 : LM24 (13/0%)\r| | | | | | | residual.sugar \u0026gt; 13.8 : LM25 (11/0%)\r| | | | | | residual.sugar \u0026gt; 14.45 : LM26 (12/0%)\r| | | | | citric.acid \u0026gt; 0.305 : | | | | | | total.sulfur.dioxide \u0026lt;= 169.5 : | | | | | | | total.sulfur.dioxide \u0026lt;= 161.5 : | | | | | | | | pH \u0026lt;= 3.355 : | | | | | | | | | volatile.acidity \u0026lt;= 0.215 : | | | | | | | | | | free.sulfur.dioxide \u0026lt;= 44 : LM27 (3/53.19%)\r| | | | | | | | | | free.sulfur.dioxide \u0026gt; 44 : LM28 (8/48.858%)\r| | | | | | | | | volatile.acidity \u0026gt; 0.215 : LM29 (3/0%)\r| | | | | | | | pH \u0026gt; 3.355 : LM30 (4/0%)\r| | | | | | | total.sulfur.dioxide \u0026gt; 161.5 : LM31 (6/0%)\r| | | | | | total.sulfur.dioxide \u0026gt; 169.5 : | | | | | | | sulphates \u0026lt;= 0.56 : | | | | | | | | free.sulfur.dioxide \u0026lt;= 48.5 : LM32 (7/0%)\r| | | | | | | | free.sulfur.dioxide \u0026gt; 48.5 : | | | | | | | | | fixed.acidity \u0026lt;= 7.3 : LM33 (5/0%)\r| | | | | | | | | fixed.acidity \u0026gt; 7.3 : LM34 (4/0%)\r| | | | | | | sulphates \u0026gt; 0.56 : LM35 (11/0%)\r| | | | alcohol \u0026gt; 9.15 : | | | | | density \u0026lt;= 0.996 : | | | | | | sulphates \u0026lt;= 0.395 : LM36 (38/85.791%)\r| | | | | | sulphates \u0026gt; 0.395 : | | | | | | | volatile.acidity \u0026lt;= 0.195 : LM37 (66/59.494%)\r| | | | | | | volatile.acidity \u0026gt; 0.195 : LM38 (54/79.956%)\r| | | | | density \u0026gt; 0.996 : | | | | | | residual.sugar \u0026lt;= 14.7 : LM39 (84/45.874%)\r| | | | | | residual.sugar \u0026gt; 14.7 : LM40 (24/62.764%)\r| volatile.acidity \u0026gt; 0.237 : | | alcohol \u0026lt;= 10.15 : | | | volatile.acidity \u0026lt;= 0.302 : | | | | citric.acid \u0026lt;= 0.265 : | | | | | free.sulfur.dioxide \u0026lt;= 25.5 : LM41 (39/41.77%)\r| | | | | free.sulfur.dioxide \u0026gt; 25.5 : | | | | | | total.sulfur.dioxide \u0026lt;= 143.5 : | | | | | | | total.sulfur.dioxide \u0026lt;= 114 : LM42 (8/0%)\r| | | | | | | total.sulfur.dioxide \u0026gt; 114 : | | | | | | | | total.sulfur.dioxide \u0026lt;= 132 : | | | | | | | | | pH \u0026lt;= 3.105 : | | | | | | | | | | citric.acid \u0026lt;= 0.205 : LM43 (2/0%)\r| | | | | | | | | | citric.acid \u0026gt; 0.205 : | | | | | | | | | | | fixed.acidity \u0026lt;= 6.8 : LM44 (2/0%)\r| | | | | | | | | | | fixed.acidity \u0026gt; 6.8 : LM45 (2/0%)\r| | | | | | | | | pH \u0026gt; 3.105 : LM46 (7/0%)\r| | | | | | | | total.sulfur.dioxide \u0026gt; 132 : | | | | | | | | | chlorides \u0026lt;= 0.04 : LM47 (4/0%)\r| | | | | | | | | chlorides \u0026gt; 0.04 : LM48 (9/35.46%)\r| | | | | | total.sulfur.dioxide \u0026gt; 143.5 : LM49 (97/66.41%)\r| | | | citric.acid \u0026gt; 0.265 : | | | | | citric.acid \u0026lt;= 0.395 : | | | | | | residual.sugar \u0026lt;= 12.825 : | | | | | | | sulphates \u0026lt;= 0.475 : LM50 (49/50.397%)\r| | | | | | | sulphates \u0026gt; 0.475 : | | | | | | | | chlorides \u0026lt;= 0.05 : LM51 (59/65.173%)\r| | | | | | | | chlorides \u0026gt; 0.05 : LM52 (25/62.229%)\r| | | | | | residual.sugar \u0026gt; 12.825 : | | | | | | | pH \u0026lt;= 3.185 : | | | | | | | | free.sulfur.dioxide \u0026lt;= 29 : LM53 (11/0%)\r| | | | | | | | free.sulfur.dioxide \u0026gt; 29 : | | | | | | | | | total.sulfur.dioxide \u0026lt;= 179.5 : | | | | | | | | | | fixed.acidity \u0026lt;= 6.75 : LM54 (5/0%)\r| | | | | | | | | | fixed.acidity \u0026gt; 6.75 : LM55 (16/0%)\r| | | | | | | | | total.sulfur.dioxide \u0026gt; 179.5 : | | | | | | | | | | density \u0026lt;= 0.998 : | | | | | | | | | | | fixed.acidity \u0026lt;= 7 : LM56 (2/0%)\r| | | | | | | | | | | fixed.acidity \u0026gt; 7 : LM57 (3/0%)\r| | | | | | | | | | density \u0026gt; 0.998 : LM58 (17/47.23%)\r| | | | | | | pH \u0026gt; 3.185 : | | | | | | | | free.sulfur.dioxide \u0026lt;= 56.5 : | | | | | | | | | residual.sugar \u0026lt;= 17.675 : | | | | | | | | | | free.sulfur.dioxide \u0026lt;= 30.5 : LM59 (5/0%)\r| | | | | | | | | | free.sulfur.dioxide \u0026gt; 30.5 : | | | | | | | | | | | citric.acid \u0026lt;= 0.31 : LM60 (3/0%)\r| | | | | | | | | | | citric.acid \u0026gt; 0.31 : | | | | | | | | | | | | chlorides \u0026lt;= 0.054 : LM61 (5/0%)\r| | | | | | | | | | | | chlorides \u0026gt; 0.054 : LM62 (2/0%)\r| | | | | | | | | residual.sugar \u0026gt; 17.675 : LM63 (5/0%)\r| | | | | | | | free.sulfur.dioxide \u0026gt; 56.5 : LM64 (6/0%)\r| | | | | citric.acid \u0026gt; 0.395 : | | | | | | pH \u0026lt;= 3.205 : | | | | | | | total.sulfur.dioxide \u0026lt;= 172.5 : | | | | | | | | free.sulfur.dioxide \u0026lt;= 29.5 : | | | | | | | | | fixed.acidity \u0026lt;= 9.4 : LM65 (11/0%)\r| | | | | | | | | fixed.acidity \u0026gt; 9.4 : LM66 (3/53.19%)\r| | | | | | | | free.sulfur.dioxide \u0026gt; 29.5 : | | | | | | | | | density \u0026lt;= 0.998 : | | | | | | | | | | sulphates \u0026lt;= 0.415 : LM67 (7/0%)\r| | | | | | | | | | sulphates \u0026gt; 0.415 : | | | | | | | | | | | fixed.acidity \u0026lt;= 7.1 : LM68 (21/42.821%)\r| | | | | | | | | | | fixed.acidity \u0026gt; 7.1 : LM69 (6/42.05%)\r| | | | | | | | | density \u0026gt; 0.998 : LM70 (20/49.357%)\r| | | | | | | total.sulfur.dioxide \u0026gt; 172.5 : | | | | | | | | citric.acid \u0026lt;= 0.505 : | | | | | | | | | citric.acid \u0026lt;= 0.435 : | | | | | | | | | | free.sulfur.dioxide \u0026lt;= 63 : | | | | | | | | | | | total.sulfur.dioxide \u0026lt;= 197 : LM71 (5/0%)\r| | | | | | | | | | | total.sulfur.dioxide \u0026gt; 197 : LM72 (10/32.187%)\r| | | | | | | | | | free.sulfur.dioxide \u0026gt; 63 : LM73 (5/0%)\r| | | | | | | | | citric.acid \u0026gt; 0.435 : | | | | | | | | | | free.sulfur.dioxide \u0026lt;= 59.5 : LM74 (25/0%)\r| | | | | | | | | | free.sulfur.dioxide \u0026gt; 59.5 : | | | | | | | | | | | fixed.acidity \u0026lt;= 6.25 : LM75 (5/0%)\r| | | | | | | | | | | fixed.acidity \u0026gt; 6.25 : | | | | | | | | | | | | citric.acid \u0026lt;= 0.445 : LM76 (4/0%)\r| | | | | | | | | | | | citric.acid \u0026gt; 0.445 : LM77 (5/26.531%)\r| | | | | | | | citric.acid \u0026gt; 0.505 : | | | | | | | | | free.sulfur.dioxide \u0026lt;= 58.5 : | | | | | | | | | | volatile.acidity \u0026lt;= 0.285 : | | | | | | | | | | | free.sulfur.dioxide \u0026lt;= 42.5 : LM78 (3/0%)\r| | | | | | | | | | | free.sulfur.dioxide \u0026gt; 42.5 : | | | | | | | | | | | | citric.acid \u0026lt;= 0.515 : LM79 (3/0%)\r| | | | | | | | | | | | citric.acid \u0026gt; 0.515 : LM80 (4/30.264%)\r| | | | | | | | | | volatile.acidity \u0026gt; 0.285 : LM81 (3/0%)\r| | | | | | | | | free.sulfur.dioxide \u0026gt; 58.5 : LM82 (7/0%)\r| | | | | | pH \u0026gt; 3.205 : LM83 (42/58.71%)\r| | | volatile.acidity \u0026gt; 0.302 : | | | | volatile.acidity \u0026lt;= 0.422 : | | | | | pH \u0026lt;= 3.235 : | | | | | | total.sulfur.dioxide \u0026lt;= 153.5 : | | | | | | | pH \u0026lt;= 3.055 : LM84 (26/21.699%)\r| | | | | | | pH \u0026gt; 3.055 : | | | | | | | | free.sulfur.dioxide \u0026lt;= 34.5 : | | | | | | | | | free.sulfur.dioxide \u0026lt;= 20.5 : | | | | | | | | | | sulphates \u0026lt;= 0.445 : | | | | | | | | | | | density \u0026lt;= 0.993 : LM85 (5/0%)\r| | | | | | | | | | | density \u0026gt; 0.993 : | | | | | | | | | | | | free.sulfur.dioxide \u0026lt;= 14 : LM86 (6/0%)\r| | | | | | | | | | | | free.sulfur.dioxide \u0026gt; 14 : | | | | | | | | | | | | | density \u0026lt;= 0.996 : LM87 (8/48.858%)\r| | | | | | | | | | | | | density \u0026gt; 0.996 : LM88 (3/0%)\r| | | | | | | | | | sulphates \u0026gt; 0.445 : | | | | | | | | | | | pH \u0026lt;= 3.175 : | | | | | | | | | | | | fixed.acidity \u0026lt;= 7.55 : | | | | | | | | | | | | | chlorides \u0026lt;= 0.052 : LM89 (4/0%)\r| | | | | | | | | | | | | chlorides \u0026gt; 0.052 : LM90 (7/29.301%)\r| | | | | | | | | | | | fixed.acidity \u0026gt; 7.55 : LM91 (3/0%)\r| | | | | | | | | | | pH \u0026gt; 3.175 : LM92 (5/31.989%)\r| | | | | | | | | free.sulfur.dioxide \u0026gt; 20.5 : | | | | | | | | | | residual.sugar \u0026lt;= 7.25 : | | | | | | | | | | | volatile.acidity \u0026lt;= 0.315 : LM93 (5/0%)\r| | | | | | | | | | | volatile.acidity \u0026gt; 0.315 : | | | | | | | | | | | | free.sulfur.dioxide \u0026lt;= 29.5 : | | | | | | | | | | | | | sulphates \u0026lt;= 0.47 : LM94 (8/32.572%)\r| | | | | | | | | | | | | sulphates \u0026gt; 0.47 : LM95 (6/0%)\r| | | | | | | | | | | | free.sulfur.dioxide \u0026gt; 29.5 : LM96 (5/0%)\r| | | | | | | | | | residual.sugar \u0026gt; 7.25 : LM97 (15/0%)\r| | | | | | | | free.sulfur.dioxide \u0026gt; 34.5 : LM98 (23/23.01%)\r| | | | | | total.sulfur.dioxide \u0026gt; 153.5 : | | | | | | | citric.acid \u0026lt;= 0.405 : | | | | | | | | volatile.acidity \u0026lt;= 0.345 : LM99 (75/52.518%)\r| | | | | | | | volatile.acidity \u0026gt; 0.345 : | | | | | | | | | pH \u0026lt;= 3.105 : | | | | | | | | | | free.sulfur.dioxide \u0026lt;= 46.5 : LM100 (7/0%)\r| | | | | | | | | | free.sulfur.dioxide \u0026gt; 46.5 : LM101 (7/19.418%)\r| | | | | | | | | pH \u0026gt; 3.105 : LM102 (32/56.306%)\r| | | | | | | citric.acid \u0026gt; 0.405 : | | | | | | | | free.sulfur.dioxide \u0026lt;= 61.5 : | | | | | | | | | citric.acid \u0026lt;= 0.485 : | | | | | | | | | | volatile.acidity \u0026lt;= 0.365 : LM103 (16/0%)\r| | | | | | | | | | volatile.acidity \u0026gt; 0.365 : | | | | | | | | | | | total.sulfur.dioxide \u0026lt;= 179.5 : LM104 (4/0%)\r| | | | | | | | | | | total.sulfur.dioxide \u0026gt; 179.5 : LM105 (2/0%)\r| | | | | | | | | citric.acid \u0026gt; 0.485 : | | | | | | | | | | fixed.acidity \u0026lt;= 7.55 : | | | | | | | | | | | residual.sugar \u0026lt;= 10.85 : LM106 (12/43.907%)\r| | | | | | | | | | | residual.sugar \u0026gt; 10.85 : LM107 (8/0%)\r| | | | | | | | | | fixed.acidity \u0026gt; 7.55 : LM108 (19/38.717%)\r| | | | | | | | free.sulfur.dioxide \u0026gt; 61.5 : | | | | | | | | | alcohol \u0026lt;= 8.75 : LM109 (4/0%)\r| | | | | | | | | alcohol \u0026gt; 8.75 : LM110 (12/0%)\r| | | | | pH \u0026gt; 3.235 : LM111 (97/68.305%)\r| | | | volatile.acidity \u0026gt; 0.422 : LM112 (128/68.354%)\r| | alcohol \u0026gt; 10.15 : | | | free.sulfur.dioxide \u0026lt;= 26.5 : | | | | free.sulfur.dioxide \u0026lt;= 17.5 : | | | | | sulphates \u0026lt;= 0.475 : | | | | | | chlorides \u0026lt;= 0.032 : LM113 (12/0%)\r| | | | | | chlorides \u0026gt; 0.032 : LM114 (33/62.949%)\r| | | | | sulphates \u0026gt; 0.475 : | | | | | | total.sulfur.dioxide \u0026lt;= 90.5 : LM115 (13/83.25%)\r| | | | | | total.sulfur.dioxide \u0026gt; 90.5 : LM116 (13/89.087%)\r| | | | free.sulfur.dioxide \u0026gt; 17.5 : LM117 (80/68.84%)\r| | | free.sulfur.dioxide \u0026gt; 26.5 : | | | | total.sulfur.dioxide \u0026lt;= 161.5 : | | | | | pH \u0026lt;= 3.325 : LM118 (105/73.188%)\r| | | | | pH \u0026gt; 3.325 : | | | | | | density \u0026lt;= 0.994 : | | | | | | | volatile.acidity \u0026lt;= 0.278 : LM119 (8/0%)\r| | | | | | | volatile.acidity \u0026gt; 0.278 : | | | | | | | | residual.sugar \u0026lt;= 2.05 : LM120 (11/36.291%)\r| | | | | | | | residual.sugar \u0026gt; 2.05 : LM121 (5/0%)\r| | | | | | density \u0026gt; 0.994 : | | | | | | | chlorides \u0026lt;= 0.038 : | | | | | | | | alcohol \u0026lt;= 10.45 : LM122 (2/56.416%)\r| | | | | | | | alcohol \u0026gt; 10.45 : LM123 (4/0%)\r| | | | | | | chlorides \u0026gt; 0.038 : LM124 (7/0%)\r| | | | total.sulfur.dioxide \u0026gt; 161.5 : LM125 (77/77.736%)\ralcohol \u0026gt; 10.85 : | alcohol \u0026lt;= 11.767 : | | free.sulfur.dioxide \u0026lt;= 21.5 : | | | free.sulfur.dioxide \u0026lt;= 11.5 : | | | | density \u0026lt;= 0.992 : LM126 (19/84.403%)\r| | | | density \u0026gt; 0.992 : | | | | | fixed.acidity \u0026lt;= 6.85 : LM127 (6/108.029%)\r| | | | | fixed.acidity \u0026gt; 6.85 : LM128 (21/69.935%)\r| | | free.sulfur.dioxide \u0026gt; 11.5 : | | | | volatile.acidity \u0026lt;= 0.195 : LM129 (36/61.98%)\r| | | | volatile.acidity \u0026gt; 0.195 : | | | | | chlorides \u0026lt;= 0.036 : LM130 (34/115.199%)\r| | | | | chlorides \u0026gt; 0.036 : LM131 (59/78.207%)\r| | free.sulfur.dioxide \u0026gt; 21.5 : | | | fixed.acidity \u0026lt;= 7.35 : | | | | citric.acid \u0026lt;= 0.265 : LM132 (82/61.849%)\r| | | | citric.acid \u0026gt; 0.265 : | | | | | sulphates \u0026lt;= 0.585 : | | | | | | total.sulfur.dioxide \u0026lt;= 136.5 : | | | | | | | total.sulfur.dioxide \u0026lt;= 101.5 : LM133 (54/63.926%)\r| | | | | | | total.sulfur.dioxide \u0026gt; 101.5 : LM134 (99/92.852%)\r| | | | | | total.sulfur.dioxide \u0026gt; 136.5 : LM135 (67/68.985%)\r| | | | | sulphates \u0026gt; 0.585 : LM136 (75/60.543%)\r| | | fixed.acidity \u0026gt; 7.35 : | | | | fixed.acidity \u0026lt;= 8.15 : LM137 (92/78.47%)\r| | | | fixed.acidity \u0026gt; 8.15 : LM138 (26/102.779%)\r| alcohol \u0026gt; 11.767 : | | free.sulfur.dioxide \u0026lt;= 21.5 : LM139 (181/88.599%)\r| | free.sulfur.dioxide \u0026gt; 21.5 : | | | residual.sugar \u0026lt;= 1.85 : | | | | pH \u0026lt;= 3.295 : LM140 (120/66.869%)\r| | | | pH \u0026gt; 3.295 : LM141 (46/68.585%)\r| | | residual.sugar \u0026gt; 1.85 : | | | | sulphates \u0026lt;= 0.495 : | | | | | chlorides \u0026lt;= 0.035 : | | | | | | total.sulfur.dioxide \u0026lt;= 112.5 : LM142 (48/80.266%)\r| | | | | | total.sulfur.dioxide \u0026gt; 112.5 : | | | | | | | free.sulfur.dioxide \u0026lt;= 41.5 : | | | | | | | | fixed.acidity \u0026lt;= 6.95 : LM143 (29/58.058%)\r| | | | | | | | fixed.acidity \u0026gt; 6.95 : | | | | | | | | | alcohol \u0026lt;= 12.6 : | | | | | | | | | | alcohol \u0026lt;= 11.85 : LM144 (4/0%)\r| | | | | | | | | | alcohol \u0026gt; 11.85 : LM145 (11/48.112%)\r| | | | | | | | | alcohol \u0026gt; 12.6 : LM146 (9/0%)\r| | | | | | | free.sulfur.dioxide \u0026gt; 41.5 : | | | | | | | | pH \u0026lt;= 3.05 : LM147 (7/39.483%)\r| | | | | | | | pH \u0026gt; 3.05 : LM148 (21/59.02%)\r| | | | | chlorides \u0026gt; 0.035 : | | | | | | volatile.acidity \u0026lt;= 0.245 : LM149 (34/83.494%)\r| | | | | | volatile.acidity \u0026gt; 0.245 : | | | | | | | total.sulfur.dioxide \u0026lt;= 147.5 : LM150 (59/68.359%)\r| | | | | | | total.sulfur.dioxide \u0026gt; 147.5 : LM151 (21/59.587%)\r| | | | sulphates \u0026gt; 0.495 : | | | | | total.sulfur.dioxide \u0026lt;= 104.5 : LM152 (46/49.848%)\r| | | | | total.sulfur.dioxide \u0026gt; 104.5 : | | | | | | fixed.acidity \u0026lt;= 7.15 : | | | | | | | fixed.acidity \u0026lt;= 6.15 : | | | | | | | | total.sulfur.dioxide \u0026lt;= 123 : LM153 (10/32.843%)\r| | | | | | | | total.sulfur.dioxide \u0026gt; 123 : | | | | | | | | | fixed.acidity \u0026lt;= 5.6 : | | | | | | | | | | free.sulfur.dioxide \u0026lt;= 26 : LM154 (2/0%)\r| | | | | | | | | | free.sulfur.dioxide \u0026gt; 26 : LM155 (3/0%)\r| | | | | | | | | fixed.acidity \u0026gt; 5.6 : LM156 (5/0%)\r| | | | | | | fixed.acidity \u0026gt; 6.15 : | | | | | | | | total.sulfur.dioxide \u0026lt;= 133.5 : | | | | | | | | | total.sulfur.dioxide \u0026lt;= 110.5 : LM157 (7/39.483%)\r| | | | | | | | | total.sulfur.dioxide \u0026gt; 110.5 : | | | | | | | | | | chlorides \u0026lt;= 0.033 : LM158 (11/0%)\r| | | | | | | | | | chlorides \u0026gt; 0.033 : | | | | | | | | | | | sulphates \u0026lt;= 0.565 : LM159 (3/0%)\r| | | | | | | | | | | sulphates \u0026gt; 0.565 : LM160 (4/0%)\r| | | | | | | | total.sulfur.dioxide \u0026gt; 133.5 : | | | | | | | | | alcohol \u0026lt;= 12.25 : LM161 (4/0%)\r| | | | | | | | | alcohol \u0026gt; 12.25 : LM162 (5/42.761%)\r| | | | | | fixed.acidity \u0026gt; 7.15 : LM163 (18/56.779%)\rLM num: 1\rquality = 0.0441 * volatile.acidity + 1.1525 * citric.acid + 0.2871 * residual.sugar + 0.0217 * chlorides + 0.1126 * free.sulfur.dioxide + 0.0048 * total.sulfur.dioxide - 0 * density - 47.7049 * pH + 0.3169 * sulphates + 0.3086 * alcohol + 48.7806\rLM num: 2\rquality = 0.0441 * volatile.acidity - 0.2359 * citric.acid + 0.1502 * residual.sugar + 0.015 * chlorides + 0.1126 * free.sulfur.dioxide + 0 * total.sulfur.dioxide - 26.2386 * density - 34.3822 * pH + 0.174 * sulphates + 0.1016 * alcohol + 64.8657\rLM num: 3\rquality = 0.0441 * volatile.acidity + 1.1924 * citric.acid + 0.1237 * residual.sugar + 0.015 * chlorides + 0.1126 * free.sulfur.dioxide + 0 * total.sulfur.dioxide - 30.8689 * density - 34.3581 * pH + 0.174 * sulphates + 0.0967 * alcohol + 69.0853\rLM num: 4\rquality = -0.7764 * volatile.acidity - 0.3428 * citric.acid + 0.0672 * residual.sugar + 1.4754 * chlorides + 0.1109 * free.sulfur.dioxide + 0 * total.sulfur.dioxide - 0 * density - 33.2781 * pH + 2.3466 * sulphates + 0.1861 * alcohol + 36.9842\rLM num: 5\rquality = -0.7043 * volatile.acidity - 0.3428 * citric.acid + 0.0672 * residual.sugar + 1.3494 * chlorides + 0.1202 * free.sulfur.dioxide + 0.0031 * total.sulfur.dioxide - 0 * density - 33.2781 * pH + 0.9067 * sulphates + 0.1812 * alcohol + 36.3733\rLM num: 6\rquality = -0.7043 * volatile.acidity - 0.3428 * citric.acid + 0.0672 * residual.sugar + 1.3494 * chlorides + 0.111 * free.sulfur.dioxide + 0.0023 * total.sulfur.dioxide - 0 * density - 33.2781 * pH + 0.9067 * sulphates + 0.1812 * alcohol + 37.0739\rLM num: 7\rquality = 0.0715 * fixed.acidity + 0.0724 * volatile.acidity - 0.8627 * citric.acid - 0.012 * residual.sugar + 0.0158 * chlorides + 0.1126 * free.sulfur.dioxide - 0.0009 * total.sulfur.dioxide - 0.0005 * density - 35.9382 * pH + 0.035 * sulphates + 0.1552 * alcohol + 41.2295\rLM num: 8\rquality = 0.0715 * fixed.acidity + 0.0724 * volatile.acidity - 0.8627 * citric.acid - 0.012 * residual.sugar + 0.0158 * chlorides + 0.1126 * free.sulfur.dioxide - 0.0009 * total.sulfur.dioxide - 0.0005 * density - 35.2429 * pH + 0.035 * sulphates + 0.1552 * alcohol + 38.7956\rLM num: 9\rquality = 0.0715 * fixed.acidity + 0.0724 * volatile.acidity - 0.8627 * citric.acid - 0.012 * residual.sugar + 0.0158 * chlorides + 0.1126 * free.sulfur.dioxide - 0.0009 * total.sulfur.dioxide - 0.0005 * density - 35.4569 * pH + 0.035 * sulphates + 0.1552 * alcohol + 39.5718\rLM num: 10\rquality = 0.1337 * fixed.acidity + 0.0724 * volatile.acidity - 0.8627 * citric.acid + 0.0032 * residual.sugar + 0.0158 * chlorides + 0.1078 * free.sulfur.dioxide - 0.0006 * total.sulfur.dioxide + 12.3946 * density - 35.8336 * pH + 0.035 * sulphates + 0.1552 * alcohol + 28.1942\rLM num: 11\rquality = 0.2426 * fixed.acidity + 0.0724 * volatile.acidity - 0.8627 * citric.acid + 0.025 * residual.sugar + 0.0158 * chlorides + 0.1075 * free.sulfur.dioxide - 0.0006 * total.sulfur.dioxide - 26.8954 * density - 36.0338 * pH + 0.035 * sulphates + 0.1552 * alcohol + 66.8444\rLM num: 12\rquality = 0.2426 * fixed.acidity + 0.0724 * volatile.acidity - 0.8627 * citric.acid + 0.0192 * residual.sugar + 0.0158 * chlorides + 0.1075 * free.sulfur.dioxide - 0.0006 * total.sulfur.dioxide - 28.4276 * density - 36.0338 * pH + 0.035 * sulphates + 0.1552 * alcohol + 68.4143\rLM num: 13\rquality = 0.2685 * fixed.acidity + 0.0724 * volatile.acidity - 0.8627 * citric.acid + 0.0032 * residual.sugar + 0.0158 * chlorides + 0.1075 * free.sulfur.dioxide - 0.0006 * total.sulfur.dioxide + 11.355 * density - 36.0338 * pH + 0.035 * sulphates + 0.1552 * alcohol + 28.8194\rLM num: 14\rquality = 0.1965 * fixed.acidity + 0.0724 * volatile.acidity - 0.8627 * citric.acid + 0.0324 * residual.sugar + 0.0158 * chlorides + 0.1044 * free.sulfur.dioxide - 0.0006 * total.sulfur.dioxide - 49.1196 * density - 35.8909 * pH + 0.035 * sulphates + 0.1552 * alcohol + 89.241\rLM num: 15\rquality = 0.1965 * fixed.acidity + 0.0724 * volatile.acidity - 0.8627 * citric.acid + 0.0283 * residual.sugar - 7.3015 * chlorides + 0.1052 * free.sulfur.dioxide - 0.0006 * total.sulfur.dioxide - 49.1196 * density - 35.8909 * pH + 0.035 * sulphates + 0.1552 * alcohol + 89.4915\rLM num: 16\rquality = 0.1965 * fixed.acidity + 0.0724 * volatile.acidity - 0.8627 * citric.acid + 0.0283 * residual.sugar - 7.0229 * chlorides + 0.1052 * free.sulfur.dioxide - 0.0006 * total.sulfur.dioxide - 49.1196 * density - 35.8909 * pH + 0.2111 * sulphates + 0.1552 * alcohol + 89.3683\rLM num: 17\rquality = 0.1965 * fixed.acidity + 0.0724 * volatile.acidity - 0.8627 * citric.acid + 0.0283 * residual.sugar - 7.0229 * chlorides + 0.1052 * free.sulfur.dioxide - 0.0006 * total.sulfur.dioxide - 49.1196 * density - 35.8909 * pH + 0.2214 * sulphates + 0.1552 * alcohol + 89.3642\rLM num: 18\rquality = 0.1965 * fixed.acidity + 0.0724 * volatile.acidity - 0.8627 * citric.acid + 0.0283 * residual.sugar - 5.774 * chlorides + 0.1052 * free.sulfur.dioxide - 0.0006 * total.sulfur.dioxide - 49.1196 * density - 35.8909 * pH + 0.035 * sulphates + 0.1552 * alcohol + 89.4132\rLM num: 19\rquality = -3.314 * volatile.acidity - 0.8771 * citric.acid - 0.012 * residual.sugar + 0.016 * chlorides + 0.115 * free.sulfur.dioxide - 0.0013 * total.sulfur.dioxide - 0.0005 * density - 36.2617 * pH + 1.7704 * sulphates + 0.1552 * alcohol + 41.5421\rLM num: 20\rquality = 0.0737 * volatile.acidity - 0.8771 * citric.acid - 0.012 * residual.sugar + 0.016 * chlorides + 0.1143 * free.sulfur.dioxide - 0.001 * total.sulfur.dioxide - 0.0005 * density - 36.2617 * pH + 0.035 * sulphates + 0.1552 * alcohol + 41.7077\rLM num: 21\rquality = -0.336 * fixed.acidity - 0.0911 * volatile.acidity - 0.8082 * citric.acid - 0.1062 * residual.sugar + 0.0331 * chlorides + 0.0973 * free.sulfur.dioxide + 0.0006 * total.sulfur.dioxide + 0.0003 * density - 88.2321 * pH + 0.0323 * sulphates + 0.2628 * alcohol + 91.4131\rLM num: 22\rquality = -0.1356 * fixed.acidity - 0.0466 * volatile.acidity - 0.8082 * citric.acid - 0.1062 * residual.sugar + 0.0221 * chlorides + 0.0973 * free.sulfur.dioxide + 0.0006 * total.sulfur.dioxide + 0.0003 * density - 55.2776 * pH - 0.847 * sulphates - 0.1116 * alcohol + 62.5581\rLM num: 23\rquality = 0.0713 * fixed.acidity + 0.0012 * volatile.acidity - 1.5127 * citric.acid - 0.1767 * residual.sugar + 105.2911 * chlorides + 0.0943 * free.sulfur.dioxide + 0.0002 * total.sulfur.dioxide + 0.0001 * density - 31.5856 * pH + 0.0323 * sulphates + 0.1199 * alcohol + 32.2345\rLM num: 24\rquality = 0.0713 * fixed.acidity + 0.0012 * volatile.acidity - 1.5127 * citric.acid - 0.1767 * residual.sugar + 99.3471 * chlorides + 0.0943 * free.sulfur.dioxide + 0.0002 * total.sulfur.dioxide + 0.0001 * density - 31.5856 * pH + 0.0323 * sulphates + 0.1199 * alcohol + 32.6786\rLM num: 25\rquality = 0.0932 * fixed.acidity + 0.0012 * volatile.acidity - 1.5127 * citric.acid - 0.1807 * residual.sugar + 95.7703 * chlorides + 0.0943 * free.sulfur.dioxide + 0.0002 * total.sulfur.dioxide + 0.0001 * density - 31.5856 * pH + 0.0323 * sulphates + 0.1199 * alcohol + 32.9544\rLM num: 26\rquality = 0.0012 * volatile.acidity - 1.5127 * citric.acid - 0.157 * residual.sugar + 54.236 * chlorides + 0.0943 * free.sulfur.dioxide + 0.0002 * total.sulfur.dioxide + 0.0001 * density - 31.5856 * pH + 0.0323 * sulphates + 0.1199 * alcohol + 35.4429\rLM num: 27\rquality = -1.6198 * volatile.acidity - 1.9058 * citric.acid - 0.1764 * residual.sugar + 5.7111 * chlorides + 0.0824 * free.sulfur.dioxide + 0.0002 * total.sulfur.dioxide + 0.0001 * density - 30.985 * pH + 0.0323 * sulphates + 0.1199 * alcohol + 36.9235\rLM num: 28\rquality = -1.6198 * volatile.acidity - 1.9058 * citric.acid - 0.1764 * residual.sugar + 5.7111 * chlorides + 0.0829 * free.sulfur.dioxide + 0.0002 * total.sulfur.dioxide + 0.0001 * density - 30.985 * pH + 0.0323 * sulphates + 0.1199 * alcohol + 36.8808\rLM num: 29\rquality = -2.3403 * volatile.acidity - 1.9058 * citric.acid - 0.1764 * residual.sugar + 5.7111 * chlorides + 0.0825 * free.sulfur.dioxide + 0.0002 * total.sulfur.dioxide + 0.0001 * density - 30.985 * pH + 0.0323 * sulphates + 0.1199 * alcohol + 37.0118\rLM num: 30\rquality = 0.0012 * volatile.acidity - 1.9058 * citric.acid - 0.1764 * residual.sugar + 5.7111 * chlorides + 0.0906 * free.sulfur.dioxide + 0.0002 * total.sulfur.dioxide + 0.0001 * density - 30.7969 * pH + 0.0323 * sulphates + 0.1199 * alcohol + 35.686\rLM num: 31\rquality = 0.0012 * volatile.acidity - 1.9058 * citric.acid - 0.1764 * residual.sugar + 5.7111 * chlorides + 0.0906 * free.sulfur.dioxide + 0.0002 * total.sulfur.dioxide + 0.0001 * density - 31.3423 * pH + 0.0323 * sulphates + 0.1199 * alcohol + 37.5168\rLM num: 32\rquality = -0.0583 * fixed.acidity + 0.0012 * volatile.acidity - 2.4348 * citric.acid - 0.1764 * residual.sugar + 5.7111 * chlorides + 0.0873 * free.sulfur.dioxide + 0.0002 * total.sulfur.dioxide + 0.0001 * density - 31.3597 * pH + 0.2469 * sulphates + 0.1199 * alcohol + 38.0548\rLM num: 33\rquality = -0.3052 * fixed.acidity + 0.0012 * volatile.acidity - 0.5311 * citric.acid - 0.1764 * residual.sugar + 5.7111 * chlorides + 0.0874 * free.sulfur.dioxide + 0.0002 * total.sulfur.dioxide + 0.0001 * density - 31.3597 * pH + 0.2469 * sulphates + 0.1199 * alcohol + 39.1208\rLM num: 34\rquality = -0.3182 * fixed.acidity + 0.0012 * volatile.acidity - 2.4124 * citric.acid - 0.1764 * residual.sugar + 5.7111 * chlorides + 0.0874 * free.sulfur.dioxide + 0.0002 * total.sulfur.dioxide + 0.0001 * density - 31.3597 * pH + 0.2469 * sulphates + 0.1199 * alcohol + 39.9144\rLM num: 35\rquality = -0.0695 * fixed.acidity + 0.0012 * volatile.acidity - 2.2225 * citric.acid - 0.1764 * residual.sugar + 5.7111 * chlorides + 0.0882 * free.sulfur.dioxide + 0.0002 * total.sulfur.dioxide + 0.0001 * density - 31.3597 * pH + 0.2882 * sulphates + 0.1199 * alcohol + 37.9875\rLM num: 36\rquality = -0.4936 * fixed.acidity + 0.0797 * volatile.acidity - 2.4188 * citric.acid - 0.1001 * residual.sugar + 0.0519 * chlorides + 1.2445 * free.sulfur.dioxide + 0.0002 * total.sulfur.dioxide + 259.9948 * density - 113.2135 * pH + 0.5635 * sulphates + 1.1495 * alcohol - 145.8266\rLM num: 37\rquality = 0.0828 * volatile.acidity - 1.969 * citric.acid - 0.1235 * residual.sugar + 0.0408 * chlorides + 0.5557 * free.sulfur.dioxide + 0.0002 * total.sulfur.dioxide + 0.0001 * density - 100.2465 * pH + 0.996 * sulphates + 0.5283 * alcohol + 101.4098\rLM num: 38\rquality = 0.0903 * volatile.acidity - 2.0365 * citric.acid - 0.1001 * residual.sugar + 0.0425 * chlorides + 0.5477 * free.sulfur.dioxide + 0.0002 * total.sulfur.dioxide + 0.0001 * density - 104.9622 * pH - 0.577 * sulphates + 0.3658 * alcohol + 106.897\rLM num: 39\rquality = 0.0178 * volatile.acidity - 1.19 * citric.acid - 0.0789 * residual.sugar + 0.0199 * chlorides + 0.0973 * free.sulfur.dioxide + 0.0002 * total.sulfur.dioxide + 0.0001 * density - 46.7151 * pH + 0.1443 * sulphates + 0.1669 * alcohol + 51.8086\rLM num: 40\rquality = -10.4475 * volatile.acidity - 1.19 * citric.acid - 0.1001 * residual.sugar + 0.0199 * chlorides + 0.0973 * free.sulfur.dioxide + 0.0045 * total.sulfur.dioxide + 0.0001 * density - 44.5739 * pH + 0.1443 * sulphates + 0.1669 * alcohol + 46.4726\rLM num: 41\rquality = -0.0389 * volatile.acidity - 0.2704 * citric.acid + 0.6445 * residual.sugar - 7.8452 * chlorides - 3.8883 * free.sulfur.dioxide + 0 * total.sulfur.dioxide + 13.1536 * pH - 0.2235 * sulphates + 0.0154 * alcohol - 8.119\rLM num: 42\rquality = -0.0139 * volatile.acidity + 1.0352 * citric.acid + 1.021 * residual.sugar - 4.6438 * chlorides - 6.0203 * free.sulfur.dioxide - 0.0062 * total.sulfur.dioxide - 0.0008 * density + 2.2255 * pH - 0.088 * sulphates + 0.0154 * alcohol + 3.2445\rLM num: 43\rquality = -0.0139 * volatile.acidity + 2.1609 * citric.acid + 1.021 * residual.sugar - 4.468 * chlorides - 6.0203 * free.sulfur.dioxide - 0.0106 * total.sulfur.dioxide - 0.0008 * density + 2.2255 * pH - 0.088 * sulphates + 0.0154 * alcohol + 3.5435\rLM num: 44\rquality = 0.0064 * fixed.acidity - 0.0139 * volatile.acidity + 2.0942 * citric.acid + 1.021 * residual.sugar - 4.468 * chlorides - 6.0203 * free.sulfur.dioxide - 0.0106 * total.sulfur.dioxide - 0.0008 * density + 2.2255 * pH - 0.088 * sulphates + 0.0154 * alcohol + 3.5252\rLM num: 45\rquality = 0.0064 * fixed.acidity - 0.0139 * volatile.acidity + 2.0942 * citric.acid + 1.021 * residual.sugar - 4.468 * chlorides - 6.0203 * free.sulfur.dioxide - 0.0106 * total.sulfur.dioxide - 0.0008 * density + 2.2255 * pH - 0.088 * sulphates + 0.0154 * alcohol + 3.5263\rLM num: 46\rquality = -0.0139 * volatile.acidity + 1.4782 * citric.acid + 1.021 * residual.sugar - 4.468 * chlorides - 6.0203 * free.sulfur.dioxide - 0.0106 * total.sulfur.dioxide - 0.0008 * density + 2.2255 * pH - 0.088 * sulphates + 0.0154 * alcohol + 3.6971\rLM num: 47\rquality = -1.201 * volatile.acidity + 0.462 * citric.acid + 1.021 * residual.sugar - 6.6391 * chlorides - 6.0203 * free.sulfur.dioxide - 0.0106 * total.sulfur.dioxide - 0.0008 * density + 2.2255 * pH - 0.088 * sulphates + 0.0154 * alcohol + 4.277\rLM num: 48\rquality = -0.9537 * volatile.acidity + 0.462 * citric.acid + 1.021 * residual.sugar - 6.1868 * chlorides - 6.0203 * free.sulfur.dioxide - 0.0106 * total.sulfur.dioxide - 0.0008 * density + 2.2255 * pH - 0.088 * sulphates + 0.0154 * alcohol + 4.1505\rLM num: 49\rquality = -0.0139 * volatile.acidity - 0.2704 * citric.acid + 0.5817 * residual.sugar + 0.0043 * chlorides - 3.4552 * free.sulfur.dioxide - 0.0012 * total.sulfur.dioxide - 0.0004 * density + 2.2255 * pH - 0.088 * sulphates + 0.3786 * alcohol - 0.2469\rLM num: 50\rquality = 0.0008 * volatile.acidity - 1.2959 * citric.acid - 0.0474 * residual.sugar + 0.0047 * chlorides + 0.0086 * free.sulfur.dioxide - 0.0005 * total.sulfur.dioxide - 0.0006 * density - 2.6496 * pH + 0.1176 * sulphates + 0.2759 * alcohol + 7.6238\rLM num: 51\rquality = -4.9088 * volatile.acidity - 1.0115 * citric.acid - 0.0376 * residual.sugar + 0.0047 * chlorides + 0.0013 * total.sulfur.dioxide - 18.5793 * density - 2.0509 * pH + 0.0785 * sulphates + 0.1838 * alcohol + 25.7793\rLM num: 52\rquality = -0.1456 * fixed.acidity - 1.5785 * volatile.acidity - 1.0115 * citric.acid - 0.0292 * residual.sugar + 0.0047 * chlorides + 0.0013 * total.sulfur.dioxide - 34.3713 * density - 2.3328 * pH + 0.0785 * sulphates + 0.1838 * alcohol + 42.2907\rLM num: 53\rquality = 0.0008 * volatile.acidity + 0.4721 * citric.acid - 0.1482 * residual.sugar + 0.0055 * chlorides + 0.0032 * free.sulfur.dioxide + 0.001 * total.sulfur.dioxide + 210.4054 * density - 2.8646 * pH + 0.0071 * sulphates + 0.0154 * alcohol - 200.1769\rLM num: 54\rquality = 0.0825 * fixed.acidity + 0.0008 * volatile.acidity - 0.159 * citric.acid - 0.1719 * residual.sugar + 0.0055 * chlorides + 0.0003 * free.sulfur.dioxide + 0.001 * total.sulfur.dioxide + 242.2666 * density - 2.8646 * pH + 0.0071 * sulphates + 0.0154 * alcohol - 231.9683\rLM num: 55\rquality = 0.0532 * fixed.acidity + 0.0008 * volatile.acidity - 0.159 * citric.acid - 0.1719 * residual.sugar + 0.0055 * chlorides + 0.0003 * free.sulfur.dioxide + 0.001 * total.sulfur.dioxide + 242.2666 * density - 2.8646 * pH + 0.0071 * sulphates + 0.0154 * alcohol - 231.6859\rLM num: 56\rquality = -0.1877 * fixed.acidity + 0.0008 * volatile.acidity - 0.159 * citric.acid - 0.2486 * residual.sugar + 0.0055 * chlorides + 0.0003 * free.sulfur.dioxide + 0.001 * total.sulfur.dioxide + 427.5436 * density - 2.8646 * pH + 0.0071 * sulphates + 0.0154 * alcohol - 413.7531\rLM num: 57\rquality = -0.1845 * fixed.acidity + 0.0008 * volatile.acidity - 0.159 * citric.acid - 0.2486 * residual.sugar + 0.0055 * chlorides + 0.0003 * free.sulfur.dioxide + 0.001 * total.sulfur.dioxide + 427.5436 * density - 2.8646 * pH + 0.0071 * sulphates + 0.0154 * alcohol - 413.7844\rLM num: 58\rquality = -0.0812 * fixed.acidity + 0.0008 * volatile.acidity - 0.159 * citric.acid - 0.2458 * residual.sugar + 0.0055 * chlorides + 0.0003 * free.sulfur.dioxide + 0.001 * total.sulfur.dioxide + 356.5653 * density - 2.8646 * pH + 0.0071 * sulphates + 0.0154 * alcohol - 343.5685\rLM num: 59\rquality = 0.0008 * volatile.acidity - 0.6717 * citric.acid - 0.1076 * residual.sugar + 0.0055 * chlorides - 0.0068 * free.sulfur.dioxide + 0.0016 * total.sulfur.dioxide - 0.0001 * density - 3.0114 * pH + 0.0071 * sulphates + 0.0154 * alcohol + 10.2583\rLM num: 60\rquality = 0.0008 * volatile.acidity - 0.1551 * citric.acid - 0.1076 * residual.sugar - 1.5548 * chlorides - 0.0068 * free.sulfur.dioxide + 0.0016 * total.sulfur.dioxide - 0.0001 * density - 3.0114 * pH + 0.0071 * sulphates + 0.0154 * alcohol + 10.144\rLM num: 61\rquality = 0.0008 * volatile.acidity - 0.249 * citric.acid - 0.1076 * residual.sugar - 1.7884 * chlorides - 0.0068 * free.sulfur.dioxide + 0.0016 * total.sulfur.dioxide - 0.0001 * density - 3.0114 * pH + 0.0071 * sulphates + 0.0154 * alcohol + 10.1955\rLM num: 62\rquality = 0.0008 * volatile.acidity - 0.249 * citric.acid - 0.1076 * residual.sugar - 1.8797 * chlorides - 0.0068 * free.sulfur.dioxide + 0.0016 * total.sulfur.dioxide - 0.0001 * density - 3.0114 * pH + 0.0071 * sulphates + 0.0154 * alcohol + 10.1975\rLM num: 63\rquality = 0.0008 * volatile.acidity - 0.6717 * citric.acid - 0.1167 * residual.sugar + 0.0055 * chlorides - 0.0068 * free.sulfur.dioxide + 0.0016 * total.sulfur.dioxide - 0.0001 * density - 3.0114 * pH + 0.0071 * sulphates + 0.0154 * alcohol + 10.3391\rLM num: 64\rquality = 0.0008 * volatile.acidity - 0.6717 * citric.acid - 0.1 * residual.sugar + 0.0055 * chlorides - 0.0091 * free.sulfur.dioxide + 0.0016 * total.sulfur.dioxide - 0.0001 * density - 3.0114 * pH + 0.0071 * sulphates + 0.0154 * alcohol + 10.1278\rLM num: 65\rquality = 0.0725 * fixed.acidity + 0.718 * volatile.acidity - 0.1682 * citric.acid - 0.0186 * residual.sugar + 0.0034 * chlorides + 0.0064 * free.sulfur.dioxide + 0.0005 * total.sulfur.dioxide - 113.4729 * density - 2.4685 * pH + 0.0071 * sulphates + 0.0154 * alcohol + 119.1723\rLM num: 66\rquality = 0.0811 * fixed.acidity + 0.718 * volatile.acidity - 0.1682 * citric.acid - 0.0186 * residual.sugar + 0.0034 * chlorides + 0.0064 * free.sulfur.dioxide + 0.0005 * total.sulfur.dioxide - 113.4729 * density - 2.4685 * pH + 0.0071 * sulphates + 0.0154 * alcohol + 119.1496\rLM num: 67\rquality = -0.0242 * fixed.acidity + 0.718 * volatile.acidity - 0.1682 * citric.acid - 0.0348 * residual.sugar + 0.0034 * chlorides + 0.0034 * free.sulfur.dioxide + 0.0005 * total.sulfur.dioxide - 71.247 * density - 2.4685 * pH + 0.0071 * sulphates + 0.0154 * alcohol + 78.3345\rLM num: 68\rquality = 0.1091 * fixed.acidity + 0.718 * volatile.acidity - 0.1682 * citric.acid - 0.0348 * residual.sugar + 0.0034 * chlorides + 0.0034 * free.sulfur.dioxide + 0.0005 * total.sulfur.dioxide - 71.247 * density - 2.4685 * pH + 0.0071 * sulphates + 0.0154 * alcohol + 77.4467\rLM num: 69\rquality = -0.0457 * fixed.acidity + 0.718 * volatile.acidity - 0.1682 * citric.acid - 0.0348 * residual.sugar + 0.0034 * chlorides + 0.0034 * free.sulfur.dioxide + 0.0005 * total.sulfur.dioxide - 71.247 * density - 2.4685 * pH + 0.0071 * sulphates + 0.0154 * alcohol + 78.4145\rLM num: 70\rquality = 0.0223 * fixed.acidity + 0.718 * volatile.acidity - 0.1682 * citric.acid - 0.0348 * residual.sugar + 0.0034 * chlorides + 0.0108 * free.sulfur.dioxide + 0.0005 * total.sulfur.dioxide - 76.2837 * density - 2.4685 * pH + 0.0071 * sulphates + 0.0154 * alcohol + 82.4543\rLM num: 71\rquality = -3.9696 * volatile.acidity - 0.4571 * citric.acid - 0.0473 * residual.sugar + 0.0034 * chlorides - 0.0026 * free.sulfur.dioxide + 0.0035 * total.sulfur.dioxide - 16.6994 * density - 2.4685 * pH + 0.0071 * sulphates + 0.0154 * alcohol + 24.7381\rLM num: 72\rquality = -4.7084 * volatile.acidity - 0.4571 * citric.acid - 0.0473 * residual.sugar + 0.0034 * chlorides - 0.0026 * free.sulfur.dioxide + 0.0031 * total.sulfur.dioxide - 16.6994 * density - 2.4685 * pH + 0.0071 * sulphates + 0.0154 * alcohol + 25.035\rLM num: 73\rquality = -3.3578 * volatile.acidity - 0.4571 * citric.acid - 0.0473 * residual.sugar + 0.0034 * chlorides - 0.0044 * free.sulfur.dioxide + 0.0024 * total.sulfur.dioxide - 16.6994 * density - 2.4685 * pH + 0.0071 * sulphates + 0.0154 * alcohol + 24.8515\rLM num: 74\rquality = 0.6341 * volatile.acidity - 0.4571 * citric.acid - 0.0473 * residual.sugar + 0.0034 * chlorides + 0.0024 * free.sulfur.dioxide + 0.0006 * total.sulfur.dioxide - 16.6994 * density - 2.4685 * pH + 0.0071 * sulphates + 0.0154 * alcohol + 23.6957\rLM num: 75\rquality = 0.6341 * volatile.acidity - 0.4571 * citric.acid - 0.0473 * residual.sugar + 0.0034 * chlorides + 0.0029 * free.sulfur.dioxide + 0.0006 * total.sulfur.dioxide - 16.6994 * density - 2.4685 * pH + 0.0071 * sulphates + 0.0154 * alcohol + 23.7125\rLM num: 76\rquality = -0.0519 * fixed.acidity + 0.6341 * volatile.acidity + 0.8082 * citric.acid - 0.0473 * residual.sugar + 0.0034 * chlorides + 0.0029 * free.sulfur.dioxide + 0.0006 * total.sulfur.dioxide - 16.6994 * density - 2.4685 * pH + 0.0071 * sulphates + 0.0154 * alcohol + 23.4937\rLM num: 77\rquality = -0.0626 * fixed.acidity + 0.6341 * volatile.acidity + 0.745 * citric.acid - 0.0473 * residual.sugar + 0.0034 * chlorides + 0.0029 * free.sulfur.dioxide + 0.0006 * total.sulfur.dioxide - 16.6994 * density - 2.4685 * pH + 0.0071 * sulphates + 0.0154 * alcohol + 23.6075\rLM num: 78\rquality = 2.9992 * volatile.acidity - 1.6457 * citric.acid - 0.0473 * residual.sugar + 0.0034 * chlorides + 0.0041 * free.sulfur.dioxide + 0.0006 * total.sulfur.dioxide - 16.6994 * density - 2.4685 * pH + 0.0071 * sulphates + 0.0154 * alcohol + 23.5858\rLM num: 79\rquality = 2.9992 * volatile.acidity - 1.812 * citric.acid - 0.0473 * residual.sugar + 0.0034 * chlorides + 0.0035 * free.sulfur.dioxide + 0.0006 * total.sulfur.dioxide - 16.6994 * density - 2.4685 * pH + 0.0071 * sulphates + 0.0154 * alcohol + 23.7167\rLM num: 80\rquality = 2.9992 * volatile.acidity - 1.8033 * citric.acid - 0.0473 * residual.sugar + 1.2227 * chlorides + 0.0035 * free.sulfur.dioxide + 0.0006 * total.sulfur.dioxide - 16.6994 * density - 2.4685 * pH + 0.0071 * sulphates + 0.0154 * alcohol + 23.6596\rLM num: 81\rquality = 3.9189 * volatile.acidity - 1.6457 * citric.acid - 0.0473 * residual.sugar + 0.0034 * chlorides + 0.0011 * free.sulfur.dioxide + 0.0006 * total.sulfur.dioxide - 16.6994 * density - 2.4685 * pH + 0.0071 * sulphates + 0.0154 * alcohol + 23.5332\rLM num: 82\rquality = 0.6341 * volatile.acidity - 1.8821 * citric.acid - 0.0473 * residual.sugar + 0.0034 * chlorides + 0.0011 * free.sulfur.dioxide + 0.0006 * total.sulfur.dioxide - 16.6994 * density - 2.4685 * pH + 0.0071 * sulphates + 0.0154 * alcohol + 24.5179\rLM num: 83\rquality = 0.0008 * volatile.acidity - 0.1682 * citric.acid - 0.0533 * residual.sugar + 0.0034 * chlorides + 0.0091 * free.sulfur.dioxide + 0.0032 * total.sulfur.dioxide - 0.0011 * density - 2.4685 * pH + 0.0071 * sulphates + 0.3724 * alcohol + 3.2877\rLM num: 84\rquality = -0.0027 * volatile.acidity + 0.0362 * citric.acid + 0.0088 * residual.sugar + 0.0074 * chlorides - 0.0524 * free.sulfur.dioxide - 0.0005 * total.sulfur.dioxide - 25.6121 * density - 13.2044 * pH + 0.0484 * sulphates + 0.0154 * alcohol + 43.1306\rLM num: 85\rquality = 0.2956 * volatile.acidity + 0.0362 * citric.acid + 0.0175 * residual.sugar + 0.6945 * chlorides - 0.0509 * free.sulfur.dioxide + 0.001 * total.sulfur.dioxide - 61.8877 * density - 13.2044 * pH - 0.9473 * sulphates + 0.0154 * alcohol + 79.3762\rLM num: 86\rquality = 0.2956 * volatile.acidity + 0.0362 * citric.acid + 0.0175 * residual.sugar + 0.6945 * chlorides - 0.0509 * free.sulfur.dioxide + 0.001 * total.sulfur.dioxide - 41.1384 * density - 13.2044 * pH - 0.9473 * sulphates + 0.0154 * alcohol + 58.6546\rLM num: 87\rquality = 0.2956 * volatile.acidity + 0.0362 * citric.acid + 0.0175 * residual.sugar + 0.6945 * chlorides - 0.0509 * free.sulfur.dioxide + 0.001 * total.sulfur.dioxide - 34.7269 * density - 13.2044 * pH - 0.9473 * sulphates + 0.0154 * alcohol + 52.272\rLM num: 88\rquality = 0.2956 * volatile.acidity + 0.0362 * citric.acid + 0.0175 * residual.sugar + 0.6945 * chlorides - 0.0509 * free.sulfur.dioxide + 0.001 * total.sulfur.dioxide - 31.8376 * density - 13.2044 * pH - 0.9473 * sulphates + 0.0154 * alcohol + 49.4122\rLM num: 89\rquality = -0.0841 * fixed.acidity + 0.2956 * volatile.acidity + 0.0362 * citric.acid + 0.0175 * residual.sugar + 0.6945 * chlorides - 0.0447 * free.sulfur.dioxide + 0.001 * total.sulfur.dioxide - 61.8877 * density - 13.2044 * pH - 0.9925 * sulphates + 0.0154 * alcohol + 79.6904\rLM num: 90\rquality = -0.1009 * fixed.acidity + 0.2956 * volatile.acidity + 0.0362 * citric.acid + 0.0175 * residual.sugar + 0.6945 * chlorides - 0.0436 * free.sulfur.dioxide + 0.001 * total.sulfur.dioxide - 61.8877 * density - 13.2044 * pH - 0.9925 * sulphates + 0.0154 * alcohol + 79.7846\rLM num: 91\rquality = -0.0467 * fixed.acidity + 0.2956 * volatile.acidity + 0.0362 * citric.acid + 0.0175 * residual.sugar + 0.6945 * chlorides - 0.0463 * free.sulfur.dioxide + 0.001 * total.sulfur.dioxide - 61.8877 * density - 13.2044 * pH - 0.9925 * sulphates + 0.0154 * alcohol + 79.445\rLM num: 92\rquality = 0.2956 * volatile.acidity + 0.0362 * citric.acid + 0.0175 * residual.sugar + 0.6945 * chlorides - 0.0509 * free.sulfur.dioxide + 0.0033 * total.sulfur.dioxide - 61.8877 * density - 13.2044 * pH - 0.9925 * sulphates + 0.0154 * alcohol + 78.9916\rLM num: 93\rquality = 0.2956 * volatile.acidity + 0.0362 * citric.acid + 0.0178 * residual.sugar + 0.7199 * chlorides - 0.0508 * free.sulfur.dioxide + 0.001 * total.sulfur.dioxide - 63.2058 * density - 13.2044 * pH - 0.4484 * sulphates + 0.0154 * alcohol + 80.4296\rLM num: 94\rquality = 0.2956 * volatile.acidity + 0.0362 * citric.acid + 0.0178 * residual.sugar + 0.7199 * chlorides - 0.0469 * free.sulfur.dioxide + 0.001 * total.sulfur.dioxide - 63.2058 * density - 13.2044 * pH - 0.0489 * sulphates + 0.0154 * alcohol + 80.1702\rLM num: 95\rquality = 0.2956 * volatile.acidity + 0.0362 * citric.acid + 0.0178 * residual.sugar + 0.7199 * chlorides - 0.0469 * free.sulfur.dioxide + 0.001 * total.sulfur.dioxide - 63.2058 * density - 13.2044 * pH - 0.4484 * sulphates + 0.0154 * alcohol + 80.3346\rLM num: 96\rquality = 0.2956 * volatile.acidity + 0.0362 * citric.acid + 0.0178 * residual.sugar + 0.7199 * chlorides - 0.0451 * free.sulfur.dioxide + 0.001 * total.sulfur.dioxide - 63.2058 * density - 13.2044 * pH - 0.4484 * sulphates + 0.0154 * alcohol + 80.3277\rLM num: 97\rquality = 0.2956 * volatile.acidity + 0.0362 * citric.acid + 0.0178 * residual.sugar + 0.7199 * chlorides - 0.0508 * free.sulfur.dioxide + 0.001 * total.sulfur.dioxide - 63.2058 * density - 13.2044 * pH - 0.4484 * sulphates + 0.0154 * alcohol + 80.3823\rLM num: 98\rquality = 0.7431 * volatile.acidity + 0.0362 * citric.acid + 0.0149 * residual.sugar + 0.0074 * chlorides - 0.0535 * free.sulfur.dioxide + 0.0008 * total.sulfur.dioxide - 52.4002 * density - 13.2044 * pH - 0.2867 * sulphates + 0.0154 * alcohol + 69.5146\rLM num: 99\rquality = 0.1165 * fixed.acidity - 5.0949 * volatile.acidity + 0.4873 * citric.acid - 0.0384 * residual.sugar + 0.0078 * chlorides - 0.054 * free.sulfur.dioxide - 0.001 * total.sulfur.dioxide + 0.0007 * density - 9.4979 * pH + 0.0484 * sulphates + 0.0154 * alcohol + 11.8021\rLM num: 100\rquality = -2.652 * volatile.acidity + 0.6499 * citric.acid - 0.0245 * residual.sugar + 0.0078 * chlorides - 0.0578 * free.sulfur.dioxide - 0.001 * total.sulfur.dioxide - 29.8113 * density - 11.8021 * pH + 0.0484 * sulphates + 0.0154 * alcohol + 49.0789\rLM num: 101\rquality = -7.037 * volatile.acidity + 0.6499 * citric.acid - 0.0245 * residual.sugar + 0.0078 * chlorides - 0.0578 * free.sulfur.dioxide - 0.001 * total.sulfur.dioxide - 29.8113 * density - 11.8021 * pH + 0.0484 * sulphates + 0.0154 * alcohol + 50.7401\rLM num: 102\rquality = -0.0027 * volatile.acidity + 0.6499 * citric.acid - 0.0298 * residual.sugar + 0.0078 * chlorides - 0.054 * free.sulfur.dioxide - 0.001 * total.sulfur.dioxide - 18.3939 * density - 11.4626 * pH + 0.0484 * sulphates + 0.0154 * alcohol + 35.3744\rLM num: 103\rquality = -0.0728 * fixed.acidity + 1.6671 * volatile.acidity + 0.2209 * citric.acid - 0.0649 * residual.sugar + 0.0084 * chlorides - 0.0555 * free.sulfur.dioxide - 0.0008 * total.sulfur.dioxide + 36.7934 * density - 10.9157 * pH + 0.0484 * sulphates + 0.0154 * alcohol - 21.4493\rLM num: 104\rquality = -0.0728 * fixed.acidity + 1.948 * volatile.acidity + 0.2209 * citric.acid - 0.0649 * residual.sugar + 0.0084 * chlorides - 0.0555 * free.sulfur.dioxide + 0.0024 * total.sulfur.dioxide + 36.7934 * density - 10.9157 * pH + 0.0484 * sulphates + 0.0154 * alcohol - 22.095\rLM num: 105\rquality = -0.0728 * fixed.acidity + 1.948 * volatile.acidity + 0.2209 * citric.acid - 0.0649 * residual.sugar + 0.0084 * chlorides - 0.0555 * free.sulfur.dioxide + 0.0028 * total.sulfur.dioxide + 36.7934 * density - 10.9157 * pH + 0.0484 * sulphates + 0.0154 * alcohol - 22.1494\rLM num: 106\rquality = -0.1177 * fixed.acidity + 1.8089 * volatile.acidity + 0.2209 * citric.acid - 0.0662 * residual.sugar + 0.0084 * chlorides - 0.0555 * free.sulfur.dioxide - 0.0008 * total.sulfur.dioxide + 51.0623 * density - 10.9157 * pH + 0.0484 * sulphates + 0.0154 * alcohol - 35.2849\rLM num: 107\rquality = -0.1177 * fixed.acidity + 1.8089 * volatile.acidity + 0.2209 * citric.acid - 0.065 * residual.sugar + 0.0084 * chlorides - 0.0555 * free.sulfur.dioxide - 0.0008 * total.sulfur.dioxide + 62.7679 * density - 10.9157 * pH + 0.0484 * sulphates + 0.0154 * alcohol - 46.8916\rLM num: 108\rquality = 0.0342 * fixed.acidity + 1.8404 * volatile.acidity + 0.2209 * citric.acid - 0.0733 * residual.sugar + 0.0084 * chlorides - 0.0555 * free.sulfur.dioxide - 0.0008 * total.sulfur.dioxide + 63.8725 * density - 10.9157 * pH + 0.0484 * sulphates + 0.0154 * alcohol - 49.296\rLM num: 109\rquality = -0.0441 * fixed.acidity - 0.0027 * volatile.acidity + 0.2209 * citric.acid - 0.0495 * residual.sugar + 0.0084 * chlorides - 0.0575 * free.sulfur.dioxide - 0.0001 * total.sulfur.dioxide + 0.0008 * density - 10.9157 * pH + 0.0484 * sulphates + 0.8929 * alcohol + 7.6713\rLM num: 110\rquality = -0.0441 * fixed.acidity - 0.0027 * volatile.acidity + 0.2209 * citric.acid - 0.0495 * residual.sugar + 0.0084 * chlorides - 0.0575 * free.sulfur.dioxide - 0.0001 * total.sulfur.dioxide + 0.0008 * density - 10.9157 * pH + 0.0484 * sulphates + 0.1136 * alcohol + 14.4754\rLM num: 111\rquality = -0.0027 * volatile.acidity - 0.1148 * citric.acid + 0.0361 * residual.sugar - 4.9638 * chlorides - 0.054 * free.sulfur.dioxide - 0.0004 * total.sulfur.dioxide - 46.3999 * density - 10.1444 * pH + 0.1076 * sulphates + 0.0154 * alcohol + 61.0133\rLM num: 112\rquality = -0.0099 * volatile.acidity - 0.1706 * citric.acid + 0.0877 * residual.sugar - 1.6965 * chlorides - 0.1659 * free.sulfur.dioxide + 0 * total.sulfur.dioxide - 148.1856 * density - 4.1889 * pH + 0.0195 * sulphates + 0.0154 * alcohol + 155.9224\rLM num: 113\rquality = 0.05 * fixed.acidity + 0.1299 * volatile.acidity - 0.7251 * citric.acid + 0.03 * residual.sugar + 5.4466 * chlorides + 0.0108 * total.sulfur.dioxide - 91.0349 * density - 232.9219 * pH + 1.0199 * sulphates + 0.7204 * alcohol + 321.6741\rLM num: 114\rquality = 0.0281 * fixed.acidity + 0.1299 * volatile.acidity - 0.7251 * citric.acid + 0.0487 * residual.sugar + 3.0956 * chlorides + 0.0114 * total.sulfur.dioxide - 191.7181 * density - 232.9219 * pH + 1.0199 * sulphates + 1.053 * alcohol + 418.345\rLM num: 115\rquality = -0.0796 * fixed.acidity + 0.1638 * volatile.acidity - 0.0488 * citric.acid + 0.0075 * residual.sugar - 6.131 * chlorides + 0.0333 * free.sulfur.dioxide + 0.0193 * total.sulfur.dioxide - 114.6504 * density - 289.5485 * pH + 1.2817 * sulphates + 0.871 * alcohol + 400.5832\rLM num: 116\rquality = -0.0796 * fixed.acidity + 0.1638 * volatile.acidity - 0.0488 * citric.acid + 0.0075 * residual.sugar - 6.131 * chlorides + 0.0333 * free.sulfur.dioxide + 0.0193 * total.sulfur.dioxide - 224.258 * density - 289.5485 * pH + 1.2817 * sulphates + 0.871 * alcohol + 509.7646\rLM num: 117\rquality = -2.1953 * volatile.acidity - 0.4573 * citric.acid + 0.0075 * residual.sugar + 0.0368 * chlorides + 0.0029 * total.sulfur.dioxide - 104.1588 * pH + 0.4335 * sulphates + 0.373 * alcohol + 107.6587\rLM num: 118\rquality = 0.1298 * fixed.acidity + 0.0833 * volatile.acidity - 0.3103 * citric.acid + 0.0075 * residual.sugar + 0.0281 * chlorides + 0.0134 * free.sulfur.dioxide - 0.0033 * total.sulfur.dioxide - 0.0006 * density - 74.8635 * pH + 1.7116 * sulphates + 0.3762 * alcohol + 75.9054\rLM num: 119\rquality = 0.1511 * fixed.acidity - 0.4705 * volatile.acidity - 0.3103 * citric.acid + 0.0298 * residual.sugar + 0.0372 * chlorides + 0.0045 * total.sulfur.dioxide - 0.0006 * density - 102.7968 * pH + 1.1043 * sulphates + 0.9362 * alcohol + 98.9235\rLM num: 120\rquality = 0.249 * fixed.acidity - 0.9498 * volatile.acidity - 0.3103 * citric.acid + 0.052 * residual.sugar + 0.0372 * chlorides + 0.0045 * total.sulfur.dioxide - 0.0006 * density - 102.7968 * pH + 1.1043 * sulphates + 0.9362 * alcohol + 98.3844\rLM num: 121\rquality = 0.2148 * fixed.acidity - 0.6857 * volatile.acidity - 0.3103 * citric.acid + 0.0604 * residual.sugar + 0.0372 * chlorides + 0.0045 * total.sulfur.dioxide - 0.0006 * density - 102.7968 * pH + 1.1043 * sulphates + 0.9362 * alcohol + 98.5157\rLM num: 122\rquality = 0.09 * fixed.acidity + 0.1267 * volatile.acidity - 0.3103 * citric.acid + 0.0075 * residual.sugar + 0.0372 * chlorides + 0.0045 * total.sulfur.dioxide - 0.0006 * density - 102.7968 * pH + 1.1043 * sulphates + 1.5716 * alcohol + 92.3047\rLM num: 123\rquality = 0.09 * fixed.acidity + 0.1267 * volatile.acidity - 0.3103 * citric.acid + 0.0075 * residual.sugar + 0.0372 * chlorides + 0.0045 * total.sulfur.dioxide - 0.0006 * density - 102.7968 * pH + 1.1043 * sulphates + 1.5519 * alcohol + 92.5294\rLM num: 124\rquality = 0.09 * fixed.acidity + 0.1267 * volatile.acidity - 0.3103 * citric.acid + 0.0075 * residual.sugar + 0.0372 * chlorides + 0.0045 * total.sulfur.dioxide - 0.0006 * density - 102.7968 * pH + 1.1043 * sulphates + 1.3703 * alcohol + 94.3935\rLM num: 125\rquality = -1.2275 * volatile.acidity - 0.3952 * citric.acid + 0.0075 * residual.sugar + 0.0268 * chlorides - 0.0047 * total.sulfur.dioxide - 0.0011 * density - 69.0546 * pH + 0.5221 * sulphates + 0.3033 * alcohol + 73.2245\rLM num: 126\rquality = -1.0831 * volatile.acidity - 1.0883 * citric.acid + 0.0312 * chlorides - 0.7007 * free.sulfur.dioxide + 0.0139 * total.sulfur.dioxide + 22.4683 * density - 26.394 * pH + 0.1002 * sulphates + 0.0883 * alcohol + 9.0802\rLM num: 127\rquality = -0.1263 * fixed.acidity - 0.8836 * volatile.acidity - 1.0883 * citric.acid + 0.0312 * chlorides - 0.7007 * free.sulfur.dioxide + 0.0139 * total.sulfur.dioxide + 18.1886 * density - 25.8945 * pH + 0.1002 * sulphates + 0.0883 * alcohol + 13.1705\rLM num: 128\rquality = -0.0737 * fixed.acidity - 0.8836 * volatile.acidity - 1.0883 * citric.acid + 0.0312 * chlorides - 0.7007 * free.sulfur.dioxide + 0.0139 * total.sulfur.dioxide + 18.1886 * density - 25.6235 * pH + 0.1002 * sulphates + 0.0883 * alcohol + 11.7475\rLM num: 129\rquality = -0.2446 * fixed.acidity - 0.8398 * volatile.acidity - 1.9663 * citric.acid + 0.0114 * residual.sugar - 2.4939 * chlorides - 0.7007 * free.sulfur.dioxide + 0.0063 * total.sulfur.dioxide - 18.7292 * pH + 0.1002 * sulphates + 0.2058 * alcohol + 25.7445\rLM num: 130\rquality = -0.0832 * fixed.acidity - 0.4038 * volatile.acidity - 0.5953 * citric.acid + 0.0054 * residual.sugar - 3.9739 * chlorides - 0.7007 * free.sulfur.dioxide + 0.0063 * total.sulfur.dioxide - 19.0312 * pH + 0.1002 * sulphates + 0.1438 * alcohol + 25.5306\rLM num: 131\rquality = -0.0628 * fixed.acidity - 0.4038 * volatile.acidity - 0.5953 * citric.acid + 0.027 * residual.sugar - 3.0258 * chlorides - 0.7007 * free.sulfur.dioxide + 0.0063 * total.sulfur.dioxide - 18.9292 * pH + 0.1002 * sulphates + 0.5389 * alcohol + 20.1476\rLM num: 132\rquality = -2.3075 * volatile.acidity - 0.4015 * citric.acid + 0.0226 * residual.sugar - 20.8152 * chlorides - 2.1571 * free.sulfur.dioxide - 0.0015 * total.sulfur.dioxide - 0.0001 * density - 51.6079 * pH + 0.315 * sulphates + 0.2853 * alcohol + 57.9795\rLM num: 133\rquality = 0.0671 * fixed.acidity - 0.1783 * volatile.acidity - 0.2425 * citric.acid + 0.0441 * residual.sugar + 0.0348 * chlorides - 1.1041 * free.sulfur.dioxide + 0.0022 * total.sulfur.dioxide - 33.4512 * density - 68.5227 * pH + 0.4 * sulphates + 0.2244 * alcohol + 105.1386\rLM num: 134\rquality = 0.4632 * fixed.acidity - 0.0753 * volatile.acidity - 0.2425 * citric.acid + 0.1537 * residual.sugar + 0.0348 * chlorides - 1.1041 * free.sulfur.dioxide + 0.0016 * total.sulfur.dioxide - 186.2735 * density - 67.2484 * pH + 0.4 * sulphates + 0.2244 * alcohol + 249.7897\rLM num: 135\rquality = 0.1219 * volatile.acidity - 0.2425 * citric.acid + 0.0226 * residual.sugar + 0.0471 * chlorides - 1.1041 * free.sulfur.dioxide + 0.0007 * total.sulfur.dioxide - 0.0001 * density - 97.8203 * pH + 0.5434 * sulphates + 0.2244 * alcohol + 101.7552\rLM num: 136\rquality = 0.0865 * volatile.acidity - 0.2425 * citric.acid + 0.0226 * residual.sugar + 0.0359 * chlorides - 1.091 * free.sulfur.dioxide + 0.0012 * total.sulfur.dioxide - 0.0001 * density - 67.0328 * pH + 0.4277 * sulphates + 0.3429 * alcohol + 68.987\rLM num: 137\rquality = 0.4784 * fixed.acidity + 0.0026 * volatile.acidity - 0.2768 * citric.acid + 0.1841 * residual.sugar + 0.0141 * chlorides - 1.1672 * free.sulfur.dioxide - 0.0001 * total.sulfur.dioxide - 211.4155 * density - 17.6025 * pH + 0.1569 * sulphates + 0.1728 * alcohol + 225.4304\rLM num: 138\rquality = -4.6535 * volatile.acidity - 0.2768 * citric.acid + 0.0946 * residual.sugar + 0.0141 * chlorides - 1.1792 * free.sulfur.dioxide - 0.0008 * total.sulfur.dioxide - 54.2104 * density - 18.5195 * pH + 0.1569 * sulphates + 0.1728 * alcohol + 77.864\rLM num: 139\rquality = 0.1762 * fixed.acidity - 1.4589 * volatile.acidity - 1.1784 * citric.acid + 0.0965 * residual.sugar + 0.0142 * chlorides - 0.4975 * free.sulfur.dioxide + 0.001 * total.sulfur.dioxide - 275.9795 * density - 29.9264 * pH + 0.1477 * sulphates + 0.0755 * alcohol + 305.176\rLM num: 140\rquality = 0.2468 * fixed.acidity + 0.0815 * volatile.acidity + 0.0329 * citric.acid + 0.0203 * chlorides - 0.8849 * free.sulfur.dioxide + 0.0013 * total.sulfur.dioxide - 279.5824 * density - 93.1644 * pH + 1.853 * sulphates + 0.2971 * alcohol + 369.0295\rLM num: 141\rquality = 0.2402 * fixed.acidity + 1.6298 * volatile.acidity + 0.1263 * citric.acid - 1.0018 * residual.sugar - 21.504 * chlorides - 0.8636 * free.sulfur.dioxide + 0.0023 * total.sulfur.dioxide + 0.0001 * density - 157.0559 * pH + 0.8123 * sulphates + 0.5055 * alcohol + 158.4107\rLM num: 142\rquality = -0.2213 * volatile.acidity + 0.2618 * citric.acid - 4.9049 * chlorides - 3.0539 * free.sulfur.dioxide + 0.001 * total.sulfur.dioxide + 0.0003 * density - 41.8043 * pH + 0.2424 * sulphates + 0.1152 * alcohol + 47.2543\rLM num: 143\rquality = -0.1086 * fixed.acidity - 1.0489 * volatile.acidity + 0.3954 * citric.acid - 10.3856 * chlorides - 3.0363 * free.sulfur.dioxide - 0.0043 * total.sulfur.dioxide + 42.4243 * density - 41.6169 * pH + 0.2424 * sulphates + 0.1152 * alcohol + 6.0839\rLM num: 144\rquality = -1.4305 * volatile.acidity + 0.3954 * citric.acid - 10.3856 * chlorides - 3.0452 * free.sulfur.dioxide + 0.0006 * total.sulfur.dioxide + 45.328 * density - 41.6169 * pH + 0.2424 * sulphates + 0.2254 * alcohol + 1.2037\rLM num: 145\rquality = -1.4305 * volatile.acidity + 0.3954 * citric.acid - 10.3856 * chlorides - 3.0441 * free.sulfur.dioxide + 0.0006 * total.sulfur.dioxide + 45.328 * density - 41.6169 * pH + 0.2424 * sulphates + 0.1808 * alcohol + 1.7476\rLM num: 146\rquality = -1.5077 * volatile.acidity + 0.3954 * citric.acid - 10.3856 * chlorides - 3.0423 * free.sulfur.dioxide + 0.0006 * total.sulfur.dioxide + 45.328 * density - 41.6169 * pH + 0.2424 * sulphates + 0.0458 * alcohol + 3.2362\rLM num: 147\rquality = 0.1185 * volatile.acidity + 2.2026 * citric.acid - 14.5567 * chlorides - 3.0208 * free.sulfur.dioxide + 0.0006 * total.sulfur.dioxide + 31.2728 * density - 40.8177 * pH + 0.2424 * sulphates + 0.1152 * alcohol + 11.4521\rLM num: 148\rquality = 0.0911 * fixed.acidity - 0.1912 * volatile.acidity + 2.4132 * citric.acid - 14.5567 * chlorides - 3.0123 * free.sulfur.dioxide + 0.0006 * total.sulfur.dioxide + 31.2728 * density - 41.0701 * pH + 0.2424 * sulphates + 0.4563 * alcohol + 7.2276\rLM num: 149\rquality = -0.0288 * volatile.acidity - 0.0442 * citric.acid + 0.0225 * chlorides - 6.8736 * free.sulfur.dioxide - 0.0004 * total.sulfur.dioxide + 0.0004 * density - 43.2263 * pH + 0.2506 * sulphates + 0.1152 * alcohol + 48.8146\rLM num: 150\rquality = -0.234 * fixed.acidity - 0.0053 * volatile.acidity + 2.0345 * citric.acid - 3.1189 * chlorides - 5.1097 * free.sulfur.dioxide - 0.0016 * total.sulfur.dioxide + 0.0004 * density - 43.2263 * pH + 0.2506 * sulphates + 0.1152 * alcohol + 50.088\rLM num: 151\rquality = -0.0667 * fixed.acidity - 0.0053 * volatile.acidity + 0.4628 * citric.acid - 6.4349 * chlorides - 5.1097 * free.sulfur.dioxide - 0.0029 * total.sulfur.dioxide + 0.0004 * density - 43.2263 * pH - 1.5401 * sulphates + 0.1152 * alcohol + 50.2272\rLM num: 152\rquality = 0.0198 * volatile.acidity - 0.2189 * citric.acid + 0.0175 * chlorides - 2.0814 * free.sulfur.dioxide - 0.0005 * total.sulfur.dioxide + 0.0001 * density - 35.1322 * pH + 0.2 * sulphates + 0.1468 * alcohol + 41.1272\rLM num: 153\rquality = 0.1092 * fixed.acidity + 0.8248 * volatile.acidity - 0.1667 * citric.acid + 0.0175 * chlorides - 2.0752 * free.sulfur.dioxide + 0.0033 * total.sulfur.dioxide + 0.0001 * density - 35.1322 * pH + 0.2 * sulphates + 0.1468 * alcohol + 39.321\rLM num: 154\rquality = 0.1092 * fixed.acidity + 0.4394 * volatile.acidity - 0.1667 * citric.acid + 0.0175 * chlorides - 2.0706 * free.sulfur.dioxide + 0.0033 * total.sulfur.dioxide + 0.0001 * density - 35.1322 * pH + 0.2 * sulphates + 0.1468 * alcohol + 39.413\rLM num: 155\rquality = 0.1092 * fixed.acidity + 0.4394 * volatile.acidity - 0.1667 * citric.acid + 0.0175 * chlorides - 2.0709 * free.sulfur.dioxide + 0.0033 * total.sulfur.dioxide + 0.0001 * density - 35.1322 * pH + 0.2 * sulphates + 0.1468 * alcohol + 39.4285\rLM num: 156\rquality = 0.1092 * fixed.acidity + 0.4394 * volatile.acidity - 0.1667 * citric.acid + 0.0175 * chlorides - 2.0752 * free.sulfur.dioxide + 0.0033 * total.sulfur.dioxide + 0.0001 * density - 35.1322 * pH + 0.2 * sulphates + 0.1468 * alcohol + 39.5431\rLM num: 157\rquality = 0.078 * fixed.acidity + 0.3195 * volatile.acidity - 0.1667 * citric.acid + 0.0175 * chlorides - 2.0814 * free.sulfur.dioxide - 0.0067 * total.sulfur.dioxide + 0.0001 * density - 35.1322 * pH + 0.2 * sulphates + 0.1468 * alcohol + 41.4251\rLM num: 158\rquality = 0.078 * fixed.acidity + 0.3195 * volatile.acidity - 0.1667 * citric.acid + 3.6873 * chlorides - 2.0814 * free.sulfur.dioxide - 0.0056 * total.sulfur.dioxide + 0.0001 * density - 35.1322 * pH + 0.2 * sulphates + 0.1468 * alcohol + 41.1069\rLM num: 159\rquality = 0.078 * fixed.acidity + 0.3195 * volatile.acidity - 0.1667 * citric.acid + 4.3546 * chlorides - 2.0814 * free.sulfur.dioxide - 0.0056 * total.sulfur.dioxide + 0.0001 * density - 35.1322 * pH + 0.3831 * sulphates + 0.1468 * alcohol + 40.9955\rLM num: 160\rquality = 0.078 * fixed.acidity + 0.3195 * volatile.acidity - 0.1667 * citric.acid + 4.3546 * chlorides - 2.0814 * free.sulfur.dioxide - 0.0056 * total.sulfur.dioxide + 0.0001 * density - 35.1322 * pH + 0.3734 * sulphates + 0.1468 * alcohol + 41.0087\rLM num: 161\rquality = 0.078 * fixed.acidity + 1.5739 * volatile.acidity - 0.1667 * citric.acid + 0.0175 * chlorides - 2.0814 * free.sulfur.dioxide - 0.0047 * total.sulfur.dioxide + 0.0001 * density - 35.1322 * pH + 0.2 * sulphates + 0.4603 * alcohol + 36.837\rLM num: 162\rquality = 0.078 * fixed.acidity + 1.999 * volatile.acidity - 0.1667 * citric.acid + 0.0175 * chlorides - 2.0814 * free.sulfur.dioxide - 0.0047 * total.sulfur.dioxide + 0.0001 * density - 35.1322 * pH + 0.2 * sulphates + 0.4446 * alcohol + 36.9572\rLM num: 163\rquality = 1.2221 * volatile.acidity - 0.1667 * citric.acid + 0.0175 * chlorides - 2.0814 * free.sulfur.dioxide - 0.0022 * total.sulfur.dioxide + 0.0001 * density - 35.1322 * pH + 0.2 * sulphates + 0.1468 * alcohol + 40.6639\rNumber of Rules : 163\r \r  'use strict'; var containerId = JSON.parse(\"\\\"a205e2b298947ed3\\\"\"); var containerElem = document.getElementById(containerId); var codetabLinks = null; var codetabContents = null; var ids = []; if (containerElem) { codetabLinks = containerElem.querySelectorAll('.codetab__link'); codetabContents = containerElem.querySelectorAll('.codetab__content'); } for (var i = 0; i 0) { codetabContents[0].style.display = 'block'; }  1  summary(m.m5p)   === Summary ===\rCorrelation coefficient -0.2222\rMean absolute error 124.1163\rRoot mean squared error 165.4731\rRelative absolute error 18429.7475 %\rRoot relative squared error 18670.7196 %\rTotal Number of Instances 3750 由于结果更差了，可能案例有误！这里不再讨论。\n人工神经网络对混凝土强度建模  任何足够先进的技术都是于魔法难以区分的。——Arthur C. Clarke\n 人工神经网络最好应用于下列问题：输入数据和输出数据都能很好理解或者至少相当简单，但其涉及输入到输出的过程是极其复杂的。\n激活函数 激活函数之间的差异主要细节就是输出信号的范围不同。线性激活函数产生非常类似于线性回归模型的神经网络，而高斯激活函数产生称为径向基函数（Radial Basis Function, RBF）网络模型。对于许多激活函数，影响输出信号的输入值范围是相对较窄的，因为本质上是将输入值压缩到一个较小的输出范围，所以这样的激活函数（像S形）有时候称为压缩函数（squashing function）。压缩问题的解决方法就是转换所有的神经网络输入，使特征值落在0附近的小范围内。通常情况下，这可以通过便转化或者规范化完成。\n网络拓扑 信息传播的方向  前馈神经网络（feedforward network）：网络中的输入信号在一个方向上从一个节点到另一个节点连续地传送，直到到达输出层。 递归网络（recurrent network）：允许信号使用循环在两个方向上传播。它使得极其复杂的模式可以被学习，能够理解经过一段时间的事件序列的能力（记忆能力）。  每一层的节点数 输入节点的个数由输入数据特征和数量预先确定。类似地，输出节点的个数由需要进行建模的结果或者结果中的分类水平数预先确定。\n 已经证明，具有至少一个充分多神经元隐藏层的神经网络是一种通用函数逼近器（universal function approximator）。从本质上讲，这意味着这样的一个网络可以用来以任意精度逼近有界区间上的任意连续函数。\n 用后向传播训练神经网络  前向阶段（forward phase）：神经元在从输入层到输出层的序列中被激活，沿途应用每一个神经元的权重和激活函数，一旦达到最后一层，就产生一个输出信号。 后向阶段（backward phase）中：由前向阶段产生的网络输出信号与训练数据中的真实目标值进行比较，网络的输出信号与真实目标值之间的差异产生的误差在网络中向后传播，从而来修正神经元之间的连接权重，并减少将来产生的误差。修正的量由梯度下降（gradient descent）算法种的学习率（learning rate）决定。  数据处理 混凝土数据集包含了1030个混凝土案例，8个描述混合物成分的特征。这些特征被认为与最终的抗压强度相关，并且它们包含了产品中使用水泥（cement）、矿渣（slag）、灰（ash）水（water）、超塑化剂（superplasticizer）、粗集料（coarse aggregate）、细集料（fineaggregate）的量（单位$kg/m^3$），还包括老化时间（aging time）（单位为天）。\n1 2  concrete \u0026lt;- read.csv(\u0026#34;G:/R/Machine Learning With R/data/Chapter 07/concrete.csv\u0026#34;) str(concrete)   'data.frame':\t1030 obs. of 9 variables:\r$ cement : num 141 169 250 266 155 ...\r$ slag : num 212 42.2 0 114 183.4 ...\r$ ash : num 0 124.3 95.7 0 0 ...\r$ water : num 204 158 187 228 193 ...\r$ superplastic: num 0 10.8 5.5 0 9.1 0 0 6.4 0 9 ...\r$ coarseagg : num 972 1081 957 932 1047 ...\r$ fineagg : num 748 796 861 670 697 ...\r$ age : int 28 14 28 28 28 90 7 56 28 28 ...\r$ strength : num 29.9 23.5 29.2 45.9 18.3 ...\r数据框中的9个变量对应于数据集中的8个特征和一个结果。神经网络的输入数据放缩到0附近的狭窄范围内，这里需要标准化：\n1 2 3 4 5 6 7  normalize \u0026lt;- function(x){ return((x-min(x))/(max(x)-min(x))) } concrete_norm \u0026lt;- as.data.frame(lapply(concrete, normalize)) summary(concrete_norm$strength) summary(concrete$strength)   Min. 1st Qu. Median Mean 3rd Qu. Max. 0.0000 0.2664 0.4001 0.4172 0.5457 1.0000 Min. 1st Qu. Median Mean 3rd Qu. Max. 2.33 23.71 34.45 35.82 46.13 82.60 \r 训练模型之前应用于数据的任何变换，之后需要应用反变换，以便将数据转换回原始的测量单位。\n 将数据划分为一个具有75%案例的训练数据集和一个具有25%案例的测试集（已随机排列）：\n1 2  concrete_train \u0026lt;- concrete_norm[1:773, ] concrete_test \u0026lt;- concrete_norm[774:1030, ]   模型训练 从训练最简单的只有一个单一隐藏节点的多层前馈网络开始：\n1 2 3 4 5  # install.packages(\u0026#39;neuralnet\u0026#39;) library(neuralnet) concrete_model \u0026lt;- neuralnet(strength ~ cement + slag + ash + water + superplastic + coarseagg + fineagg + age, data = concrete_train) plot(concrete_model, rep = \u0026#39;best\u0026#39;)   8个特征中的每一个特征都有一个输入节点，后面跟着一个单一的隐藏节点和一个单一的预测的混凝土强度的输出节点。每一个连接的权重也都被描绘出来，偏差项也被描绘出来(通过带有1的节点表示)。该图还报告了训练的步数和误差平方和(Sum of Squared Error, SSE)。当评估模型的性能时，这些指标很有用。\n性能评估 compute()函数的运行原理与predict()函数有些不同。它返回一个带有两个分量的列表：\\$neurons，用来存储网络中每一层的神经元；\\$net.results用来存储预测值。\n1 2 3 4  model_results \u0026lt;- compute(concrete_model, concrete_test[1:8]) predicted_strength \u0026lt;- model_results$net.result corr \u0026lt;- cor(predicted_strength, concrete_test$strength) corr   0.8058595\rPearson相关系数为0.8，意味着一个相当强的线性关系。具有一个隐藏节点的神经网络与线性回归模型类似，每个输入节点与隐藏节点之间的权重类似于回归系数，对偏差项的权重类似于截距。事实上，如果构建一个与前面的神经网络原理相同的线性模型，则相关系数为0.79。\n1 2 3  linear_m \u0026lt;- lm(strength ~ cement + slag + ash + water + superplastic + coarseagg + fineagg + age, data = concrete_train) sqrt(summary(linear_m)$adj.r.squared)   0.791953091849414\r性能提升 隐藏层节点的数量增加至5：\n1 2 3  concrete_model2 \u0026lt;- neuralnet(strength ~ cement + slag + ash + water + superplastic + coarseagg + fineagg + age, data = concrete_train, hidden = 5) plot(concrete_model2, rep = \u0026#39;best\u0026#39;)   SSE从5.085907减少到1.6952，步数从1556上升为21974。对预测值于真实值进行比较：\n1 2 3  model_results2 \u0026lt;- compute(concrete_model2, concrete_test[1:8]) predicted_strength2 \u0026lt;- model_results2$net.result cor(predicted_strength2, concrete_test$strength)   0.9292779\r关联规则超市数据挖掘 关联规则是无监督的，不需要训练算法，也不需要提前标记数据。一个灵敏的规则学习算法利用了这样一个事实：在现实中，许多潜在的商品组合极少，如果有，就在实践中发现，而不是一个接一个地评估这些项集中的每个元素。Apriori性质：一个频繁项集的所有子集必须也是频繁的。\n度量规则兴趣度  支持度：一个项集或者规则度量法的$support$是指其在数据中出现的频率。$$support(X)=\\frac{count(x)}{N}$$其中，N表示数据库中的交易次数，$count(X)$表示项集X出现在交易中的次数。 置信度：$confidence$是指该规则的预测能力或者准确度的度量。$$confidence(X\\rightarrow Y)\\frac{support(X,Y)}{support(X)}$$事实上，$support(A,B)$与$P(A\\bigcap B)$是一样的，$confidence(A\\rightarrow B)$与$P(B|A)$是一样的。  强规则(strong rule)：同时具有高支持度和置信度。\n用Apriori原则建立规则 Apriori原则指的是一个频繁项集的所有子集也必须是频繁的。即如果${A,B}$是频繁的，那么${A}$和${B}$都必须是频繁的。根据定义，支持度表示一个项集出现在数据中的频率。因此，如果知道${A}$不满足所期望的支持度阈值，那么就没有理由考虑${A,B}$或者任何包含${A}$的项集，这些项集绝不可能是频繁的。priori算法利用这个逻辑在实际评估它们之前排除潜在的关联规则，创建规则的实际过程分为两个阶段：\n 识别所有满足最小支持度阈值的项集。 根据满足最小置信度阈值的这些项集来创建规则。  第一阶段发生于多次迭代中，每次连续的迭代都需要评估存储一组越来越大项集的支持度。例如，迭代1需要评估一组1项的项集(1项集)，迭代2评估2项集，以此类推。每个迭代i的结果是一组所有满足最小值尺度阈值的i项集。\n由迭代i得到的所有项集结合在一起以便生成候选项集用于在迭代i+1中进行评估。但是Apriori原则甚至可以在下一轮开始之前就消除其中的一些项集。如果在迭代1中，${A}$、${B}$和${C}$都是频繁的，而${D}$不是频繁的，那么在迭代2中，只考虑${A,B}$、${A,C}$和${B,C}$。因此，该算法仅需要评估3个项集而如果包含D的项集没有在事先(a priori)消除掉，那么就需要评估6个项集。\n保持这个想法假设在迭代2过程中发现${A,B}$和${B,C}$是频繁的，而${A,C}$不是频繁的，尽管迭代3通常会从评估${A,B,C}$的支持度开始，但是这一步根本没有发生的必要。因此，在迭代3中就没有生成新的项集，算法将终止。此时，Apriori算法的第二阶段将会开始。给定一组频繁项集，根据所有可能的子集产生关联规则。例如，${A，B}$ 将产生候选规则${A}\\rightarrow{B}$ 和 ${B}\\rightarrow{A}$。这些规则将根据最小置信度阈值评估，任何不满足所期望的置信度的规则将被消除。\n数据处理 来自现实世界中的超市经营一个月额购物数据包含了9835次交易。可能有5中不同品牌的牛奶，一打不同类型的衣物洗涤剂和3中品牌的咖啡。鉴于零售商的大小适中，假定他们不是非常关注寻找只应用于特定品牌的牛奶或者洗涤剂的规则。考虑到这一点，所有的品牌名称就可以从购买数据中去除。这将食品杂货的数量减少到更易于管理的169个类型，采用大类，比如鸡肉、冷冻食品、人造黄油和汽水。\n事务型数据的存储形式稍微有点不同，事务型数据的形式更自由。数据中的每一行指定一个单一的实例(案例)——在本例中，为一次交易。然而，每条记录包括用逗号隔开的任意数量的产品清单，从一到许多，而不是一组特征。从本质上讲，就是实例(案例)之间的特征可能是不同的。\n1 2  groceries \u0026lt;- read.csv(\u0026#34;../data/Chapter 08/groceries.csv\u0026#34;, header = FALSE) head(groceries)   A data.frame: 6 × 4\r\rV1V2V3V4\r\u0026lt;chr\u0026gt;\u0026lt;chr\u0026gt;\u0026lt;chr\u0026gt;\u0026lt;chr\u0026gt;\r\r\r1citrus fruit semi-finished breadmargarine ready soups \r2tropical fruit yogurt coffee  \r3whole milk    \r4pip fruit yogurt cream cheese meat spreads \r5other vegetableswhole milk condensed milklong life bakery product\r6whole milk butter yogurt rice \r\r\r数据准备——为交易数据创建一个稀疏矩阵 采用稀疏矩阵(sparse matrix)的数据结构。稀疏矩阵的每一行表示一次交易，用列(即特征)表示可能出现在消费者购物篮中的每一件商品。因为在杂货店数据中有169类不同的商品，所以稀疏矩阵将包含169列。一旦增加额外的交易和商品，传统的数据结构很快就会变得过大而导致内存不足。即使这里使用的事务型数据集相对较小，但是矩阵包含了将近170万个单元(元素)，其中大部分单元(元素)为零(因此命名为\u0026quot;稀疏\u0026quot;矩阵)。因为存储的所有这些零值没有益处，所以稀疏矩阵实际上在内存中没有存储完整的矩阵，只是存储了由一个商品所占用的单元(元素)，这使得该结构的内存效率比一个大小相当的矩阵或者数据框的内存效率更高。\n1 2 3 4 5 6 7 8  #为了根据事务型数据创建稀疏矩阵的数据结构，可以使用关联规则(arules)添加包提供的函数。 library(Matrix) library(arules) # read.transactions()函数可以产生一个适用于事务型数据的稀疏矩阵，参数sep=\u0026#34;,\u0026#34;指定输入到文件中的项之间用逗号隔开。 # 将groceries.csv数据读入到一个名为groceries的稀疏矩阵中。 groceries \u0026lt;- read.transactions(\u0026#34;../data/Chapter 08/groceries.csv\u0026#34;,sep = \u0026#34;,\u0026#34;) summary(groceries)   Warning message:\r\u0026quot;程辑包'arules'是用R版本4.1.1 来建造的\u0026quot;\r载入程辑包：'arules'\rThe following objects are masked from 'package:base':\rabbreviate, write\rtransactions as itemMatrix in sparse format with\r9835 rows (elements/itemsets/transactions) and\r169 columns (items) and a density of 0.02609146 most frequent items:\rwhole milk other vegetables rolls/buns soda 2513 1903 1809 1715 yogurt (Other) 1372 34055 element (itemset/transaction) length distribution:\rsizes\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 2159 1643 1299 1005 855 645 545 438 350 246 182 117 78 77 55 46 17 18 19 20 21 22 23 24 26 27 28 29 32 29 14 14 9 11 4 6 1 1 1 1 3 1 Min. 1st Qu. Median Mean 3rd Qu. Max. 1.000 2.000 3.000 4.409 6.000 32.000 includes extended item information - examples:\rlabels\r1 abrasive cleaner\r2 artif. sweetener\r3 baby cosmetics\r密度(density)值0.02609146(2.6%)指的是非零矩阵单元的比例。因为矩阵中共有9835×169=1662115个位置，所以可以计算在商品经营期的30天内，共有1162115×0.02609146=43367件商品被够买(假设没有重复的商品被购买)。进一步可以确定平均交易包含了44367/9835=4.409种不同的杂货商品。输出的下一块列出了事务型数据中最常购买的商品。因为2513/9835=0.2555，可以确定whole milk(全脂牛奶)有25.6%的概率出现在交易中，位于清单上的其他常见商品有other vegetable(其他蔬菜)、roll/buns(面包/馒头)、soda(汽水)和yogurt(酸奶)。最后，总共包含2159次交易只包含一件单一的商品，而有一次交易包含了32类商品，第一四分位数和中位数的购买规模分别为2类商品和3类商品，这意味着25%的交易包含了两3件或者更少的商品，约一半的交易中的商品数在3类左右，均值4.409与我们手动计算的值是一致的。\narules包包含了一些用于检查交易数据的有用功能。使用inspec()函数与向量运算的组合，可以查看稀疏矩阵的内容。前5项交易如下。这符合原始CSV文件。\n1  inspect(groceries[1:5])   items [1] {citrus fruit, margarine, ready soups, semi-finished bread} [2] {coffee, tropical fruit, yogurt} [3] {whole milk} [4] {cream cheese, meat spreads, pip fruit, yogurt} [5] {condensed milk, long life bakery product,\rother vegetables, whole milk} 若要研究一件特定的商品(即一列数据)，可以使用row，column矩阵概念。同时与函数itemFrequency()一起使用，可以看到包含该数据的交易比例。例如，这使得可以看到groceries数据中前3件商品的支持度。注意，稀疏矩阵中商品所在的列是按字母表的顺序排列的。abrasive cleaner(擦洗剂)和artif. sweetener(人造甜味剂)大约以0.3%的比例出现在交易中，而baby cosmetics(婴儿用品)大约以0.06%的比例出现在交易中。\n1  groceries   transactions in sparse format with\r9835 transactions (rows) and\r169 items (columns)\r1  itemFrequency(groceries[ ,1:3])   \r.dl-inline {width: auto; margin:0; padding: 0}\r.dl-inlinedt, .dl-inlinedd {float: none; width: auto; display: inline-block}\r.dl-inlinedt::after {content: \":\\0020\"; padding-right: .5ex}\r.dl-inlinedt:not(:first-of-type) {padding-left: .5ex}\rabrasive cleaner0.00355871886120996artif. sweetener0.0032536858159634baby cosmetics0.000610066090493137\r可视化商品的支持度——商品的频率图 为了直观地呈现这些统计数据，可以使用itemFrequencyPlot()函数，这可以生成一个用于特定描绘所包含的特定商品的交易比例的柱状图。因为事务型数据包含了非常多项，所以时常需要限制出现在图中的项，以便产生一幅清晰的图。如果希望获得那些出现在最小交易比例中的商品，那么可以在itemFrequencyPlot()函数中运用support参数。这生成了一个直方图，显示了groceries数据集中支持度至少为10%的8类商品。\n1  itemFrequencyPlot(groceries, support = 0.1)   如果更愿意限制图中商品的具体数量，那么可以使用itemFrequencyPlot()函数中使用topN参数。直方图根据支持度降序排列，下图显示了groceries数据中的前20类商品：\n1  itemFrequencyPlot(groceries, topN = 20)   可视化商品的支持度——商品的频率图 可视化整个稀疏矩阵，需要使用image()函数。前五次交易的稀疏矩阵如下。生成的图描绘了一个5行169列的矩阵，表示我们要求的5次交易和169类可能的商品。矩阵中填充有黑色的单元格表示在此次交易(行)中,该商品(列)被购买了。管这个图形很小，阅读起来会稍微有些困难，但是可以看到第一次、第四次和第五次交易个包含了4类商品，因为它们所在的行有4个单元格被填充了。也可以看到在第三行、第五行、第二行和第四行有一类共同的商品(在图的右侧)。图中的模式可能有助于揭示交易或者商品的有趣部分，特别是当数据以有趣的方式排序后。例如，如果交易按日期排序，那么黑色圆点的图案可能会揭示人们购买商品的数量或者类型的季节性影响。或许在圣诞节(Christmas)或者光明节(Hanukkah)前后，玩具的购买更加常见；或许在万圣节(Halloween)前后，糖果变得更受欢迎。如果商品也被分类那么这种类型的可视化可能会特被有效。然而，在大多数情况下，图形看上去都是相当随机的，就像电视荧屏上的静电一样。\n1  image(groceries[1:5])   这种可视化对于超大型的交易数据集是没有用的，因为单元格会太小而无法辨别不过，通过将其与sample()函数结合，可以看到稀疏矩阵中一组随机抽抽样的交易。下面看起来像是随机选择的100次交易。这样就产生了，一个100行169列的矩阵图。少数列的黑点看起来是相当稠密的，表明该商店里有一些非常受欢迎的商品，但总体来说点的分布还是相当随机的。\n1  image(sample(groceries, 100))   模型训练 找到适当的支持度和置信度参数来产生合理数量的关联规则可能需要进行大量的实验与误差评估。使用默认的support=0.1和confidence=0.8，得不到任何规则。因此需要放宽搜索范围。\n1  apriori(groceries)   Apriori\rParameter specification:\rconfidence minval smax arem aval originalSupport maxtime support minlen\r0.8 0.1 1 none FALSE TRUE 5 0.1 1\rmaxlen target ext\r10 rules TRUE\rAlgorithmic control:\rfilter tree heap memopt load sort verbose\r0.1 TRUE TRUE FALSE TRUE 2 TRUE\rAbsolute minimum support count: 983 set item appearances ...[0 item(s)] done [0.00s].\rset transactions ...[169 item(s), 9835 transaction(s)] done [0.00s].\rsorting and recoding items ... [8 item(s)] done [0.00s].\rcreating transaction tree ... done [0.00s].\rchecking subsets of size 1 2 done [0.00s].\rwriting ... [0 rule(s)] done [0.00s].\rcreating S4 object ... done [0.00s].\rset of 0 rules 0.1的支持度意味着为了产生一个规则，一种商品必须至少出现在$0.1\\times 9835=983.5$次交易中。事先想好需要的最小交易数量，据此可以计算所需要的支持度。如果置信度太低，可能会被大量不可靠的规则淹没，而过高将会被显而易见或者不可避免的规则所限制。minlen=2有助于消除包含少于两类商品的规则。\n1 2 3  groceryrules \u0026lt;- apriori(groceries, parameter = list(support = 0.006, confidence = 0.25, minlen = 2)) groceryrules   Apriori\rParameter specification:\rconfidence minval smax arem aval originalSupport maxtime support minlen\r0.25 0.1 1 none FALSE TRUE 5 0.006 2\rmaxlen target ext\r10 rules TRUE\rAlgorithmic control:\rfilter tree heap memopt load sort verbose\r0.1 TRUE TRUE FALSE TRUE 2 TRUE\rAbsolute minimum support count: 59 set item appearances ...[0 item(s)] done [0.00s].\rset transactions ...[169 item(s), 9835 transaction(s)] done [0.00s].\rsorting and recoding items ... [109 item(s)] done [0.00s].\rcreating transaction tree ... done [0.00s].\rchecking subsets of size 1 2 3 4 done [0.00s].\rwriting ... [463 rule(s)] done [0.00s].\rcreating S4 object ... done [0.00s].\rset of 463 rules 性能评估 1  summary(groceryrules)   set of 463 rules\rrule length distribution (lhs + rhs):sizes\r2 3 4 150 297 16 Min. 1st Qu. Median Mean 3rd Qu. Max. 2.000 2.000 3.000 2.711 3.000 4.000 summary of quality measures:\rsupport confidence coverage lift Min. :0.006101 Min. :0.2500 Min. :0.009964 Min. :0.9932 1st Qu.:0.007117 1st Qu.:0.2971 1st Qu.:0.018709 1st Qu.:1.6229 Median :0.008744 Median :0.3554 Median :0.024809 Median :1.9332 Mean :0.011539 Mean :0.3786 Mean :0.032608 Mean :2.0351 3rd Qu.:0.012303 3rd Qu.:0.4495 3rd Qu.:0.035892 3rd Qu.:2.3565 Max. :0.074835 Max. :0.6600 Max. :0.255516 Max. :3.9565 count Min. : 60.0 1st Qu.: 70.0 Median : 86.0 Mean :113.5 3rd Qu.:121.0 Max. :736.0 mining info:\rdata ntransactions support confidence\rgroceries 9835 0.006 0.25\r有150个规则只包含两类商品，而又297个规则包含3类商品，16个规则包含4类商品。提升度用来度量一类商品相对于它的一般购买率，此时被购买的可能性有多大。$$lift(X\\rightarrow Y)=\\frac{confidence(X\\rightarrow Y)}{support(X)})$$一个大的提升值是一个i重要的指标，它表明一个规则是很重要的，并反映了商品之间的真实联系。查看前三个规则：\n1  inspect(groceryrules[1:3])   lhs rhs support confidence coverage [1] {potted plants} =\u0026gt; {whole milk} 0.006914082 0.4000000 0.01728521\r[2] {pasta} =\u0026gt; {whole milk} 0.006100661 0.4054054 0.01504830\r[3] {herbs} =\u0026gt; {root vegetables} 0.007015760 0.4312500 0.01626843\rlift count\r[1] 1.565460 68 [2] 1.586614 60 [3] 3.956477 69 lhs和rhs表示规则的前项和后项。（市场）购物篮分析的目的就是要找到可行的(actionalble)规则或者能够提供明确的有益启示的规则。\n性能提升 对关联规则集合排序，根据提升度获取最好的5个规则：\n1  inspect(sort(groceryrules, by = \u0026#39;lift\u0026#39;)[1:5])   lhs rhs support confidence coverage lift count\r[1] {herbs} =\u0026gt; {root vegetables} 0.007015760 0.4312500 0.01626843 3.956477 69\r[2] {berries} =\u0026gt; {whipped/sour cream} 0.009049314 0.2721713 0.03324860 3.796886 89\r[3] {other vegetables, tropical fruit, whole milk} =\u0026gt; {root vegetables} 0.007015760 0.4107143 0.01708185 3.768074 69\r[4] {beef, other vegetables} =\u0026gt; {root vegetables} 0.007930859 0.4020619 0.01972547 3.688692 78\r[5] {other vegetables, tropical fruit} =\u0026gt; {pip fruit} 0.009456024 0.2634561 0.03589222 3.482649 93\r提取关联规则的子集：\n1 2  berryrules \u0026lt;- subset(groceryrules, items %in% \u0026#39;berries\u0026#39;) inspect(berryrules)   lhs rhs support confidence coverage lift [1] {berries} =\u0026gt; {whipped/sour cream} 0.009049314 0.2721713 0.0332486 3.796886\r[2] {berries} =\u0026gt; {yogurt} 0.010574479 0.3180428 0.0332486 2.279848\r[3] {berries} =\u0026gt; {other vegetables} 0.010269446 0.3088685 0.0332486 1.596280\r[4] {berries} =\u0026gt; {whole milk} 0.011794611 0.3547401 0.0332486 1.388328\rcount\r[1] 89 [2] 104 [3] 101 [4] 116 将关联规则保存到文件或者数据框中：\n1 2 3 4 5  write(groceryrules, file = \u0026#39;./groceryrules.csv\u0026#39;, sep = \u0026#39;,\u0026#39;, quote = TRUE, row.name = FALSE) # 转换为数据框 groceryrules_df \u0026lt;- as(groceryrules, \u0026#34;data.frame\u0026#34;) str(groceryrules_df)   'data.frame':\t463 obs. of 6 variables:\r$ rules : chr \u0026quot;{potted plants} =\u0026gt; {whole milk}\u0026quot; \u0026quot;{pasta} =\u0026gt; {whole milk}\u0026quot; \u0026quot;{herbs} =\u0026gt; {root vegetables}\u0026quot; \u0026quot;{herbs} =\u0026gt; {other vegetables}\u0026quot; ...\r$ support : num 0.00691 0.0061 0.00702 0.00773 0.00773 ...\r$ confidence: num 0.4 0.405 0.431 0.475 0.475 ...\r$ coverage : num 0.0173 0.015 0.0163 0.0163 0.0163 ...\r$ lift : num 1.57 1.59 3.96 2.45 1.86 ...\r$ count : int 68 60 69 76 76 69 70 67 63 88 ...\rK-Means聚类探寻青少年市场细分 如果一开始从无标签的数据入手，可以使用聚类来创建分类标签。然后可以用一个有监督的学习算法来寻找这些类中最重要的预测指标，这称为半监督学习(semi-supervised learning)。\n使用距离计算，所有的数据必须都是数值型的，而且所有的值都需要提前标准化到一个标准范围内。\n K均值算法对随机选择的聚类中心很敏感 设定非常大的K，提升同质性的同时也增加了过拟合的风险。  随着额外的类的加入，类内部的同质性应该是期望上升的，异质性也随着越来越多的类而持续减小。肘部法(elbow method)试图度量对于不同的K值，找到一个K，使得高于该值之后的收益会发生递减，这个K值称为肘部点(elbow point)。\n鉴于青少年社交网络服务(Social Networking Service, SNS)页面的文字，可以通过聚类确定有着相同兴趣的团体。30000名美国高中生社交网络随机案例数据均匀采样于4个高中毕业年份(2006-2009)，每个青少年的性别(gender)年龄(age)以及社交网络服务上的交友数(number of SNS friends)都会被记录。文本挖缺工具可用来将剩余的社交网络服务页面内容划分成单词。从出现的所有页面的前500个单词中，36个单词被选来代表5大兴趣类，即课外活动(extracurricular activity)时尚(fashion)、宗教(religion)、浪漫(romance)和反社会行为(antisocial behavior)这36个单词包括足球(football)、性感(sexy)、亲吻(kissed)、圣经(bible)、购物(shopping)、死亡(death)和药物(drugs)等单词。对每个人来说，最终的数据集表示每个单词出现在个人社交网络服务文件中的次数。\n数据处理 1 2  teens \u0026lt;- read.csv(\u0026#34;../data/Chapter 09/snsdata.csv\u0026#34;) str(teens)   'data.frame':\t30000 obs. of 40 variables:\r$ gradyear : int 2006 2006 2006 2006 2006 2006 2006 2006 2006 2006 ...\r$ gender : chr \u0026quot;M\u0026quot; \u0026quot;F\u0026quot; \u0026quot;M\u0026quot; \u0026quot;F\u0026quot; ...\r$ age : num 19 18.8 18.3 18.9 19 ...\r$ friends : int 7 0 69 0 10 142 72 17 52 39 ...\r$ basketball : int 0 0 0 0 0 0 0 0 0 0 ...\r$ football : int 0 1 1 0 0 0 0 0 0 0 ...\r$ soccer : int 0 0 0 0 0 0 0 0 0 0 ...\r$ softball : int 0 0 0 0 0 0 0 1 0 0 ...\r$ volleyball : int 0 0 0 0 0 0 0 0 0 0 ...\r$ swimming : int 0 0 0 0 0 0 0 0 0 0 ...\r$ cheerleading: int 0 0 0 0 0 0 0 0 0 0 ...\r$ baseball : int 0 0 0 0 0 0 0 0 0 0 ...\r$ tennis : int 0 0 0 0 0 0 0 0 0 0 ...\r$ sports : int 0 0 0 0 0 0 0 0 0 0 ...\r$ cute : int 0 1 0 1 0 0 0 0 0 1 ...\r$ sex : int 0 0 0 0 1 1 0 2 0 0 ...\r$ sexy : int 0 0 0 0 0 0 0 1 0 0 ...\r$ hot : int 0 0 0 0 0 0 0 0 0 1 ...\r$ kissed : int 0 0 0 0 5 0 0 0 0 0 ...\r$ dance : int 1 0 0 0 1 0 0 0 0 0 ...\r$ band : int 0 0 2 0 1 0 1 0 0 0 ...\r$ marching : int 0 0 0 0 0 1 1 0 0 0 ...\r$ music : int 0 2 1 0 3 2 0 1 0 1 ...\r$ rock : int 0 2 0 1 0 0 0 1 0 1 ...\r$ god : int 0 1 0 0 1 0 0 0 0 6 ...\r$ church : int 0 0 0 0 0 0 0 0 0 0 ...\r$ jesus : int 0 0 0 0 0 0 0 0 0 2 ...\r$ bible : int 0 0 0 0 0 0 0 0 0 0 ...\r$ hair : int 0 6 0 0 1 0 0 0 0 1 ...\r$ dress : int 0 4 0 0 0 1 0 0 0 0 ...\r$ blonde : int 0 0 0 0 0 0 0 0 0 0 ...\r$ mall : int 0 1 0 0 0 0 2 0 0 0 ...\r$ shopping : int 0 0 0 0 2 1 0 0 0 1 ...\r$ clothes : int 0 0 0 0 0 0 0 0 0 0 ...\r$ hollister : int 0 0 0 0 0 0 2 0 0 0 ...\r$ abercrombie : int 0 0 0 0 0 0 0 0 0 0 ...\r$ die : int 0 0 0 0 0 0 0 0 0 0 ...\r$ death : int 0 0 1 0 0 0 0 0 0 0 ...\r$ drunk : int 0 0 0 0 1 1 0 0 0 0 ...\r$ drugs : int 0 0 0 0 1 0 0 0 0 0 ...\r处理age中的异常值。如果年龄(age)大于等于13岁且小于20岁，就将teens\\$age值赋给teens\\$age，否则，值为NA。\n1 2 3 4 5 6  # gender和age中有缺失值 table(teens$gender, useNA = \u0026#34;ifany\u0026#34;) summary(teens$age) teens$age \u0026lt;- ifelse(teens$age \u0026gt;=13 \u0026amp; teens$age \u0026lt;20, teens$age, NA) summary(teens$age)   F M \u0026lt;NA\u0026gt; 22054 5222 2724 Min. 1st Qu. Median Mean 3rd Qu. Max. NA's 3.086 16.312 17.287 17.994 18.259 106.927 5086 Min. 1st Qu. Median Mean 3rd Qu. Max. NA's 13.03 16.30 17.27 17.25 18.22 20.00 5523 缺失值的虚拟编码 对于分类数据像性别(gender)，一种解决方法就是将缺失值作为一个单独的类别。虚拟编码涉及为名义特征中的每个水平值单独创建一个取值为1或者为0的二元虚拟变量。有一个类水平值被排除在外，因为它可以通过其他类的水平值来进行推断。\n1 2 3 4 5 6  teens$female \u0026lt;- ifelse(teens$gender == \u0026#34;F\u0026#34; \u0026amp; !is.na(teens$gender), 1, 0) teens$no_gender \u0026lt;- ifelse(is.na(teens$gender), 1, 0) table(teens$gender, useNA = \u0026#34;ifany\u0026#34;) table(teens$female, useNA = \u0026#34;ifany\u0026#34;) table(teens$no_gender, useNA = \u0026#34;ifany\u0026#34;)   F M \u0026lt;NA\u0026gt; 22054 5222 2724 0 1 7946 22054 0 1 27276 2724  插补(inputation)缺失值  1  mean(teens$age, na.rm = TRUE)   17.2524289332843\r数据中，学生的平均年龄大约为17岁。这里我们只是达到了部分目的，我们真正需要的是每一个毕业年份的年龄平均值。\n1 2  # It computes statistics for subgroups of data. aggregate(data =teens, age ~ gradyear, mean, na.rm = TRUE)   A data.frame: 4 × 2\r\rgradyearage\r\u0026lt;int\u0026gt;\u0026lt;dbl\u0026gt;\r\r\r200618.65586\r200717.70617\r200816.76770\r200915.81957\r\r\raggregate()的输出在一个数据框中，但是还需要额外的工作来把它合并到我们的原始数据中。\n可以使用ave()函数，该函数返回一个具有重复的组均值的向量，使得结果在长度上等于原始向量的长度：\nave_age \u0026lt;- ave(teens$age, teens$gradyear, FUN = function(x) mean(x, na.rm = TRUE))\rtable(ave_age)\rtable(teens$gradyear)\r# 插值\rteens$age \u0026lt;- ifelse(is.na(teens$age), ave_age, teens$age)\rsummary(teens$age)\rave_age\r15.8195733445096 16.7677007371007 17.7061723749799 18.6558579508727 7500 7500 7500 7500 2006 2007 2008 2009 7500 7500 7500 7500 Min. 1st Qu. Median Mean 3rd Qu. Max. 13.03 16.28 17.24 17.24 18.21 20.00  模型训练 1 2 3 4  interests \u0026lt;- teens[5:40] interests_z \u0026lt;- as.data.frame(lapply(interests, scale)) # lapply()返回一个矩阵 set.seed(2345) teen_clusters \u0026lt;- kmeans(interests_z, 5)   性能评估 1 2 3 4  # 或则kemeans()聚类的大小 teen_clusters$size # 查看聚类质心的坐标 teen_clusters$centers   1038 601 4066 2696 21599\rA matrix: 5 × 36 of type dbl\r\rbasketballfootballsoccersoftballvolleyballswimmingcheerleadingbaseballtennissports⋯blondemallshoppingclotheshollisterabercrombiediedeathdrunkdrugs\r\r\r1 0.362160730 0.37985213 0.13734997 0.1272107 0.09247518 0.26180286 0.2159945 0.25312305 0.11991682 0.77040675⋯ 0.36322464 0.622896285 0.27607550 1.245121599 0.31525537 0.4131560 1.712160983 0.94713629 1.83371069 2.73878856\r2-0.094426312 0.06691768-0.09956009-0.0379725-0.07286202 0.04578401-0.1070370-0.11182941 0.04027335-0.10638613⋯-0.01238629-0.087713363-0.03710273-0.004395251-0.16788599-0.1413652 0.008941101 0.05464759-0.08699556-0.06414588\r3 0.003980104 0.09524062 0.05342109-0.0496864-0.01459648 0.32944934 0.5142451-0.04933628 0.06703386-0.05435093⋯ 0.03301526 0.808620531 1.07073115 0.616207360 0.85951603 0.7935060 0.062399295 0.12642222 0.03594162-0.05888141\r4 1.372334818 1.19570343 0.55621097 1.1304527 1.07177211 0.08513210 0.0400367 1.09279737 0.13887184 1.08316097⋯ 0.03690938-0.004723697 0.03497875 0.016201064-0.08381546-0.0861708-0.067312427-0.01611162-0.06891763-0.08795059\r5-0.186822093-0.18729427-0.08331351-0.1368072-0.13344819-0.08650052-0.1092056-0.13616893-0.03683671-0.15903307⋯-0.02793327-0.179127117-0.21816580-0.177738408-0.16182051-0.1545430-0.085876102-0.06882571-0.08386703-0.10777278\r\r\r输出的行（编号1~5）指的是类，而输出中的数值表示位于该列顶部的兴趣变量的平均值由于所有的值已经进行了z-score标准化，所以负值表示低于所有学生的总体均值，而正值表示高于所有学生的总体均值。例如，第三行在篮球列中值最高，这类4在所有类中对篮球的平均兴趣最高。Given this subset of the interest data, we can already infer some characteristics of the clusters. Cluster 3 is substantially above the mean interest level on all the sports.\n性能提升 1 2  teens$cluster \u0026lt;- teen_clusters$cluster # 聚类结果添加到原数据集 teens[1:5, c(\u0026#34;cluster\u0026#34;, \u0026#34;gender\u0026#34;, \u0026#34;age\u0026#34;, \u0026#34;friends\u0026#34;)]   A data.frame: 5 × 4\r\rclustergenderagefriends\r\u0026lt;int\u0026gt;\u0026lt;chr\u0026gt;\u0026lt;dbl\u0026gt;\u0026lt;int\u0026gt;\r\r\r15M 18.982 7\r23F 18.801 0\r35M 18.33569\r45F 18.875 0\r51NA18.99510\r\r\r不同类的年龄没有差异，原因可能是身份在高中之前就已经确定了。\n1  aggregate(data = teens, age ~ cluster, mean)   A data.frame: 5 × 2\r\rclusterage\r\u0026lt;int\u0026gt;\u0026lt;dbl\u0026gt;\r\r\r117.09319\r217.38488\r317.03773\r417.03759\r517.30265\r\r\r但是按类划分，女性的比例有一些实质性的差异。\n1  aggregate(data = teens, female ~ cluster, mean)   A data.frame: 5 × 2\r\rclusterfemale\r\u0026lt;int\u0026gt;\u0026lt;dbl\u0026gt;\r\r\r10.8025048\r20.7237937\r30.8866208\r40.6984421\r50.7082735\r\r\r不同类的朋友数量也有显著差异。\n1  aggregate(data = teens, friends ~ cluster, mean)   A data.frame: 5 × 2\r\rclusterfriends\r\u0026lt;int\u0026gt;\u0026lt;dbl\u0026gt;\r\r\r130.66570\r232.79368\r338.54575\r435.91728\r527.79221\r\r\r","description":" ","id":6,"section":"booknote","tags":["R"],"title":"《机器学习与R语言》","uri":"https://www.metasphinx.com/zh/booknote/20210924_machine_learning_with_r/"},{"content":"这是Lingdong Huang大神的一个项目，可以随机生成几种鱼的图像，详细的信息参见：fishdraw。安装Node.js后，简单的示例如下：\nnode fishdraw.js --seed \u0026quot;Fish in the pool\u0026quot; --format smil \u0026gt; fish_in_the_pool.svg\r","description":"Github上一个很有意思的项目，随机生成几种鱼的图像","id":7,"section":"posts","tags":["Fish4Fun"],"title":"fishdraw","uri":"https://www.metasphinx.com/zh/posts/2021/2021-08-16-procedurally-generated-fish-drawings/"},{"content":"Here is Guankui Liu.\n","description":"","id":8,"section":"","tags":null,"title":"About","uri":"https://www.metasphinx.com/zh/about/"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae.\nNote that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\n Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Inline  Markdown  In  Table     italics bold strikethrough  code    Code Blocks Code block with backticks html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Code block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10  \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Item   First Sub-item Second Sub-item  Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn: Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\n The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n  ","description":"Sample article showcasing basic Markdown syntax and formatting for HTML elements.","id":9,"section":"posts","tags":["markdown","css","html","themes"],"title":"Markdown Syntax Guide","uri":"https://www.metasphinx.com/zh/posts/markdown-syntax/"},{"content":"We need goldmark katex entension which is not yet we have: [https://github.com/gohugoio/hugo/issues/6544](https://github.com/gohugoio/hugo/issues/6544)  Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\n Create a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so:  {{ if or .Params.math .Site.Params.math }} {{ partial \u0026quot;math.html\u0026quot; . }} {{ end }}  To enable KaTex globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTex on a per page basis include the parameter math: true in content files.  Note: Use the online reference of Supported TeX Functions\nExamples Inline math: $$ \\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887… $$\nBlock math:\n$$\n\\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } }\n$$\n","description":"A brief guide to setup KaTeX","id":10,"section":"posts","tags":null,"title":"Math Typesetting","uri":"https://www.metasphinx.com/zh/posts/math-typesetting/"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site’s configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 🙈 🙉 🙉 🙊 🙊\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n1 2 3  .emoji { font-family: Apple Color Emoji,Segoe UI Emoji,NotoColorEmoji,Segoe UI Symbol,Android Emoji,EmojiSymbols; }  ","description":"Guide to emoji usage in Hugo","id":11,"section":"posts","tags":["emoji","gamoji","namoji","bamoji","amoji"],"title":"Emoji Support","uri":"https://www.metasphinx.com/zh/posts/emoji-support/"},{"content":"Sample images from Pixabay\n","description":"cartoon gallery","id":12,"section":"gallery","tags":null,"title":"Cartoon","uri":"https://www.metasphinx.com/zh/gallery/cartoon/"},{"content":"Sample images from Pixabay\n","description":"photo gallery","id":13,"section":"gallery","tags":null,"title":"Photo","uri":"https://www.metasphinx.com/zh/gallery/photo/"}]